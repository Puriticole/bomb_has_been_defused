ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB72:
  26              		.file 1 "Core/Src/stm32l1xx_it.c"
   1:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l1xx_it.c **** /**
   3:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l1xx_it.c ****   * @file    stm32l1xx_it.c
   5:Core/Src/stm32l1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l1xx_it.c ****   * @attention
   8:Core/Src/stm32l1xx_it.c ****   *
   9:Core/Src/stm32l1xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32l1xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32l1xx_it.c ****   *
  12:Core/Src/stm32l1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32l1xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32l1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32l1xx_it.c ****   *
  16:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32l1xx_it.c ****   */
  18:Core/Src/stm32l1xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32l1xx_it.c **** 
  20:Core/Src/stm32l1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32l1xx_it.c **** #include "main.h"
  22:Core/Src/stm32l1xx_it.c **** #include "stm32l1xx_it.h"
  23:Core/Src/stm32l1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32l1xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32l1xx_it.c **** 
  27:Core/Src/stm32l1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32l1xx_it.c **** 
  30:Core/Src/stm32l1xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32l1xx_it.c **** 
  32:Core/Src/stm32l1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 2


  33:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32l1xx_it.c **** 
  35:Core/Src/stm32l1xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32l1xx_it.c **** 
  37:Core/Src/stm32l1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32l1xx_it.c **** 
  40:Core/Src/stm32l1xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32l1xx_it.c **** 
  42:Core/Src/stm32l1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32l1xx_it.c **** 
  45:Core/Src/stm32l1xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32l1xx_it.c **** 
  47:Core/Src/stm32l1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32l1xx_it.c **** 
  50:Core/Src/stm32l1xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32l1xx_it.c **** 
  52:Core/Src/stm32l1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32l1xx_it.c **** 
  55:Core/Src/stm32l1xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32l1xx_it.c **** 
  57:Core/Src/stm32l1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32l1xx_it.c **** extern DMA_HandleTypeDef hdma_adc;
  59:Core/Src/stm32l1xx_it.c **** extern ADC_HandleTypeDef hadc;
  60:Core/Src/stm32l1xx_it.c **** extern TIM_HandleTypeDef htim2;
  61:Core/Src/stm32l1xx_it.c **** extern TIM_HandleTypeDef htim9;
  62:Core/Src/stm32l1xx_it.c **** extern TIM_HandleTypeDef htim11;
  63:Core/Src/stm32l1xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32l1xx_it.c **** 
  65:Core/Src/stm32l1xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32l1xx_it.c **** 
  67:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32l1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  69:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32l1xx_it.c **** /**
  71:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32l1xx_it.c ****   */
  73:Core/Src/stm32l1xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32l1xx_it.c **** {
  27              		.loc 1 74 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  75:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32l1xx_it.c **** 
  77:Core/Src/stm32l1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32l1xx_it.c ****   while (1)
  34              		.loc 1 79 3 discriminator 1 view .LVU1
  80:Core/Src/stm32l1xx_it.c ****   {
  81:Core/Src/stm32l1xx_it.c ****   }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 3


  35              		.loc 1 81 3 discriminator 1 view .LVU2
  79:Core/Src/stm32l1xx_it.c ****   {
  36              		.loc 1 79 9 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE72:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB73:
  82:Core/Src/stm32l1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32l1xx_it.c **** }
  84:Core/Src/stm32l1xx_it.c **** 
  85:Core/Src/stm32l1xx_it.c **** /**
  86:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32l1xx_it.c ****   */
  88:Core/Src/stm32l1xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32l1xx_it.c **** {
  50              		.loc 1 89 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  90:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32l1xx_it.c **** 
  92:Core/Src/stm32l1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32l1xx_it.c ****   while (1)
  57              		.loc 1 93 3 discriminator 1 view .LVU5
  94:Core/Src/stm32l1xx_it.c ****   {
  95:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32l1xx_it.c ****   }
  58              		.loc 1 97 3 discriminator 1 view .LVU6
  93:Core/Src/stm32l1xx_it.c ****   {
  59              		.loc 1 93 9 discriminator 1 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE73:
  64              		.section	.text.MemManage_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	MemManage_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	MemManage_Handler:
  72              	.LFB74:
  98:Core/Src/stm32l1xx_it.c **** }
  99:Core/Src/stm32l1xx_it.c **** 
 100:Core/Src/stm32l1xx_it.c **** /**
 101:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Memory management fault.
 102:Core/Src/stm32l1xx_it.c ****   */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 4


 103:Core/Src/stm32l1xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32l1xx_it.c **** {
  73              		.loc 1 104 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
 105:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32l1xx_it.c **** 
 107:Core/Src/stm32l1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32l1xx_it.c ****   while (1)
  80              		.loc 1 108 3 discriminator 1 view .LVU9
 109:Core/Src/stm32l1xx_it.c ****   {
 110:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32l1xx_it.c ****   }
  81              		.loc 1 112 3 discriminator 1 view .LVU10
 108:Core/Src/stm32l1xx_it.c ****   {
  82              		.loc 1 108 9 discriminator 1 view .LVU11
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE74:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	BusFault_Handler:
  95              	.LFB75:
 113:Core/Src/stm32l1xx_it.c **** }
 114:Core/Src/stm32l1xx_it.c **** 
 115:Core/Src/stm32l1xx_it.c **** /**
 116:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:Core/Src/stm32l1xx_it.c ****   */
 118:Core/Src/stm32l1xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32l1xx_it.c **** {
  96              		.loc 1 119 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
 120:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32l1xx_it.c **** 
 122:Core/Src/stm32l1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32l1xx_it.c ****   while (1)
 103              		.loc 1 123 3 discriminator 1 view .LVU13
 124:Core/Src/stm32l1xx_it.c ****   {
 125:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32l1xx_it.c ****   }
 104              		.loc 1 127 3 discriminator 1 view .LVU14
 123:Core/Src/stm32l1xx_it.c ****   {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 5


 105              		.loc 1 123 9 discriminator 1 view .LVU15
 106 0000 FEE7     		b	.L8
 107              		.cfi_endproc
 108              	.LFE75:
 110              		.section	.text.UsageFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	UsageFault_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	UsageFault_Handler:
 118              	.LFB76:
 128:Core/Src/stm32l1xx_it.c **** }
 129:Core/Src/stm32l1xx_it.c **** 
 130:Core/Src/stm32l1xx_it.c **** /**
 131:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32l1xx_it.c ****   */
 133:Core/Src/stm32l1xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32l1xx_it.c **** {
 119              		.loc 1 134 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L10:
 135:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32l1xx_it.c **** 
 137:Core/Src/stm32l1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32l1xx_it.c ****   while (1)
 126              		.loc 1 138 3 discriminator 1 view .LVU17
 139:Core/Src/stm32l1xx_it.c ****   {
 140:Core/Src/stm32l1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32l1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32l1xx_it.c ****   }
 127              		.loc 1 142 3 discriminator 1 view .LVU18
 138:Core/Src/stm32l1xx_it.c ****   {
 128              		.loc 1 138 9 discriminator 1 view .LVU19
 129 0000 FEE7     		b	.L10
 130              		.cfi_endproc
 131              	.LFE76:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	SVC_Handler:
 141              	.LFB77:
 143:Core/Src/stm32l1xx_it.c **** }
 144:Core/Src/stm32l1xx_it.c **** 
 145:Core/Src/stm32l1xx_it.c **** /**
 146:Core/Src/stm32l1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:Core/Src/stm32l1xx_it.c ****   */
 148:Core/Src/stm32l1xx_it.c **** void SVC_Handler(void)
 149:Core/Src/stm32l1xx_it.c **** {
 142              		.loc 1 149 1 view -0
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 6


 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 150:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 151:Core/Src/stm32l1xx_it.c **** 
 152:Core/Src/stm32l1xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 153:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 154:Core/Src/stm32l1xx_it.c **** 
 155:Core/Src/stm32l1xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 156:Core/Src/stm32l1xx_it.c **** }
 147              		.loc 1 156 1 view .LVU21
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE77:
 152              		.section	.text.DebugMon_Handler,"ax",%progbits
 153              		.align	1
 154              		.global	DebugMon_Handler
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	DebugMon_Handler:
 160              	.LFB78:
 157:Core/Src/stm32l1xx_it.c **** 
 158:Core/Src/stm32l1xx_it.c **** /**
 159:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Debug monitor.
 160:Core/Src/stm32l1xx_it.c ****   */
 161:Core/Src/stm32l1xx_it.c **** void DebugMon_Handler(void)
 162:Core/Src/stm32l1xx_it.c **** {
 161              		.loc 1 162 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 163:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 164:Core/Src/stm32l1xx_it.c **** 
 165:Core/Src/stm32l1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:Core/Src/stm32l1xx_it.c **** 
 168:Core/Src/stm32l1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:Core/Src/stm32l1xx_it.c **** }
 166              		.loc 1 169 1 view .LVU23
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE78:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	PendSV_Handler:
 179              	.LFB79:
 170:Core/Src/stm32l1xx_it.c **** 
 171:Core/Src/stm32l1xx_it.c **** /**
 172:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Pendable request for system service.
 173:Core/Src/stm32l1xx_it.c ****   */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 7


 174:Core/Src/stm32l1xx_it.c **** void PendSV_Handler(void)
 175:Core/Src/stm32l1xx_it.c **** {
 180              		.loc 1 175 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 176:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:Core/Src/stm32l1xx_it.c **** 
 178:Core/Src/stm32l1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:Core/Src/stm32l1xx_it.c **** 
 181:Core/Src/stm32l1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:Core/Src/stm32l1xx_it.c **** }
 185              		.loc 1 182 1 view .LVU25
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE79:
 190              		.section	.text.SysTick_Handler,"ax",%progbits
 191              		.align	1
 192              		.global	SysTick_Handler
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	SysTick_Handler:
 198              	.LFB80:
 183:Core/Src/stm32l1xx_it.c **** 
 184:Core/Src/stm32l1xx_it.c **** /**
 185:Core/Src/stm32l1xx_it.c ****   * @brief This function handles System tick timer.
 186:Core/Src/stm32l1xx_it.c ****   */
 187:Core/Src/stm32l1xx_it.c **** void SysTick_Handler(void)
 188:Core/Src/stm32l1xx_it.c **** {
 199              		.loc 1 188 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI0:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 189:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 190:Core/Src/stm32l1xx_it.c **** 
 191:Core/Src/stm32l1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 192:Core/Src/stm32l1xx_it.c ****   HAL_IncTick();
 208              		.loc 1 192 3 view .LVU27
 209 0002 FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL0:
 193:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 194:Core/Src/stm32l1xx_it.c **** 
 195:Core/Src/stm32l1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 196:Core/Src/stm32l1xx_it.c **** }
 211              		.loc 1 196 1 is_stmt 0 view .LVU28
 212 0006 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE80:
 216              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 8


 217              		.align	1
 218              		.global	DMA1_Channel1_IRQHandler
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	DMA1_Channel1_IRQHandler:
 224              	.LFB81:
 197:Core/Src/stm32l1xx_it.c **** 
 198:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
 199:Core/Src/stm32l1xx_it.c **** /* STM32L1xx Peripheral Interrupt Handlers                                    */
 200:Core/Src/stm32l1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 201:Core/Src/stm32l1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 202:Core/Src/stm32l1xx_it.c **** /* please refer to the startup file (startup_stm32l1xx.s).                    */
 203:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
 204:Core/Src/stm32l1xx_it.c **** 
 205:Core/Src/stm32l1xx_it.c **** /**
 206:Core/Src/stm32l1xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 207:Core/Src/stm32l1xx_it.c ****   */
 208:Core/Src/stm32l1xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 209:Core/Src/stm32l1xx_it.c **** {
 225              		.loc 1 209 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI1:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 210:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 211:Core/Src/stm32l1xx_it.c **** 
 212:Core/Src/stm32l1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 213:Core/Src/stm32l1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc);
 234              		.loc 1 213 3 view .LVU30
 235 0002 0248     		ldr	r0, .L18
 236 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 237              	.LVL1:
 214:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 215:Core/Src/stm32l1xx_it.c **** 
 216:Core/Src/stm32l1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 217:Core/Src/stm32l1xx_it.c **** }
 238              		.loc 1 217 1 is_stmt 0 view .LVU31
 239 0008 08BD     		pop	{r3, pc}
 240              	.L19:
 241 000a 00BF     		.align	2
 242              	.L18:
 243 000c 00000000 		.word	hdma_adc
 244              		.cfi_endproc
 245              	.LFE81:
 247              		.section	.text.ADC1_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.global	ADC1_IRQHandler
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	ADC1_IRQHandler:
 255              	.LFB82:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 9


 218:Core/Src/stm32l1xx_it.c **** 
 219:Core/Src/stm32l1xx_it.c **** /**
 220:Core/Src/stm32l1xx_it.c ****   * @brief This function handles ADC global interrupt.
 221:Core/Src/stm32l1xx_it.c ****   */
 222:Core/Src/stm32l1xx_it.c **** void ADC1_IRQHandler(void)
 223:Core/Src/stm32l1xx_it.c **** {
 256              		.loc 1 223 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI2:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 224:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN ADC1_IRQn 0 */
 225:Core/Src/stm32l1xx_it.c **** 
 226:Core/Src/stm32l1xx_it.c ****   /* USER CODE END ADC1_IRQn 0 */
 227:Core/Src/stm32l1xx_it.c ****   HAL_ADC_IRQHandler(&hadc);
 265              		.loc 1 227 3 view .LVU33
 266 0002 0248     		ldr	r0, .L22
 267 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 268              	.LVL2:
 228:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN ADC1_IRQn 1 */
 229:Core/Src/stm32l1xx_it.c **** 
 230:Core/Src/stm32l1xx_it.c ****   /* USER CODE END ADC1_IRQn 1 */
 231:Core/Src/stm32l1xx_it.c **** }
 269              		.loc 1 231 1 is_stmt 0 view .LVU34
 270 0008 08BD     		pop	{r3, pc}
 271              	.L23:
 272 000a 00BF     		.align	2
 273              	.L22:
 274 000c 00000000 		.word	hadc
 275              		.cfi_endproc
 276              	.LFE82:
 278              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 279              		.align	1
 280              		.global	EXTI9_5_IRQHandler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	EXTI9_5_IRQHandler:
 286              	.LFB83:
 232:Core/Src/stm32l1xx_it.c **** 
 233:Core/Src/stm32l1xx_it.c **** /**
 234:Core/Src/stm32l1xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 235:Core/Src/stm32l1xx_it.c ****   */
 236:Core/Src/stm32l1xx_it.c **** void EXTI9_5_IRQHandler(void)
 237:Core/Src/stm32l1xx_it.c **** {
 287              		.loc 1 237 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 08B5     		push	{r3, lr}
 292              	.LCFI3:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 10


 295              		.cfi_offset 14, -4
 238:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 239:Core/Src/stm32l1xx_it.c **** 
 240:Core/Src/stm32l1xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 241:Core/Src/stm32l1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BTN_4_Pin);
 296              		.loc 1 241 3 view .LVU36
 297 0002 2020     		movs	r0, #32
 298 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 299              	.LVL3:
 242:Core/Src/stm32l1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BTN_3_Pin);
 300              		.loc 1 242 3 view .LVU37
 301 0008 4020     		movs	r0, #64
 302 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 303              	.LVL4:
 243:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 244:Core/Src/stm32l1xx_it.c **** 
 245:Core/Src/stm32l1xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 246:Core/Src/stm32l1xx_it.c **** }
 304              		.loc 1 246 1 is_stmt 0 view .LVU38
 305 000e 08BD     		pop	{r3, pc}
 306              		.cfi_endproc
 307              	.LFE83:
 309              		.section	.text.TIM9_IRQHandler,"ax",%progbits
 310              		.align	1
 311              		.global	TIM9_IRQHandler
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	TIM9_IRQHandler:
 317              	.LFB84:
 247:Core/Src/stm32l1xx_it.c **** 
 248:Core/Src/stm32l1xx_it.c **** /**
 249:Core/Src/stm32l1xx_it.c ****   * @brief This function handles TIM9 global interrupt.
 250:Core/Src/stm32l1xx_it.c ****   */
 251:Core/Src/stm32l1xx_it.c **** void TIM9_IRQHandler(void)
 252:Core/Src/stm32l1xx_it.c **** {
 318              		.loc 1 252 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 08B5     		push	{r3, lr}
 323              	.LCFI4:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
 253:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM9_IRQn 0 */
 254:Core/Src/stm32l1xx_it.c **** 
 255:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM9_IRQn 0 */
 256:Core/Src/stm32l1xx_it.c ****   HAL_TIM_IRQHandler(&htim9);
 327              		.loc 1 256 3 view .LVU40
 328 0002 0248     		ldr	r0, .L28
 329 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 330              	.LVL5:
 257:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM9_IRQn 1 */
 258:Core/Src/stm32l1xx_it.c **** 
 259:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM9_IRQn 1 */
 260:Core/Src/stm32l1xx_it.c **** }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 11


 331              		.loc 1 260 1 is_stmt 0 view .LVU41
 332 0008 08BD     		pop	{r3, pc}
 333              	.L29:
 334 000a 00BF     		.align	2
 335              	.L28:
 336 000c 00000000 		.word	htim9
 337              		.cfi_endproc
 338              	.LFE84:
 340              		.section	.text.TIM11_IRQHandler,"ax",%progbits
 341              		.align	1
 342              		.global	TIM11_IRQHandler
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 347              	TIM11_IRQHandler:
 348              	.LFB85:
 261:Core/Src/stm32l1xx_it.c **** 
 262:Core/Src/stm32l1xx_it.c **** /**
 263:Core/Src/stm32l1xx_it.c ****   * @brief This function handles TIM11 global interrupt.
 264:Core/Src/stm32l1xx_it.c ****   */
 265:Core/Src/stm32l1xx_it.c **** void TIM11_IRQHandler(void)
 266:Core/Src/stm32l1xx_it.c **** {
 349              		.loc 1 266 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 08B5     		push	{r3, lr}
 354              	.LCFI5:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 3, -8
 357              		.cfi_offset 14, -4
 267:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM11_IRQn 0 */
 268:Core/Src/stm32l1xx_it.c **** 
 269:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM11_IRQn 0 */
 270:Core/Src/stm32l1xx_it.c ****   HAL_TIM_IRQHandler(&htim11);
 358              		.loc 1 270 3 view .LVU43
 359 0002 0248     		ldr	r0, .L32
 360 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 361              	.LVL6:
 271:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM11_IRQn 1 */
 272:Core/Src/stm32l1xx_it.c **** 
 273:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM11_IRQn 1 */
 274:Core/Src/stm32l1xx_it.c **** }
 362              		.loc 1 274 1 is_stmt 0 view .LVU44
 363 0008 08BD     		pop	{r3, pc}
 364              	.L33:
 365 000a 00BF     		.align	2
 366              	.L32:
 367 000c 00000000 		.word	htim11
 368              		.cfi_endproc
 369              	.LFE85:
 371              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 372              		.align	1
 373              		.global	TIM2_IRQHandler
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 12


 378              	TIM2_IRQHandler:
 379              	.LFB86:
 275:Core/Src/stm32l1xx_it.c **** 
 276:Core/Src/stm32l1xx_it.c **** /**
 277:Core/Src/stm32l1xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 278:Core/Src/stm32l1xx_it.c ****   */
 279:Core/Src/stm32l1xx_it.c **** void TIM2_IRQHandler(void)
 280:Core/Src/stm32l1xx_it.c **** {
 380              		.loc 1 280 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              	.LCFI6:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 3, -8
 388              		.cfi_offset 14, -4
 281:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 282:Core/Src/stm32l1xx_it.c **** 
 283:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 284:Core/Src/stm32l1xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 389              		.loc 1 284 3 view .LVU46
 390 0002 0248     		ldr	r0, .L36
 391 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 392              	.LVL7:
 285:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 286:Core/Src/stm32l1xx_it.c **** 
 287:Core/Src/stm32l1xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 288:Core/Src/stm32l1xx_it.c **** }
 393              		.loc 1 288 1 is_stmt 0 view .LVU47
 394 0008 08BD     		pop	{r3, pc}
 395              	.L37:
 396 000a 00BF     		.align	2
 397              	.L36:
 398 000c 00000000 		.word	htim2
 399              		.cfi_endproc
 400              	.LFE86:
 402              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 403              		.align	1
 404              		.global	EXTI15_10_IRQHandler
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	EXTI15_10_IRQHandler:
 410              	.LFB87:
 289:Core/Src/stm32l1xx_it.c **** 
 290:Core/Src/stm32l1xx_it.c **** /**
 291:Core/Src/stm32l1xx_it.c ****   * @brief This function handles EXTI line[15:10] interrupts.
 292:Core/Src/stm32l1xx_it.c ****   */
 293:Core/Src/stm32l1xx_it.c **** void EXTI15_10_IRQHandler(void)
 294:Core/Src/stm32l1xx_it.c **** {
 411              		.loc 1 294 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 08B5     		push	{r3, lr}
 416              	.LCFI7:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 13


 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 3, -8
 419              		.cfi_offset 14, -4
 295:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 296:Core/Src/stm32l1xx_it.c **** 
 297:Core/Src/stm32l1xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 298:Core/Src/stm32l1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BTN_1_Pin);
 420              		.loc 1 298 3 view .LVU49
 421 0002 4FF40060 		mov	r0, #2048
 422 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 423              	.LVL8:
 299:Core/Src/stm32l1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(BTN_2_Pin);
 424              		.loc 1 299 3 view .LVU50
 425 000a 4FF48050 		mov	r0, #4096
 426 000e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 427              	.LVL9:
 300:Core/Src/stm32l1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 428              		.loc 1 300 3 view .LVU51
 429 0012 4FF40050 		mov	r0, #8192
 430 0016 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 431              	.LVL10:
 301:Core/Src/stm32l1xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 302:Core/Src/stm32l1xx_it.c **** 
 303:Core/Src/stm32l1xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 1 */
 304:Core/Src/stm32l1xx_it.c **** }
 432              		.loc 1 304 1 is_stmt 0 view .LVU52
 433 001a 08BD     		pop	{r3, pc}
 434              		.cfi_endproc
 435              	.LFE87:
 437              		.text
 438              	.Letext0:
 439              		.file 2 "C:\\ST\\STM32CubeCLT\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/11.3.1/../../../.
 440              		.file 3 "C:\\ST\\STM32CubeCLT\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/11.3.1/../../../.
 441              		.file 4 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l152xe.h"
 442              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 443              		.file 6 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 444              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 445              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_adc.h"
 446              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_tim.h"
 447              		.file 10 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_gpio.h"
 448              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_it.c
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:18     .text.NMI_Handler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:42     .text.HardFault_Handler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:48     .text.HardFault_Handler:0000000000000000 HardFault_Handler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:65     .text.MemManage_Handler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:88     .text.BusFault_Handler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:94     .text.BusFault_Handler:0000000000000000 BusFault_Handler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:111    .text.UsageFault_Handler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:117    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:134    .text.SVC_Handler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:140    .text.SVC_Handler:0000000000000000 SVC_Handler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:153    .text.DebugMon_Handler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:159    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:172    .text.PendSV_Handler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:178    .text.PendSV_Handler:0000000000000000 PendSV_Handler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:191    .text.SysTick_Handler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:197    .text.SysTick_Handler:0000000000000000 SysTick_Handler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:217    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:223    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:243    .text.DMA1_Channel1_IRQHandler:000000000000000c $d
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:248    .text.ADC1_IRQHandler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:254    .text.ADC1_IRQHandler:0000000000000000 ADC1_IRQHandler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:274    .text.ADC1_IRQHandler:000000000000000c $d
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:279    .text.EXTI9_5_IRQHandler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:285    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:310    .text.TIM9_IRQHandler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:316    .text.TIM9_IRQHandler:0000000000000000 TIM9_IRQHandler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:336    .text.TIM9_IRQHandler:000000000000000c $d
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:341    .text.TIM11_IRQHandler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:347    .text.TIM11_IRQHandler:0000000000000000 TIM11_IRQHandler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:367    .text.TIM11_IRQHandler:000000000000000c $d
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:372    .text.TIM2_IRQHandler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:378    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:398    .text.TIM2_IRQHandler:000000000000000c $d
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:403    .text.EXTI15_10_IRQHandler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\ccGcaMZ6.s:409    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_adc
HAL_ADC_IRQHandler
hadc
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
htim9
htim11
htim2
