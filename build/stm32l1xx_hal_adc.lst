ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l1xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_ADC_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_ADC_MspInit:
  25              	.LVL0:
  26              	.LFB74:
  27              		.file 1 "Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c"
   1:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @file    stm32l1xx_hal_adc.c
   4:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *           + Peripheral State functions
  11:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          Other functions (extended functions) are available in file 
  12:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          "stm32l1xx_hal_adc_ex.c".
  13:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *
  14:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   ******************************************************************************
  15:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @attention
  16:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *
  17:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * Copyright (c) 2017 STMicroelectronics.
  18:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * All rights reserved.
  19:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *
  20:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * in the root directory of this software component.
  22:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *
  24:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   ******************************************************************************
  25:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   @verbatim
  26:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   ==============================================================================
  27:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   ==============================================================================
  29:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   [..]
  30:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution
  31:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 2


  32:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion, end of injected
  33:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       conversion, and in case of analog watchdog or overrun events.
  34:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  35:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  37:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  39:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  41:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  42:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  43:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) ADC conversion of regular group and injected group.
  44:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  45:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  46:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       for both regular and injected groups.
  47:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  48:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  49:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  50:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) ADC offset on injected channels
  51:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  52:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  53:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       slower speed.
  54:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  55:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to 
  56:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       Vdda or to an external voltage reference).
  57:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  58:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  59:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                      ##### How to use this driver #####
  60:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   ==============================================================================
  61:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]
  62:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
  63:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  64:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      ============================================================
  65:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      [..]
  66:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
  67:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Enable the ADC interface
  68:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (++) As prerequisite, ADC clock must be configured at RCC top level.
  69:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****            Caution: On STM32L1, ADC clock frequency max is 16MHz (refer
  70:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                     to device datasheet).
  71:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                     Therefore, ADC clock prescaler must be configured in 
  72:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                     function of ADC clock source frequency to remain below
  73:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                     this maximum frequency.
  74:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
  75:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         (++) Two clock settings are mandatory: 
  76:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****              (+++) ADC clock (core clock).
  77:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  78:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    Only one possible clock source: derived from HSI RC 16MHz oscillator
  79:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    (HSI). 
  80:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    ADC is connected directly to HSI RC 16MHz oscillator.
  81:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    Therefore, RCC PLL setting has no impact on ADC.
  82:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    PLL can be disabled (".PLL.PLLState = RCC_PLL_NONE") or 
  83:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    enabled with HSI16 as clock source
  84:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    (".PLL.PLLSource = RCC_PLLSOURCE_HSI") to be used as device 
  85:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    main clock source SYSCLK.
  86:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    The only mandatory setting is ".HSIState = RCC_HSI_ON"
  87:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
  88:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****              (+++) Example:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 3


  89:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  90:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    other device clock parameters configuration:
  91:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) __HAL_RCC_ADC1_CLK_ENABLE();
  92:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
  93:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
  94:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = (... | RCC_OSCILLATORTYPE_HSI);
  95:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_ON;
  96:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  97:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) RCC_OscInitStructure.PLL.PLLState = RCC_PLL_NONE;
  98:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) RCC_OscInitStructure.PLL.PLLSource = ...
  99:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) RCC_OscInitStructure.PLL...
 100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         (++) ADC clock prescaler is configured at ADC level with
 103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
 104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) ADC pins configuration
 106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
 107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
 108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
 109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               using function HAL_GPIO_Init()
 110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               into the function of corresponding ADC interruption vector 
 116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               ADCx_IRQHandler().
 117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               using function HAL_DMA_Init().
 121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               into the function of corresponding DMA interruption vector 
 125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      *** Configuration of ADC, groups regular/injected, channels parameters ***
 128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      ==========================================================================
 129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      [..]
 130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         using function HAL_ADC_Init().
 134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number, 
 136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Optionally, configure the injected group parameters (conversion trigger, 
 140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         sequencer, ..., of injected group)
 141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         and the channels for injected group parameters (channel number, 
 142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         channel rank into sequencer, ..., into injected group)
 143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         using function HAL_ADCEx_InjectedConfigChannel().
 144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 4


 146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         monitored, thresholds, ...)
 147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Optionally, for devices with several ADC instances: configure the 
 150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         multimode parameters
 151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         using function HAL_ADCEx_MultiModeConfigChannel().
 152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      *** Execution of ADC conversions ***
 154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      ====================================
 155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      [..]
 156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         transfer by DMA.
 159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         (++) ADC conversion by polling:
 161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_Start()
 163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion 
 164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedPollForConversion() )
 166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Retrieve conversion results 
 167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         (++) ADC conversion by interruption: 
 173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 (this function must be implemented in user program)
 178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedConvCpltCallback() )
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Retrieve conversion results 
 180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 (these functions must be implemented in user program)
 191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 destination variable address.
 193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         (++) For devices with several ADCs: ADC multimode conversion 
 197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****              with transfer by DMA:
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Activate the ADC peripheral (slave) and start conversions
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_Start()
 200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Activate the ADC peripheral (master) and start conversions
 201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStart_DMA()
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 5


 203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 (these functions must be implemented in user program)
 205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 destination variable address.
 207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (master)
 208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStop_DMA()
 209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (slave)
 210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      [..]
 213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+@) HAL_ADCEx_InjectedConvCpltCallback()
 220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      *** Deinitialization of ADC ***
 222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      ============================================================
 223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      [..]
 224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Disable the ADC interface
 226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         (++) ADC clock disable
 230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****              (+++) Example:
 232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    other device clock parameters configuration:
 234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
 235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) ADC pins configuration
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Deinitialize the DMA
 249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               using function HAL_DMA_Init().
 250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]
 254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     *** Callback registration ***
 256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     =============================================
 257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]
 258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 6


 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      to register an interrupt callback.
 263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]
 264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      and a pointer to the user callback function.
 275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]
 276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      weak function.
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]
 280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      and the Callback ID.
 283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      This function allows to reset following callbacks:
 284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      [..]
 292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/ HAL_ADC_DeInit() only when
 298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]
 300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/ HAL_ADC_DeInit()
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      [..]
 304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      or HAL_ADC_Init() function.
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      [..]
 315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 7


 317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      are set to the corresponding weak functions.
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   @endverbatim
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #include "stm32l1xx_hal.h"
 325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /** @addtogroup STM32L1xx_HAL_Driver
 327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @{
 328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /** @defgroup ADC ADC
 331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief ADC HAL module driver
 332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @{
 333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @{
 341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Timeout values for ADC enable and disable settling time.                 */
 344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Values defined to be higher than worst cases: low clocks freq,           */
 345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* maximum prescaler.                                                       */
 346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* prescaler 4, sampling time 7.5 ADC clock cycles, resolution 12 bits.     */
 348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Unit: ms                                                                 */
 349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   #define ADC_ENABLE_TIMEOUT              (2U)
 350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   #define ADC_DISABLE_TIMEOUT             (2U)
 351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Delay for ADC stabilization time.                                        */
 353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Maximum delay is 1us (refer to device datasheet, parameter tSTAB).       */
 354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Unit: us                                                                 */
 355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   #define ADC_STAB_DELAY_US               (3U)
 356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Delay for temperature sensor stabilization time.                         */
 358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
 359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Unit: us                                                                 */
 360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   #define ADC_TEMPSENSOR_DELAY_US         (10U)
 361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
 363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @}
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @{
 371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 8


 374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
 376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @}
 377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @{
 383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 ADC Initialization/de-initialization functions 
 386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *
 388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** @verbatim    
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  ===============================================================================
 390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  ===============================================================================
 392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) De-initialize the ADC.
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** @endverbatim
 396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @{
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
 400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         (clock source APB2).
 404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         See commented example code below that can be copied and uncommented 
 405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         into HAL_ADC_MspInit().
 406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         before HAL_ADC_Init().
 413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
 420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status
 421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_cr1 = 0;
 426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_cr2 = 0;
 427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check ADC handle */
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if(hadc == NULL)
 430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 9


 431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     return HAL_ERROR;
 432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
 435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign)); 
 439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_AUTOWAIT(hadc->Init.LowPowerAutoWait));
 442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_AUTOPOWEROFF(hadc->Init.LowPowerAutoPowerOff));
 443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_CHANNELSBANK(hadc->Init.ChannelsBank));
 444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured    */
 465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* at RCC top level.                                                        */
 466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Refer to header of this file for more details on clock enabling          */
 467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* procedure.                                                               */
 468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Initialize ADC error code */
 474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Enable SYSCFG clock to control the routing Interface (RI) */
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_RCC_SYSCFG_CLK_ENABLE();
 481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Init the ADC Callback settings */
 484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 10


 488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Init the low level hardware */
 496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #else
 498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Init the low level hardware */
 499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* correctly completed.                                                     */
 505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state */
 508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC parameters */
 513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Configuration of common ADC clock: clock source HSI with selectable    */
 515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* prescaler                                                              */
 516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     MODIFY_REG(ADC->CCR                 ,
 517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_CCR_ADCPRE           ,
 518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                hadc->Init.ClockPrescaler );
 519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - external trigger polarity                                           */
 522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - End of conversion selection                                         */
 523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - DMA continuous request                                              */
 524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - Channels bank (Banks availability depends on devices categories)    */
 525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     tmp_cr2 |= (hadc->Init.DataAlign                                           |
 527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 hadc->Init.EOCSelection                                        |
 528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 ADC_CR2_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests) |
 529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 hadc->Init.ChannelsBank                                        |
 530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)     );
 531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* start.                                                                 */
 534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*       software start.                                                  */
 537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       tmp_cr2 |= ( hadc->Init.ExternalTrigConv    |
 540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   hadc->Init.ExternalTrigConvEdge );
 541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 11


 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - delay selection (LowPowerAutoWait mode)                             */
 546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - resolution                                                          */
 547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - auto power off (LowPowerAutoPowerOff mode)                          */
 548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - scan mode                                                           */
 549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - discontinuous mode disable/enable                                   */
 550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  - discontinuous mode number of conversions                            */
 551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if ((ADC_IS_ENABLE(hadc) == RESET))
 552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       tmp_cr2 |= hadc->Init.LowPowerAutoWait;
 554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       tmp_cr1 |= (hadc->Init.Resolution                     |
 556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   hadc->Init.LowPowerAutoPowerOff           |
 557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode)  );
 558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Enable discontinuous mode only if continuous mode is disabled */
 560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Note: If parameter "Init.ScanConvMode" is set to disable, parameter  */
 561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /*       discontinuous is set anyway, but has no effect on ADC HW.      */
 562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if (hadc->Init.DiscontinuousConvMode == ENABLE)
 563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         if (hadc->Init.ContinuousConvMode == DISABLE)
 565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Enable the selected ADC regular discontinuous mode */
 567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Set the number of channels to be converted in discontinuous mode */
 568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(tmp_cr1, ADC_CR1_DISCEN                                            |
 569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
 571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         else
 572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* ADC regular group settings continuous and sequencer discontinuous*/
 574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* cannot be enabled simultaneously.                                */
 575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           
 576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Update ADC state machine to error */
 577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           
 579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Set ADC error code to ADC IP internal error */
 580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
 582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
 583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Update ADC configuration register CR1 with previous settings */
 585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CR1,
 586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    ADC_CR1_RES     |
 587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    ADC_CR1_PDI     |
 588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    ADC_CR1_PDD     |
 589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    ADC_CR1_DISCNUM |
 590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    ADC_CR1_DISCEN  |
 591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    ADC_CR1_SCAN     ,
 592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    tmp_cr1           );
 593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Update ADC configuration register CR2 with previous settings */
 596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CR2    ,
 597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_CR2_MASK_ADCINIT() ,
 598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                tmp_cr2                 );
 599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 12


 602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*   Note: Scan mode is present by hardware on this device and, if        */
 605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*   disabled, discards automatically nb of conversions. Anyway, nb of    */
 606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*   conversions is forced to 0x00 for alignment over all STM32 devices.  */
 607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*   parameter "NbrOfConversion"                                          */
 609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode) == ADC_SCAN_ENABLE)
 610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1                         ,
 612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                  ADC_SQR1_L                                   ,
 613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                  ADC_SQR1_L_SHIFT(hadc->Init.NbrOfConversion)  );
 614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     else
 616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1,
 618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                  ADC_SQR1_L          ,
 619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                  0x00000000           );
 620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* ensure of no potential problem of ADC core IP clocking.                */
 624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Check through register CR2 (excluding execution control bits ADON,     */
 625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* JSWSTART, SWSTART and injected trigger bits JEXTEN and JEXTSEL).       */
 626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if ((READ_REG(hadc->Instance->CR2) & ~(ADC_CR2_ADON |
 627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                            ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                            ADC_CR2_JEXTEN  | ADC_CR2_JEXTSEL   ))
 629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          == tmp_cr2)
 630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Set ADC error code to none */
 632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Set the ADC state */
 635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     else
 640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Update ADC state machine to error */
 642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
 647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else
 654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return function status */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 13


 659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return tmp_hal_status;
 660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
 663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to its default reset values.
 664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   To not impact other ADCs, reset of common ADC registers have been
 665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         left commented below.
 666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         If needed, the example code can be copied and uncommented into
 667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         function HAL_ADC_MspDeInit().
 668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
 669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status
 670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check ADC handle */
 676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if(hadc == NULL)
 677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     return HAL_ERROR;
 679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
 682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Set ADC state */
 685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Disable ADC peripheral */
 689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* correctly completed.                                                     */
 694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* ========== Reset ADC registers ========== */
 697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register SR */
 698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD | ADC_FLAG_JEOC | ADC_FLAG_EOC |
 699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
 700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                          
 701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register CR1 */
 702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR1, (ADC_CR1_OVRIE   | ADC_CR1_RES     | ADC_CR1_AWDEN  |
 703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                     ADC_CR1_JAWDEN  | ADC_CR1_PDI     | ADC_CR1_PDD    |
 704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                     ADC_CR1_DISCNUM | ADC_CR1_JDISCEN | ADC_CR1_DISCEN |
 705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                     ADC_CR1_JAUTO   | ADC_CR1_AWDSGL  | ADC_CR1_SCAN   |
 706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                     ADC_CR1_JEOCIE  | ADC_CR1_AWDIE   | ADC_CR1_EOCIE  |
 707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                     ADC_CR1_AWDCH                                       ));
 708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register CR2 */
 710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_CR2_CLEAR(hadc);
 711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register SMPR0 */
 713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_SMPR0_CLEAR(hadc);
 714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register SMPR1 */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 14


 716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_SMPR1_CLEAR(hadc);
 717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register SMPR2 */
 719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SMPR2, (ADC_SMPR2_SMP19 | ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | 
 720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                       ADC_SMPR2_SMP16 | ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | 
 721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                       ADC_SMPR2_SMP13 | ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 |
 722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                       ADC_SMPR2_SMP10                                      ));
 723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register SMPR3 */
 725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SMPR3, (ADC_SMPR3_SMP9 | ADC_SMPR3_SMP8 | ADC_SMPR3_SMP7 | 
 726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                       ADC_SMPR3_SMP6 | ADC_SMPR3_SMP5 | ADC_SMPR3_SMP4 | 
 727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                       ADC_SMPR3_SMP3 | ADC_SMPR3_SMP2 | ADC_SMPR3_SMP1 |
 728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                       ADC_SMPR3_SMP0                                    ));
 729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register JOFR1 */
 731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR1, ADC_JOFR1_JOFFSET1);
 732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register JOFR2 */
 733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR2, ADC_JOFR2_JOFFSET2);
 734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register JOFR3 */
 735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR3, ADC_JOFR3_JOFFSET3);
 736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register JOFR4 */
 737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR4, ADC_JOFR4_JOFFSET4);
 738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register HTR */
 740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR, ADC_HTR_HT);
 741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register LTR */
 742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR, ADC_LTR_LT);
 743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register SQR1 */
 745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR1, (ADC_SQR1_L | __ADC_SQR1_SQXX));
 746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register SQR2 */
 748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR2, (ADC_SQR2_SQ24 | ADC_SQR2_SQ23 | ADC_SQR2_SQ22 | 
 749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_SQR2_SQ21 | ADC_SQR2_SQ20 | ADC_SQR2_SQ19  ));
 750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register SQR3 */
 752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR3, (ADC_SQR3_SQ18 | ADC_SQR3_SQ17 | ADC_SQR3_SQ16 | 
 753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_SQR3_SQ15 | ADC_SQR3_SQ14 | ADC_SQR3_SQ13  ));
 754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register SQR4 */
 756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR4, (ADC_SQR4_SQ12 | ADC_SQR4_SQ11 | ADC_SQR4_SQ10 | 
 757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_SQR4_SQ9  | ADC_SQR4_SQ8  | ADC_SQR4_SQ7   ));
 758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register SQR5 */
 760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR5, (ADC_SQR5_SQ6 | ADC_SQR5_SQ5 | ADC_SQR5_SQ4 | 
 761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_SQR5_SQ3 | ADC_SQR5_SQ2 | ADC_SQR5_SQ1  ));
 762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register JSQR */
 765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JSQR, (ADC_JSQR_JL |
 766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  ));
 768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register DR */
 770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 15


 773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register CCR */
 776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(ADC->CCR, ADC_CCR_TSVREFE);   
 777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* forced to a similar state after device power-on.                       */
 781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* If needed, copy-paste and uncomment the following reset code into      */
 782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* function "void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)":              */
 783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*                                                                        */
 784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_FORCE_RESET()                                          */
 785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_RELEASE_RESET()                                        */
 786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (hadc->MspDeInitCallback == NULL)
 789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* DeInit the low level hardware */
 794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->MspDeInitCallback(hadc);
 795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #else
 796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* DeInit the low level hardware */
 797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC error code to none */
 801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state */
 804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET;
 805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process unlocked */
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return function status */
 812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return tmp_hal_status;
 813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
 816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
 818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
 819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
  28              		.loc 1 821 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   UNUSED(hadc);
  33              		.loc 1 823 3 view .LVU1
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 16


 824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****    */ 
 828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
  34              		.loc 1 828 1 is_stmt 0 view .LVU2
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE74:
  39              		.section	.text.HAL_ADC_Init,"ax",%progbits
  40              		.align	1
  41              		.global	HAL_ADC_Init
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	HAL_ADC_Init:
  47              	.LVL1:
  48              	.LFB72:
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  49              		.loc 1 423 1 is_stmt 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 8
  52              		@ frame_needed = 0, uses_anonymous_args = 0
 424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_cr1 = 0;
  53              		.loc 1 424 3 view .LVU4
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_cr2 = 0;
  54              		.loc 1 425 3 view .LVU5
 426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  55              		.loc 1 426 3 view .LVU6
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
  56              		.loc 1 429 3 view .LVU7
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
  57              		.loc 1 429 5 is_stmt 0 view .LVU8
  58 0000 0028     		cmp	r0, #0
  59 0002 00F0BC80 		beq	.L14
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  60              		.loc 1 423 1 view .LVU9
  61 0006 70B5     		push	{r4, r5, r6, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 16
  64              		.cfi_offset 4, -16
  65              		.cfi_offset 5, -12
  66              		.cfi_offset 6, -8
  67              		.cfi_offset 14, -4
  68 0008 82B0     		sub	sp, sp, #8
  69              	.LCFI1:
  70              		.cfi_def_cfa_offset 24
  71 000a 0446     		mov	r4, r0
 435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  72              		.loc 1 435 3 is_stmt 1 view .LVU10
 436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  73              		.loc 1 436 3 view .LVU11
 437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign)); 
  74              		.loc 1 437 3 view .LVU12
 438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
  75              		.loc 1 438 3 view .LVU13
 439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 17


  76              		.loc 1 439 3 view .LVU14
 440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_AUTOWAIT(hadc->Init.LowPowerAutoWait));
  77              		.loc 1 440 3 view .LVU15
 441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_AUTOPOWEROFF(hadc->Init.LowPowerAutoPowerOff));
  78              		.loc 1 441 3 view .LVU16
 442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_CHANNELSBANK(hadc->Init.ChannelsBank));
  79              		.loc 1 442 3 view .LVU17
 443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  80              		.loc 1 443 3 view .LVU18
 444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
  81              		.loc 1 444 3 view .LVU19
 445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
  82              		.loc 1 445 3 view .LVU20
 446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
  83              		.loc 1 446 3 view .LVU21
 448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
  84              		.loc 1 448 3 view .LVU22
 454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
  85              		.loc 1 454 7 view .LVU23
 458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
  86              		.loc 1 458 3 view .LVU24
 460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
  87              		.loc 1 460 5 view .LVU25
 471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
  88              		.loc 1 471 3 view .LVU26
 471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
  89              		.loc 1 471 11 is_stmt 0 view .LVU27
  90 000c C36C     		ldr	r3, [r0, #76]
 471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
  91              		.loc 1 471 6 view .LVU28
  92 000e 002B     		cmp	r3, #0
  93 0010 5FD0     		beq	.L21
  94              	.LVL2:
  95              	.L4:
 505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
  96              		.loc 1 505 3 is_stmt 1 view .LVU29
 505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
  97              		.loc 1 505 7 is_stmt 0 view .LVU30
  98 0012 E36C     		ldr	r3, [r4, #76]
 505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
  99              		.loc 1 505 6 view .LVU31
 100 0014 13F0100F 		tst	r3, #16
 101 0018 40F0B380 		bne	.L15
 508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 102              		.loc 1 508 5 is_stmt 1 view .LVU32
 103 001c E36C     		ldr	r3, [r4, #76]
 104 001e 23F48853 		bic	r3, r3, #4352
 105 0022 23F00203 		bic	r3, r3, #2
 106 0026 43F00203 		orr	r3, r3, #2
 107 002a E364     		str	r3, [r4, #76]
 516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_CCR_ADCPRE           ,
 108              		.loc 1 516 5 view .LVU33
 109 002c 564A     		ldr	r2, .L25
 110 002e 5368     		ldr	r3, [r2, #4]
 111 0030 23F44033 		bic	r3, r3, #196608
 112 0034 6168     		ldr	r1, [r4, #4]
 113 0036 0B43     		orrs	r3, r3, r1
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 18


 114 0038 5360     		str	r3, [r2, #4]
 526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 hadc->Init.EOCSelection                                        |
 115              		.loc 1 526 5 view .LVU34
 526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 hadc->Init.EOCSelection                                        |
 116              		.loc 1 526 27 is_stmt 0 view .LVU35
 117 003a E368     		ldr	r3, [r4, #12]
 527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 ADC_CR2_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests) |
 118              		.loc 1 527 27 view .LVU36
 119 003c 6269     		ldr	r2, [r4, #20]
 526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 hadc->Init.EOCSelection                                        |
 120              		.loc 1 526 80 view .LVU37
 121 003e 1343     		orrs	r3, r3, r2
 528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 hadc->Init.ChannelsBank                                        |
 122              		.loc 1 528 17 view .LVU38
 123 0040 94F83C10 		ldrb	r1, [r4, #60]	@ zero_extendqisi2
 124              	.LVL3:
 125              	.LBB11:
 126              	.LBI11:
 127              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 19


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 20


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 21


 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 22


 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 23


 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 24


 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 25


 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 26


 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 27


 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 28


 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 29


 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 30


 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 31


 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 32


 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 33


 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 34


 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 35


 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 128              		.loc 2 981 31 is_stmt 1 view .LVU39
 129              	.LBB12:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 130              		.loc 2 983 3 view .LVU40
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 131              		.loc 2 988 4 view .LVU41
 132 0044 4FF40072 		mov	r2, #512
 133              		.syntax unified
 134              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 135 0048 92FAA2F2 		rbit r2, r2
 136              	@ 0 "" 2
 137              	.LVL4:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 36


 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 138              		.loc 2 1001 3 view .LVU42
 139              		.loc 2 1001 3 is_stmt 0 view .LVU43
 140              		.thumb
 141              		.syntax unified
 142              	.LBE12:
 143              	.LBE11:
 528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 hadc->Init.ChannelsBank                                        |
 144              		.loc 1 528 17 view .LVU44
 145 004c B2FA82F2 		clz	r2, r2
 146 0050 01FA02F2 		lsl	r2, r1, r2
 527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 ADC_CR2_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests) |
 147              		.loc 1 527 80 view .LVU45
 148 0054 1343     		orrs	r3, r3, r2
 529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)     );
 149              		.loc 1 529 27 view .LVU46
 150 0056 226A     		ldr	r2, [r4, #32]
 528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 hadc->Init.ChannelsBank                                        |
 151              		.loc 1 528 80 view .LVU47
 152 0058 1343     		orrs	r3, r3, r2
 530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 153              		.loc 1 530 17 view .LVU48
 154 005a 94F82400 		ldrb	r0, [r4, #36]	@ zero_extendqisi2
 155              	.LVL5:
 156              	.LBB13:
 157              	.LBI13:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 158              		.loc 2 981 31 is_stmt 1 view .LVU49
 159              	.LBB14:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160              		.loc 2 983 3 view .LVU50
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 161              		.loc 2 988 4 view .LVU51
 162 005e 0222     		movs	r2, #2
 163              		.syntax unified
 164              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 165 0060 92FAA2F2 		rbit r2, r2
 166              	@ 0 "" 2
 167              	.LVL6:
 168              		.loc 2 1001 3 view .LVU52
 169              		.loc 2 1001 3 is_stmt 0 view .LVU53
 170              		.thumb
 171              		.syntax unified
 172              	.LBE14:
 173              	.LBE13:
 530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 174              		.loc 1 530 17 view .LVU54
 175 0064 B2FA82F2 		clz	r2, r2
 176 0068 00FA02F2 		lsl	r2, r0, r2
 529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)     );
 177              		.loc 1 529 80 view .LVU55
 178 006c 1343     		orrs	r3, r3, r2
 179              	.LVL7:
 537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 37


 180              		.loc 1 537 5 is_stmt 1 view .LVU56
 537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 181              		.loc 1 537 19 is_stmt 0 view .LVU57
 182 006e 626B     		ldr	r2, [r4, #52]
 537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 183              		.loc 1 537 8 view .LVU58
 184 0070 102A     		cmp	r2, #16
 185 0072 02D0     		beq	.L5
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   hadc->Init.ExternalTrigConvEdge );
 186              		.loc 1 539 7 is_stmt 1 view .LVU59
 540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 187              		.loc 1 540 29 is_stmt 0 view .LVU60
 188 0074 A16B     		ldr	r1, [r4, #56]
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   hadc->Init.ExternalTrigConvEdge );
 189              		.loc 1 539 51 view .LVU61
 190 0076 0A43     		orrs	r2, r2, r1
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   hadc->Init.ExternalTrigConvEdge );
 191              		.loc 1 539 15 view .LVU62
 192 0078 1343     		orrs	r3, r3, r2
 193              	.LVL8:
 194              	.L5:
 551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 195              		.loc 1 551 5 is_stmt 1 view .LVU63
 551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 196              		.loc 1 551 10 is_stmt 0 view .LVU64
 197 007a 2568     		ldr	r5, [r4]
 198 007c 2A68     		ldr	r2, [r5]
 551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 199              		.loc 1 551 8 view .LVU65
 200 007e 12F04002 		ands	r2, r2, #64
 201 0082 14D1     		bne	.L6
 553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 202              		.loc 1 553 7 is_stmt 1 view .LVU66
 553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 203              		.loc 1 553 28 is_stmt 0 view .LVU67
 204 0084 A169     		ldr	r1, [r4, #24]
 553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 205              		.loc 1 553 15 view .LVU68
 206 0086 0B43     		orrs	r3, r3, r1
 207              	.LVL9:
 555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   hadc->Init.LowPowerAutoPowerOff           |
 208              		.loc 1 555 7 is_stmt 1 view .LVU69
 555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   hadc->Init.LowPowerAutoPowerOff           |
 209              		.loc 1 555 29 is_stmt 0 view .LVU70
 210 0088 A168     		ldr	r1, [r4, #8]
 556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode)  );
 211              		.loc 1 556 29 view .LVU71
 212 008a E669     		ldr	r6, [r4, #28]
 555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   hadc->Init.LowPowerAutoPowerOff           |
 213              		.loc 1 555 61 view .LVU72
 214 008c 3143     		orrs	r1, r1, r6
 557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 215              		.loc 1 557 19 view .LVU73
 216 008e 2669     		ldr	r6, [r4, #16]
 217 0090 B6F5807F 		cmp	r6, #256
 218 0094 30D0     		beq	.L16
 557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 38


 219              		.loc 1 557 19 discriminator 2 view .LVU74
 220 0096 012E     		cmp	r6, #1
 221 0098 2BD0     		beq	.L22
 222              	.L7:
 556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                   ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode)  );
 223              		.loc 1 556 61 view .LVU75
 224 009a 0A43     		orrs	r2, r2, r1
 225              	.LVL10:
 562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 226              		.loc 1 562 7 is_stmt 1 view .LVU76
 562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 227              		.loc 1 562 21 is_stmt 0 view .LVU77
 228 009c 94F82C10 		ldrb	r1, [r4, #44]	@ zero_extendqisi2
 562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 229              		.loc 1 562 10 view .LVU78
 230 00a0 0129     		cmp	r1, #1
 231 00a2 2BD0     		beq	.L23
 232              	.L8:
 585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                    ADC_CR1_RES     |
 233              		.loc 1 585 9 is_stmt 1 view .LVU79
 234 00a4 6868     		ldr	r0, [r5, #4]
 235 00a6 3949     		ldr	r1, .L25+4
 236 00a8 0140     		ands	r1, r1, r0
 237 00aa 1143     		orrs	r1, r1, r2
 238 00ac 6960     		str	r1, [r5, #4]
 239              	.LVL11:
 240              	.L6:
 596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_CR2_MASK_ADCINIT() ,
 241              		.loc 1 596 5 view .LVU80
 242 00ae 2168     		ldr	r1, [r4]
 243 00b0 8868     		ldr	r0, [r1, #8]
 244 00b2 374A     		ldr	r2, .L25+8
 245 00b4 0240     		ands	r2, r2, r0
 246 00b6 1A43     		orrs	r2, r2, r3
 247 00b8 8A60     		str	r2, [r1, #8]
 609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 248              		.loc 1 609 5 view .LVU81
 609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 249              		.loc 1 609 9 is_stmt 0 view .LVU82
 250 00ba 2269     		ldr	r2, [r4, #16]
 609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 251              		.loc 1 609 8 view .LVU83
 252 00bc B2F5807F 		cmp	r2, #256
 253 00c0 33D0     		beq	.L10
 609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 254              		.loc 1 609 51 discriminator 1 view .LVU84
 255 00c2 012A     		cmp	r2, #1
 256 00c4 31D0     		beq	.L10
 617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                  ADC_SQR1_L          ,
 257              		.loc 1 617 7 is_stmt 1 view .LVU85
 258 00c6 2168     		ldr	r1, [r4]
 259 00c8 0A6B     		ldr	r2, [r1, #48]
 260 00ca 22F0F872 		bic	r2, r2, #32505856
 261 00ce 0A63     		str	r2, [r1, #48]
 262 00d0 3AE0     		b	.L12
 263              	.LVL12:
 264              	.L21:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 39


 474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 265              		.loc 1 474 5 view .LVU86
 266 00d2 0365     		str	r3, [r0, #80]
 477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 267              		.loc 1 477 5 view .LVU87
 477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 268              		.loc 1 477 16 is_stmt 0 view .LVU88
 269 00d4 80F84830 		strb	r3, [r0, #72]
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 270              		.loc 1 480 5 is_stmt 1 view .LVU89
 271              	.LBB15:
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 272              		.loc 1 480 5 view .LVU90
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 273              		.loc 1 480 5 view .LVU91
 274 00d8 2E4B     		ldr	r3, .L25+12
 275 00da 1A6A     		ldr	r2, [r3, #32]
 276 00dc 42F00102 		orr	r2, r2, #1
 277 00e0 1A62     		str	r2, [r3, #32]
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 278              		.loc 1 480 5 view .LVU92
 279 00e2 1B6A     		ldr	r3, [r3, #32]
 280 00e4 03F00103 		and	r3, r3, #1
 281 00e8 0193     		str	r3, [sp, #4]
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 282              		.loc 1 480 5 view .LVU93
 283 00ea 019B     		ldr	r3, [sp, #4]
 284              	.LBE15:
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 285              		.loc 1 480 5 view .LVU94
 499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 286              		.loc 1 499 5 view .LVU95
 287 00ec FFF7FEFF 		bl	HAL_ADC_MspInit
 288              	.LVL13:
 499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 289              		.loc 1 499 5 is_stmt 0 view .LVU96
 290 00f0 8FE7     		b	.L4
 291              	.LVL14:
 292              	.L22:
 557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 293              		.loc 1 557 19 view .LVU97
 294 00f2 4FF48072 		mov	r2, #256
 295 00f6 D0E7     		b	.L7
 296              	.L16:
 297 00f8 3246     		mov	r2, r6
 298 00fa CEE7     		b	.L7
 299              	.LVL15:
 300              	.L23:
 564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 301              		.loc 1 564 9 is_stmt 1 view .LVU98
 564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 302              		.loc 1 564 12 is_stmt 0 view .LVU99
 303 00fc 60B9     		cbnz	r0, .L9
 568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 304              		.loc 1 568 11 is_stmt 1 view .LVU100
 305 00fe 216B     		ldr	r1, [r4, #48]
 306 0100 0139     		subs	r1, r1, #1
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 40


 307              	.LVL16:
 308              	.LBB16:
 309              	.LBI16:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 310              		.loc 2 981 31 view .LVU101
 311              	.LBB17:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 312              		.loc 2 983 3 view .LVU102
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 313              		.loc 2 988 4 view .LVU103
 314 0102 4FF46040 		mov	r0, #57344
 315              		.syntax unified
 316              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 317 0106 90FAA0F0 		rbit r0, r0
 318              	@ 0 "" 2
 319              	.LVL17:
 320              		.loc 2 1001 3 view .LVU104
 321              		.loc 2 1001 3 is_stmt 0 view .LVU105
 322              		.thumb
 323              		.syntax unified
 324              	.LBE17:
 325              	.LBE16:
 568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 326              		.loc 1 568 11 view .LVU106
 327 010a B0FA80F0 		clz	r0, r0
 328 010e 8140     		lsls	r1, r1, r0
 329 0110 41F40061 		orr	r1, r1, #2048
 330 0114 0A43     		orrs	r2, r2, r1
 331              	.LVL18:
 568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 332              		.loc 1 568 11 view .LVU107
 333 0116 C5E7     		b	.L8
 334              	.L9:
 577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           
 335              		.loc 1 577 11 is_stmt 1 view .LVU108
 336 0118 E16C     		ldr	r1, [r4, #76]
 337 011a 41F02001 		orr	r1, r1, #32
 338 011e E164     		str	r1, [r4, #76]
 580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
 339              		.loc 1 580 11 view .LVU109
 340 0120 216D     		ldr	r1, [r4, #80]
 341 0122 41F00101 		orr	r1, r1, #1
 342 0126 2165     		str	r1, [r4, #80]
 343 0128 BCE7     		b	.L8
 344              	.LVL19:
 345              	.L10:
 611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                  ADC_SQR1_L                                   ,
 346              		.loc 1 611 7 view .LVU110
 347 012a 2568     		ldr	r5, [r4]
 348 012c 2A6B     		ldr	r2, [r5, #48]
 349 012e 22F0F872 		bic	r2, r2, #32505856
 350 0132 A16A     		ldr	r1, [r4, #40]
 351 0134 0139     		subs	r1, r1, #1
 352              	.LVL20:
 353              	.LBB18:
 354              	.LBI18:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 41


 355              		.loc 2 981 31 view .LVU111
 356              	.LBB19:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357              		.loc 2 983 3 view .LVU112
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 358              		.loc 2 988 4 view .LVU113
 359 0136 4FF0F870 		mov	r0, #32505856
 360              		.syntax unified
 361              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 362 013a 90FAA0F0 		rbit r0, r0
 363              	@ 0 "" 2
 364              	.LVL21:
 365              		.loc 2 1001 3 view .LVU114
 366              		.loc 2 1001 3 is_stmt 0 view .LVU115
 367              		.thumb
 368              		.syntax unified
 369              	.LBE19:
 370              	.LBE18:
 611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                  ADC_SQR1_L                                   ,
 371              		.loc 1 611 7 view .LVU116
 372 013e B0FA80F0 		clz	r0, r0
 373 0142 8140     		lsls	r1, r1, r0
 374 0144 0A43     		orrs	r2, r2, r1
 375 0146 2A63     		str	r2, [r5, #48]
 376              	.L12:
 626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                            ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 377              		.loc 1 626 5 is_stmt 1 view .LVU117
 626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                            ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 378              		.loc 1 626 10 is_stmt 0 view .LVU118
 379 0148 2268     		ldr	r2, [r4]
 380 014a 9168     		ldr	r1, [r2, #8]
 626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                            ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 381              		.loc 1 626 40 view .LVU119
 382 014c 124A     		ldr	r2, .L25+16
 383 014e 0A40     		ands	r2, r2, r1
 626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                            ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 384              		.loc 1 626 8 view .LVU120
 385 0150 9A42     		cmp	r2, r3
 386 0152 0BD0     		beq	.L24
 642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 387              		.loc 1 642 7 is_stmt 1 view .LVU121
 388 0154 E36C     		ldr	r3, [r4, #76]
 389              	.LVL22:
 642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 390              		.loc 1 642 7 is_stmt 0 view .LVU122
 391 0156 23F01203 		bic	r3, r3, #18
 392 015a 43F01003 		orr	r3, r3, #16
 393 015e E364     		str	r3, [r4, #76]
 647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 394              		.loc 1 647 7 is_stmt 1 view .LVU123
 395 0160 236D     		ldr	r3, [r4, #80]
 396 0162 43F00103 		orr	r3, r3, #1
 397 0166 2365     		str	r3, [r4, #80]
 649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 398              		.loc 1 649 7 view .LVU124
 399              	.LVL23:
 649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 42


 400              		.loc 1 649 22 is_stmt 0 view .LVU125
 401 0168 0120     		movs	r0, #1
 402 016a 0BE0     		b	.L3
 403              	.LVL24:
 404              	.L24:
 632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 405              		.loc 1 632 7 is_stmt 1 view .LVU126
 406 016c 0020     		movs	r0, #0
 407 016e 2065     		str	r0, [r4, #80]
 635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 408              		.loc 1 635 7 view .LVU127
 409 0170 E36C     		ldr	r3, [r4, #76]
 410              	.LVL25:
 635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 411              		.loc 1 635 7 is_stmt 0 view .LVU128
 412 0172 23F00303 		bic	r3, r3, #3
 413 0176 43F00103 		orr	r3, r3, #1
 414 017a E364     		str	r3, [r4, #76]
 415 017c 02E0     		b	.L3
 416              	.LVL26:
 417              	.L14:
 418              	.LCFI2:
 419              		.cfi_def_cfa_offset 0
 420              		.cfi_restore 4
 421              		.cfi_restore 5
 422              		.cfi_restore 6
 423              		.cfi_restore 14
 431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 424              		.loc 1 431 12 view .LVU129
 425 017e 0120     		movs	r0, #1
 426              	.LVL27:
 660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 427              		.loc 1 660 1 view .LVU130
 428 0180 7047     		bx	lr
 429              	.LVL28:
 430              	.L15:
 431              	.LCFI3:
 432              		.cfi_def_cfa_offset 24
 433              		.cfi_offset 4, -16
 434              		.cfi_offset 5, -12
 435              		.cfi_offset 6, -8
 436              		.cfi_offset 14, -4
 655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 437              		.loc 1 655 20 view .LVU131
 438 0182 0120     		movs	r0, #1
 439              	.LVL29:
 440              	.L3:
 660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 441              		.loc 1 660 1 view .LVU132
 442 0184 02B0     		add	sp, sp, #8
 443              	.LCFI4:
 444              		.cfi_def_cfa_offset 16
 445              		@ sp needed
 446 0186 70BD     		pop	{r4, r5, r6, pc}
 447              	.LVL30:
 448              	.L26:
 660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 43


 449              		.loc 1 660 1 view .LVU133
 450              		.align	2
 451              	.L25:
 452 0188 00270140 		.word	1073817344
 453 018c FF16FCFC 		.word	-50587905
 454 0190 89F1FFC0 		.word	-1056968311
 455 0194 00380240 		.word	1073887232
 456 0198 FEFF80BF 		.word	-1082064898
 457              		.cfi_endproc
 458              	.LFE72:
 460              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 461              		.align	1
 462              		.weak	HAL_ADC_MspDeInit
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 467              	HAL_ADC_MspDeInit:
 468              	.LVL31:
 469              	.LFB75:
 829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
 831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
 833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
 834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 470              		.loc 1 836 1 is_stmt 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   UNUSED(hadc);
 475              		.loc 1 838 3 view .LVU135
 839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****    */ 
 843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 476              		.loc 1 843 1 is_stmt 0 view .LVU136
 477 0000 7047     		bx	lr
 478              		.cfi_endproc
 479              	.LFE75:
 481              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 482              		.align	1
 483              		.global	HAL_ADC_PollForConversion
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 488              	HAL_ADC_PollForConversion:
 489              	.LVL32:
 490              	.LFB78:
 844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
 847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Register a User ADC Callback
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 44


 848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         This parameter can be one of the following values:
 853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion complete callback ID
 855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status
 864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (pCallback == NULL)
 870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Update the error code */
 872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     return HAL_ERROR;
 875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0)
 878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     switch (CallbackID)
 880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 45


 905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       default :
 910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Update the error code */
 911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Return error status */
 914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         status = HAL_ERROR;
 915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     switch (CallbackID)
 921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       default :
 931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Update the error code */
 932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Return error status */
 935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         status = HAL_ERROR;
 936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else
 940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Update the error code */
 942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Return error status */
 945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     status =  HAL_ERROR;
 946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return status;
 949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
 952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
 953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
 954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
 957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         This parameter can be one of the following values:
 958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion complete callback ID
 960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 46


 962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status
 968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
 969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
 970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0)
 974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     switch (CallbackID)
 976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
 979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
 983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
 987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
 991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
 995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
 996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
 999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
1000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
1004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       default :
1006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Update the error code */
1007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
1009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Return error status */
1010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         status =  HAL_ERROR;
1011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
1012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     switch (CallbackID)
1017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 47


1019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
1021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
1022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
1025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
1026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       default :
1027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Update the error code */
1028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
1030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Return error status */
1031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         status =  HAL_ERROR;
1032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         break;
1033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else
1036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Update the error code */
1038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Return error status */
1041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     status =  HAL_ERROR;
1042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return status;
1045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @}
1051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  *  @brief    ADC IO operation functions 
1055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  *
1056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** @verbatim   
1057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  ===============================================================================
1058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       ##### IO operation functions #####
1059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  ===============================================================================
1060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Start conversion of regular group.
1062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Stop conversion of regular group.
1063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Poll for conversion event.
1065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Handle ADC interrupt request
1069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** @endverbatim
1072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @{
1073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 48


1076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group.
1077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         Interruptions enabled in this function: None.
1078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status
1080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
1082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
1083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process locked */
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Enable the ADC peripheral */
1092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
1093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state                                                          */
1098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* update ADC state.                                                      */
1106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     else
1118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Reset ADC all error code fields */
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Process unlocked */
1124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
1131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 49


1133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
1134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
1135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* trigger event.                                                         */
1136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
1137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Start ADC conversion on regular group */
1139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_SWSTART);
1140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return function status */
1144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return tmp_hal_status;
1145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
1149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
1151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status.
1155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
1158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process locked */
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Disable ADC peripheral */
1168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state */
1174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process unlocked */
1180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return function status */
1183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return tmp_hal_status;
1184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 50


1190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are 
1191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
1194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
1198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.
1202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status
1203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
1205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 491              		.loc 1 1205 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		.loc 1 1205 1 is_stmt 0 view .LVU138
 496 0000 70B5     		push	{r4, r5, r6, lr}
 497              	.LCFI5:
 498              		.cfi_def_cfa_offset 16
 499              		.cfi_offset 4, -16
 500              		.cfi_offset 5, -12
 501              		.cfi_offset 6, -8
 502              		.cfi_offset 14, -4
 503 0002 0446     		mov	r4, r0
 504 0004 0D46     		mov	r5, r1
1206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tickstart = 0;
 505              		.loc 1 1206 3 is_stmt 1 view .LVU139
 506              	.LVL33:
1207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  
1208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 507              		.loc 1 1209 3 view .LVU140
1210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
1212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* each conversion:                                                       */
1213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
1215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
1216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* ADC configured in DMA mode and and polling for end of each conversion. */
1217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 508              		.loc 1 1217 3 view .LVU141
 509              		.loc 1 1217 7 is_stmt 0 view .LVU142
 510 0006 0368     		ldr	r3, [r0]
 511 0008 9A68     		ldr	r2, [r3, #8]
 512              		.loc 1 1217 6 view .LVU143
 513 000a 12F4806F 		tst	r2, #1024
 514 000e 03D0     		beq	.L29
1218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 515              		.loc 1 1218 7 discriminator 1 view .LVU144
 516 0010 9B68     		ldr	r3, [r3, #8]
1217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 517              		.loc 1 1217 57 discriminator 1 view .LVU145
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 51


 518 0012 13F4807F 		tst	r3, #256
 519 0016 19D1     		bne	.L41
 520              	.L29:
1219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Update ADC state machine to error */
1221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Process unlocked */
1224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     return HAL_ERROR;
1227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Get tick count */
1230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   tickstart = HAL_GetTick();
 521              		.loc 1 1230 3 is_stmt 1 view .LVU146
 522              		.loc 1 1230 15 is_stmt 0 view .LVU147
 523 0018 FFF7FEFF 		bl	HAL_GetTick
 524              	.LVL34:
 525              		.loc 1 1230 15 view .LVU148
 526 001c 0646     		mov	r6, r0
 527              	.LVL35:
1231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Wait until End of Conversion flag is raised */
1233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_EOC))
 528              		.loc 1 1233 3 is_stmt 1 view .LVU149
 529              	.L32:
 530              		.loc 1 1233 9 view .LVU150
 531 001e 2368     		ldr	r3, [r4]
 532 0020 1A68     		ldr	r2, [r3]
 533 0022 12F0020F 		tst	r2, #2
 534 0026 20D1     		bne	.L42
1234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 535              		.loc 1 1236 5 view .LVU151
 536              		.loc 1 1236 7 is_stmt 0 view .LVU152
 537 0028 B5F1FF3F 		cmp	r5, #-1
 538 002c F7D0     		beq	.L32
1237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if((Timeout == 0) || ((HAL_GetTick() - tickstart ) > Timeout))
 539              		.loc 1 1238 7 is_stmt 1 view .LVU153
 540              		.loc 1 1238 9 is_stmt 0 view .LVU154
 541 002e B5B9     		cbnz	r5, .L43
 542              	.L33:
1239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
1240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         if(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_EOC))
 543              		.loc 1 1241 9 is_stmt 1 view .LVU155
 544              		.loc 1 1241 12 is_stmt 0 view .LVU156
 545 0030 2368     		ldr	r3, [r4]
 546 0032 1B68     		ldr	r3, [r3]
 547              		.loc 1 1241 11 view .LVU157
 548 0034 13F0020F 		tst	r3, #2
 549 0038 F1D1     		bne	.L32
1242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
1243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Update ADC state machine to timeout */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 52


1244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 550              		.loc 1 1244 11 is_stmt 1 view .LVU158
 551 003a E36C     		ldr	r3, [r4, #76]
 552 003c 43F00403 		orr	r3, r3, #4
 553 0040 E364     		str	r3, [r4, #76]
1245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Process unlocked */
1247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 554              		.loc 1 1247 11 view .LVU159
 555              		.loc 1 1247 11 view .LVU160
 556 0042 0023     		movs	r3, #0
 557 0044 84F84830 		strb	r3, [r4, #72]
 558              		.loc 1 1247 11 view .LVU161
1248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           return HAL_TIMEOUT;
 559              		.loc 1 1249 11 view .LVU162
 560              		.loc 1 1249 18 is_stmt 0 view .LVU163
 561 0048 0320     		movs	r0, #3
 562 004a 35E0     		b	.L30
 563              	.LVL36:
 564              	.L41:
1221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 565              		.loc 1 1221 5 is_stmt 1 view .LVU164
 566 004c C36C     		ldr	r3, [r0, #76]
 567 004e 43F02003 		orr	r3, r3, #32
 568 0052 C364     		str	r3, [r0, #76]
1224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 569              		.loc 1 1224 5 view .LVU165
1224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 570              		.loc 1 1224 5 view .LVU166
 571 0054 0023     		movs	r3, #0
 572 0056 80F84830 		strb	r3, [r0, #72]
1224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 573              		.loc 1 1224 5 view .LVU167
1226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 574              		.loc 1 1226 5 view .LVU168
1226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 575              		.loc 1 1226 12 is_stmt 0 view .LVU169
 576 005a 0120     		movs	r0, #1
 577              	.LVL37:
1226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 578              		.loc 1 1226 12 view .LVU170
 579 005c 2CE0     		b	.L30
 580              	.LVL38:
 581              	.L43:
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 582              		.loc 1 1238 30 discriminator 1 view .LVU171
 583 005e FFF7FEFF 		bl	HAL_GetTick
 584              	.LVL39:
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 585              		.loc 1 1238 44 discriminator 1 view .LVU172
 586 0062 801B     		subs	r0, r0, r6
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 587              		.loc 1 1238 25 discriminator 1 view .LVU173
 588 0064 A842     		cmp	r0, r5
 589 0066 DAD9     		bls	.L32
 590 0068 E2E7     		b	.L33
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 53


 591              	.L42:
1250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
1251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
1252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Clear end of conversion flag of regular group if low power feature     */
1256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* "Auto Wait" is disabled, to not interfere with this feature until data */
1257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* register is read using function HAL_ADC_GetValue().                    */
1258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (hadc->Init.LowPowerAutoWait == DISABLE)
 592              		.loc 1 1258 3 is_stmt 1 view .LVU174
 593              		.loc 1 1258 17 is_stmt 0 view .LVU175
 594 006a A269     		ldr	r2, [r4, #24]
 595              		.loc 1 1258 6 view .LVU176
 596 006c 12B9     		cbnz	r2, .L36
1259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Clear regular group conversion flag */
1261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 597              		.loc 1 1261 5 is_stmt 1 view .LVU177
 598 006e 6FF01202 		mvn	r2, #18
 599 0072 1A60     		str	r2, [r3]
 600              	.L36:
1262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Update ADC state machine */
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 601              		.loc 1 1265 3 view .LVU178
 602 0074 E36C     		ldr	r3, [r4, #76]
 603 0076 43F40073 		orr	r3, r3, #512
 604 007a E364     		str	r3, [r4, #76]
1266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Note: On STM32L1, there is no independent flag of end of sequence.       */
1270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /*       The test of scan sequence on going is done either with scan        */
1271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /*       sequence disabled or with end of conversion flag set to            */
1272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /*       of end of sequence.                                                */
1273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 605              		.loc 1 1273 3 view .LVU179
 606              		.loc 1 1273 6 is_stmt 0 view .LVU180
 607 007c 2368     		ldr	r3, [r4]
 608 007e 9A68     		ldr	r2, [r3, #8]
 609              		.loc 1 1273 5 view .LVU181
 610 0080 12F0405F 		tst	r2, #805306368
 611 0084 17D1     		bne	.L38
1274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 612              		.loc 1 1274 17 discriminator 1 view .LVU182
 613 0086 94F82400 		ldrb	r0, [r4, #36]	@ zero_extendqisi2
1273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 614              		.loc 1 1273 60 discriminator 1 view .LVU183
 615 008a B0B9     		cbnz	r0, .L39
1275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 616              		.loc 1 1275 7 view .LVU184
 617 008c 1A6B     		ldr	r2, [r3, #48]
1274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 618              		.loc 1 1274 60 view .LVU185
 619 008e 12F0F87F 		tst	r2, #32505856
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 54


 620 0092 03D0     		beq	.L37
1276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 621              		.loc 1 1276 7 view .LVU186
 622 0094 9B68     		ldr	r3, [r3, #8]
1275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 623              		.loc 1 1275 56 view .LVU187
 624 0096 13F4806F 		tst	r3, #1024
 625 009a 0DD1     		bne	.L30
 626              	.L37:
1277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state */
1279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 627              		.loc 1 1279 5 is_stmt 1 view .LVU188
 628 009c E36C     		ldr	r3, [r4, #76]
 629 009e 23F48073 		bic	r3, r3, #256
 630 00a2 E364     		str	r3, [r4, #76]
1280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 631              		.loc 1 1281 5 view .LVU189
 632              		.loc 1 1281 9 is_stmt 0 view .LVU190
 633 00a4 E36C     		ldr	r3, [r4, #76]
 634              		.loc 1 1281 8 view .LVU191
 635 00a6 13F4805F 		tst	r3, #4096
 636 00aa 05D1     		bne	.L30
1282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     { 
1283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 637              		.loc 1 1283 7 is_stmt 1 view .LVU192
 638 00ac E36C     		ldr	r3, [r4, #76]
 639 00ae 43F00103 		orr	r3, r3, #1
 640 00b2 E364     		str	r3, [r4, #76]
 641 00b4 00E0     		b	.L30
 642              	.L38:
1284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return ADC state */
1288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return HAL_OK;
 643              		.loc 1 1288 10 is_stmt 0 view .LVU193
 644 00b6 0020     		movs	r0, #0
 645              	.LVL40:
 646              	.L30:
1289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 647              		.loc 1 1289 1 view .LVU194
 648 00b8 70BD     		pop	{r4, r5, r6, pc}
 649              	.LVL41:
 650              	.L39:
1288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 651              		.loc 1 1288 10 view .LVU195
 652 00ba 0020     		movs	r0, #0
 653 00bc FCE7     		b	.L30
 654              		.cfi_endproc
 655              	.LFE78:
 657              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 658              		.align	1
 659              		.global	HAL_ADC_PollForEvent
 660              		.syntax unified
 661              		.thumb
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 55


 662              		.thumb_func
 664              	HAL_ADC_PollForEvent:
 665              	.LVL42:
 666              	.LFB79:
1290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Poll for conversion event.
1293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  EventType the ADC event type.
1295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          This parameter can be one of the following values:
1296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watchdog event.
1297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
1298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.
1299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status
1300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 667              		.loc 1 1302 1 is_stmt 1 view -0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		.loc 1 1302 1 is_stmt 0 view .LVU197
 672 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 673              	.LCFI6:
 674              		.cfi_def_cfa_offset 24
 675              		.cfi_offset 4, -24
 676              		.cfi_offset 5, -20
 677              		.cfi_offset 6, -16
 678              		.cfi_offset 7, -12
 679              		.cfi_offset 8, -8
 680              		.cfi_offset 14, -4
 681 0004 0546     		mov	r5, r0
 682 0006 0E46     		mov	r6, r1
 683 0008 1746     		mov	r7, r2
1303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tickstart = 0;
 684              		.loc 1 1303 3 is_stmt 1 view .LVU198
 685              	.LVL43:
1304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 686              		.loc 1 1306 3 view .LVU199
1307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 687              		.loc 1 1307 3 view .LVU200
1308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Get tick count */
1310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   tickstart = HAL_GetTick();
 688              		.loc 1 1310 3 view .LVU201
 689              		.loc 1 1310 15 is_stmt 0 view .LVU202
 690 000a FFF7FEFF 		bl	HAL_GetTick
 691              	.LVL44:
 692              		.loc 1 1310 15 view .LVU203
 693 000e 8046     		mov	r8, r0
 694              	.LVL45:
1311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check selected event flag */
1313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
 695              		.loc 1 1313 3 is_stmt 1 view .LVU204
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 56


 696              	.L46:
 697              		.loc 1 1313 45 view .LVU205
 698              		.loc 1 1313 9 is_stmt 0 view .LVU206
 699 0010 2C68     		ldr	r4, [r5]
 700 0012 2368     		ldr	r3, [r4]
 701              		.loc 1 1313 45 view .LVU207
 702 0014 36EA0303 		bics	r3, r6, r3
 703 0018 18D0     		beq	.L53
1314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 704              		.loc 1 1316 5 is_stmt 1 view .LVU208
 705              		.loc 1 1316 7 is_stmt 0 view .LVU209
 706 001a B7F1FF3F 		cmp	r7, #-1
 707 001e F7D0     		beq	.L46
1317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if((Timeout == 0) || ((HAL_GetTick() - tickstart ) > Timeout))
 708              		.loc 1 1318 7 is_stmt 1 view .LVU210
 709              		.loc 1 1318 9 is_stmt 0 view .LVU211
 710 0020 6FB9     		cbnz	r7, .L54
 711              	.L47:
1319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
1320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         if(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
 712              		.loc 1 1321 9 is_stmt 1 view .LVU212
 713              		.loc 1 1321 12 is_stmt 0 view .LVU213
 714 0022 2B68     		ldr	r3, [r5]
 715 0024 1B68     		ldr	r3, [r3]
 716              		.loc 1 1321 11 view .LVU214
 717 0026 36EA0303 		bics	r3, r6, r3
 718 002a F1D0     		beq	.L46
1322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
1323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 719              		.loc 1 1324 11 is_stmt 1 view .LVU215
 720 002c EB6C     		ldr	r3, [r5, #76]
 721 002e 43F00403 		orr	r3, r3, #4
 722 0032 EB64     		str	r3, [r5, #76]
1325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Process unlocked */
1327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 723              		.loc 1 1327 11 view .LVU216
 724              		.loc 1 1327 11 view .LVU217
 725 0034 0023     		movs	r3, #0
 726 0036 85F84830 		strb	r3, [r5, #72]
 727              		.loc 1 1327 11 view .LVU218
1328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           return HAL_TIMEOUT;
 728              		.loc 1 1329 11 view .LVU219
 729              		.loc 1 1329 18 is_stmt 0 view .LVU220
 730 003a 0320     		movs	r0, #3
 731 003c 14E0     		b	.L49
 732              	.L54:
1318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 733              		.loc 1 1318 30 discriminator 1 view .LVU221
 734 003e FFF7FEFF 		bl	HAL_GetTick
 735              	.LVL46:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 57


1318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 736              		.loc 1 1318 44 discriminator 1 view .LVU222
 737 0042 A0EB0800 		sub	r0, r0, r8
1318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 738              		.loc 1 1318 25 discriminator 1 view .LVU223
 739 0046 B842     		cmp	r0, r7
 740 0048 E2D9     		bls	.L46
 741 004a EAE7     		b	.L47
 742              	.L53:
1330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
1331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
1332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   switch(EventType)
 743              		.loc 1 1335 3 is_stmt 1 view .LVU224
 744 004c 012E     		cmp	r6, #1
 745 004e 0DD0     		beq	.L55
1336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
1338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   case ADC_AWD_EVENT:
1339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state */
1340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     break;
1345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Overrun event */
1347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   default: /* Case ADC_OVR_EVENT */
1348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Note: On STM32L1, ADC overrun can be set through other parameters      */
1349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*       refer to description of parameter "EOCSelection" for more        */
1350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*       details.                                                         */
1351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state */
1353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 746              		.loc 1 1353 5 view .LVU225
 747 0050 EB6C     		ldr	r3, [r5, #76]
 748 0052 43F48063 		orr	r3, r3, #1024
 749 0056 EB64     		str	r3, [r5, #76]
1354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC error code to overrun */
1355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 750              		.loc 1 1355 5 view .LVU226
 751 0058 2B6D     		ldr	r3, [r5, #80]
 752 005a 43F00203 		orr	r3, r3, #2
 753 005e 2B65     		str	r3, [r5, #80]
1356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Clear ADC overrun flag */
1358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 754              		.loc 1 1358 5 view .LVU227
 755 0060 6FF02003 		mvn	r3, #32
 756 0064 2360     		str	r3, [r4]
1359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     break;
 757              		.loc 1 1359 5 view .LVU228
1360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return ADC state */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 58


1363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return HAL_OK;
 758              		.loc 1 1363 10 is_stmt 0 view .LVU229
 759 0066 0020     		movs	r0, #0
 760              	.L49:
1364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 761              		.loc 1 1364 1 view .LVU230
 762 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 763              	.LVL47:
 764              	.L55:
1340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 765              		.loc 1 1340 5 is_stmt 1 view .LVU231
 766 006c EB6C     		ldr	r3, [r5, #76]
 767 006e 43F48033 		orr	r3, r3, #65536
 768 0072 EB64     		str	r3, [r5, #76]
1343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     break;
 769              		.loc 1 1343 5 view .LVU232
 770 0074 6FF00103 		mvn	r3, #1
 771 0078 2360     		str	r3, [r4]
1344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 772              		.loc 1 1344 5 view .LVU233
1363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 773              		.loc 1 1363 10 is_stmt 0 view .LVU234
 774 007a 0020     		movs	r0, #0
1344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 775              		.loc 1 1344 5 view .LVU235
 776 007c F4E7     		b	.L49
 777              		.cfi_endproc
 778              	.LFE79:
 780              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 781              		.align	1
 782              		.global	HAL_ADC_GetValue
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 787              	HAL_ADC_GetValue:
 788              	.LVL48:
 789              	.LFB84:
1365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
1368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         Interruptions enabled in this function:
1369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          - EOC (end of conversion of regular group)
1370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          - overrun
1371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status
1374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
1377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process locked */
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 59


1385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Enable the ADC peripheral */
1386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
1387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state                                                          */
1392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* update ADC state.                                                      */
1400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     else
1412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Reset ADC all error code fields */
1414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Process unlocked */
1418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
1425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
1427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
1428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
1430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
1431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
1432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* trigger event.                                                         */
1433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
1434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Start ADC conversion on regular group */
1436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_SWSTART);
1437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return function status */
1441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return tmp_hal_status;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 60


1442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of 
1447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
1450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
1453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process locked */
1459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Disable ADC peripheral */
1463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state */
1472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process unlocked */
1478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return function status */
1481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return tmp_hal_status;
1482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
1486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         through DMA.
1487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         Interruptions enabled in this function:
1488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          - DMA transfer complete
1489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          - DMA half transfer
1490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          - overrun
1491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
1496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 61


1499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process locked */
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Enable the ADC peripheral */
1508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
1509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state                                                          */
1514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* update ADC state.                                                      */
1522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     else
1534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Reset ADC all error code fields */
1536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Process unlocked */
1540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set the DMA transfer complete callback */
1545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set the DMA half transfer complete callback */
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set the DMA error callback */
1551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* start (in case of SW start):                                           */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 62


1556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
1560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Enable ADC overrun interrupt */
1562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Enable ADC DMA mode */
1565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
1566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Start the DMA channel */
1568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
1569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
1571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
1572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
1573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* trigger event.                                                         */
1574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
1575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
1576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
1577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Start ADC conversion on regular group */
1579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_SWSTART);
1580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return function status */
1584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return tmp_hal_status;
1585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
1590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         ADC peripheral.
1591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
1592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status.
1596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
1599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      
1604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process locked */
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Disable ADC peripheral */
1609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 63


1613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Disable ADC DMA mode */
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
1616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
1620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       HAL_DMA_Abort(hadc->DMA_Handle);
1622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
1624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
1625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
1626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Update ADC state machine to error */
1627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
1629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Set ADC state */
1632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
1636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process unlocked */
1641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return function status */
1644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return tmp_hal_status;
1645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS 
1652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *            to flag EOC.
1656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         To clear this flag, either use function: 
1660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
1662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval ADC group regular conversion data
1665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 790              		.loc 1 1667 1 is_stmt 1 view -0
 791              		.cfi_startproc
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 64


 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              		@ link register save eliminated.
1668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 795              		.loc 1 1669 3 view .LVU237
1670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return ADC converted value */ 
1675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return hadc->Instance->DR;
 796              		.loc 1 1675 3 view .LVU238
 797              		.loc 1 1675 14 is_stmt 0 view .LVU239
 798 0000 0368     		ldr	r3, [r0]
 799              		.loc 1 1675 24 view .LVU240
 800 0002 986D     		ldr	r0, [r3, #88]
 801              	.LVL49:
1676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 802              		.loc 1 1676 1 view .LVU241
 803 0004 7047     		bx	lr
 804              		.cfi_endproc
 805              	.LFE84:
 807              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 808              		.align	1
 809              		.weak	HAL_ADC_ConvCpltCallback
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 814              	HAL_ADC_ConvCpltCallback:
 815              	.LVL50:
 816              	.LFB86:
1677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
1680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
1682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
1685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_sr = hadc->Instance->SR;
1686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_cr1 = hadc->Instance->CR1;
1687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
1692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* ========== Check End of Conversion flag for regular group ========== */
1695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if((tmp_cr1 & ADC_IT_EOC) == ADC_IT_EOC)
1696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if((tmp_sr & ADC_FLAG_EOC) == ADC_FLAG_EOC)
1698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Update state machine on conversion status if not in error state */
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 65


1702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Set ADC state */
1703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
1704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
1705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Determine whether any further conversion upcoming on group regular   */
1707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* by external trigger, continuous mode or scan sequence on going.      */
1708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Note: On STM32L1, there is no independent flag of end of sequence.   */
1709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /*       The test of scan sequence on going is done either with scan    */
1710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /*       sequence disabled or with end of conversion flag set to        */
1711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /*       of end of sequence.                                            */
1712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
1713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)            &&
1714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
1715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
1716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
1717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Disable ADC end of single conversion interrupt on group regular */
1718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* by overrun IRQ process below.                                      */
1721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
1723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Set ADC state */
1724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
1726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
1728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
1730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
1731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       hadc->ConvCpltCallback(hadc);
1734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #else
1735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       HAL_ADC_ConvCpltCallback(hadc);
1736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Clear regular group conversion flag */
1739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* ========== Check End of Conversion flag for injected group ========== */
1744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if((tmp_cr1 & ADC_IT_JEOC) == ADC_IT_JEOC)
1745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if((tmp_sr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC)
1747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Update state machine on conversion status if not in error state */
1749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
1751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Set ADC state */
1752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
1753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
1754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Determine whether any further conversion upcoming on group injected  */
1756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* by external trigger, scan sequence on going or by automatic injected */
1757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* conversion from group regular (same conditions as group regular      */
1758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* interruption disabling above).                                       */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 66


1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
1760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
1761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
1762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
1763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
1764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
1765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
1766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Disable ADC end of single conversion interrupt on group injected */
1767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
1769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* Set ADC state */
1770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
1771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
1773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         { 
1774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
1776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
1777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       hadc->InjectedConvCpltCallback(hadc);
1780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #else
1781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
1782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Clear injected group conversion flag */
1785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
1786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****    
1789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* ========== Check Analog watchdog flags ========== */
1790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if((tmp_cr1 & ADC_IT_AWD) == ADC_IT_AWD)
1791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if((tmp_sr & ADC_FLAG_AWD) == ADC_FLAG_AWD)
1793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Set ADC state */
1795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       hadc->LevelOutOfWindowCallback(hadc);
1799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #else
1800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
1801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
1804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
1809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if((tmp_cr1 & ADC_IT_OVR) == ADC_IT_OVR)
1810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if((tmp_sr & ADC_FLAG_OVR) == ADC_FLAG_OVR)
1812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
1813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Note: On STM32L1, ADC overrun can be set through other parameters    */
1814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /*       refer to description of parameter "EOCSelection" for more      */
1815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /*       details.                                                       */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 67


1816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Set ADC error code to overrun */
1818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Clear ADC overrun flag */
1821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
1825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #else
1826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
1827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Clear the Overrun flag */
1830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
1832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Conversion complete callback in non blocking mode 
1838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
1840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 817              		.loc 1 1842 1 is_stmt 1 view -0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
1843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   UNUSED(hadc);
 822              		.loc 1 1844 3 view .LVU243
1845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
1848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****    */
1849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 823              		.loc 1 1849 1 is_stmt 0 view .LVU244
 824 0000 7047     		bx	lr
 825              		.cfi_endproc
 826              	.LFE86:
 828              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 829              		.align	1
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 834              	ADC_DMAConvCplt:
 835              	.LVL51:
 836              	.LFB96:
1850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non blocking mode 
1853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 68


1855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
1858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   UNUSED(hadc);
1860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
1863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode. 
1868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
1870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
1873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   UNUSED(hadc);
1875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
1878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  ADC error callback in non blocking mode
1883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA)
1884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
1885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
1886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
1887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
1888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
1889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
1890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
1892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
1895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   UNUSED(hadc);
1897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
1900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
1902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @}
1906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  *  @brief    Peripheral Control functions 
1910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  *
1911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** @verbatim   
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 69


1912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  ===============================================================================
1913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****              ##### Peripheral Control functions #####
1914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  ===============================================================================  
1915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Configure channels on regular group
1917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Configure the analog watchdog
1918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
1919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** @endverbatim
1920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @{
1921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
1923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
1924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Configures the the selected channel to be linked to the regular
1925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         group.
1926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
1927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
1928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         These internal paths can be be disabled using function 
1929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         HAL_ADC_DeInit().
1930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
1931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         This function initializes channel into regular group, following  
1932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
1933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without resetting 
1934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         the ADC.
1935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
1936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
1937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         "ADC_ChannelConfTypeDef".
1938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
1939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  sConfig Structure of ADC channel for regular group.
1940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status
1941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
1942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
1944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
1946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
1948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process locked */
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****    
1957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Regular sequence configuration */
1958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For Rank 1 to 6 */
1959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (sConfig->Rank < 7)
1960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR5,
1962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR5_RK(ADC_SQR5_SQ1, sConfig->Rank),
1963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR5_RK(sConfig->Channel, sConfig->Rank) );
1964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For Rank 7 to 12 */
1966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else if (sConfig->Rank < 13)
1967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR4,
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 70


1969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR4_RK(ADC_SQR4_SQ7, sConfig->Rank),
1970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR4_RK(sConfig->Channel, sConfig->Rank) );
1971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For Rank 13 to 18 */
1973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else if (sConfig->Rank < 19)
1974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR3,
1976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ13, sConfig->Rank),
1977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
1978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For Rank 19 to 24 */
1980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else if (sConfig->Rank < 25)
1981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR2,
1983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ19, sConfig->Rank),
1984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
1985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For Rank 25 to 28 */
1987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else
1988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR1,
1990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR1_RK(ADC_SQR1_SQ25, sConfig->Rank),
1991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
1992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
1993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
1995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Channel sampling time configuration */
1996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For channels 0 to 9 */
1997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (sConfig->Channel < ADC_CHANNEL_10)
1998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
1999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR3,
2000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SMPR3(ADC_SMPR3_SMP0, sConfig->Channel),
2001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SMPR3(sConfig->SamplingTime, sConfig->Channel) );
2002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For channels 10 to 19 */
2004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else if (sConfig->Channel < ADC_CHANNEL_20)
2005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR2,
2007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel),
2008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
2009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For channels 20 to 26 for devices Cat.1, Cat.2, Cat.3 */
2011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For channels 20 to 29 for devices Cat4, Cat.5 */
2012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else if (sConfig->Channel <= ADC_SMPR1_CHANNEL_MAX)
2013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR1,
2015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SMPR1(ADC_SMPR1_SMP20, sConfig->Channel),
2016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
2017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* For channels 30 to 31 for devices Cat4, Cat.5 */
2019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else
2020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     ADC_SMPR0_CHANNEL_SET(hadc, sConfig->SamplingTime, sConfig->Channel);
2022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
2025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* and VREFINT measurement path.                                            */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 71


2026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) ||
2027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
2028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if (READ_BIT(ADC->CCR, ADC_CCR_TSVREFE) == RESET)
2030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
2031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         SET_BIT(ADC->CCR, ADC_CCR_TSVREFE);
2032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
2033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
2035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Compute number of CPU cycles to wait for */
2037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000));
2038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           while(wait_loop_index != 0)
2039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           {
2040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****             wait_loop_index--;
2041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           }
2042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
2043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
2044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process unlocked */
2047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return function status */
2050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return tmp_hal_status;
2051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
2052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
2055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   Analog watchdog thresholds can be modified while ADC conversion
2056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         is on going.
2057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
2064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  AnalogWDGConfig Structure of ADC analog watchdog configuration
2065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status
2066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
2068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
2069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
2070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
2072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
2073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
2074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
2075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
2077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
2078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
2079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
2081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 72


2083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process locked */
2084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_LOCK(hadc);
2085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Analog watchdog configuration */
2087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Configure ADC Analog watchdog interrupt */
2089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
2090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
2092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
2093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else
2095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
2097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
2098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Configuration of analog watchdog:                                        */
2101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /*  - Set the analog watchdog enable mode: regular and/or injected groups,  */
2102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /*    one or all channels.                                                  */
2103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /*  - Set the Analog watchdog channel (is not used if watchdog              */
2104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /*    mode "all channels": ADC_CFGR_AWD1SGL=0).                             */
2105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   hadc->Instance->CR1 &= ~( ADC_CR1_AWDSGL |
2106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                             ADC_CR1_JAWDEN |
2107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                             ADC_CR1_AWDEN  |
2108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                             ADC_CR1_AWDCH   );
2109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   hadc->Instance->CR1 |= ( AnalogWDGConfig->WatchdogMode |
2111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            AnalogWDGConfig->Channel       );
2112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
2113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Set the high threshold */
2114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
2115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Set the low threshold */
2117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
2118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Process unlocked */
2120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return function status */
2123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return HAL_OK;
2124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
2125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @}
2129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
2133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  *  @brief    Peripheral State functions
2134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  *
2135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** @verbatim
2136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  ===============================================================================
2137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****             ##### Peripheral State and Errors functions #####
2138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****  ===============================================================================  
2139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     [..]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 73


2140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the  
2141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     peripheral.
2142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Check the ADC state
2143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (+) Check the ADC error code
2144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** @endverbatim
2146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @{
2147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  return the ADC state
2151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
2152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL state
2153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
2155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
2156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return ADC state */
2157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return hadc->State;
2158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
2159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Return the ADC error code
2162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
2163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval ADC Error Code
2164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
2166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
2167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return hadc->ErrorCode;
2168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
2169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @}
2172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @}
2176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
2179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @{
2180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Enable the selected ADC.
2184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
2185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
2186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   If low power mode AutoPowerOff is enabled, power-on/off phases are
2187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         performed automatically by hardware.
2188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         In this mode, this function is useless and must not be called because 
2189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         flag ADC_FLAG_RDY is not usable.
2190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         Therefore, this function must be called under condition of
2191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         "if (hadc->Init.LowPowerAutoPowerOff != ENABLE)".
2192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
2193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status.
2194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
2196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 74


2197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tickstart = 0;
2198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
2199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
2201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
2202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
2203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
2204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
2205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Enable the Peripheral */
2207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
2208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
2209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Delay for ADC stabilization time */
2210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
2211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
2212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     while(wait_loop_index != 0)
2213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
2214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       wait_loop_index--;
2215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
2216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
2217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Get tick count */
2218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     tickstart = HAL_GetTick();    
2219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
2221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     while(ADC_IS_ENABLE(hadc) == RESET)
2222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
2223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if((HAL_GetTick() - tickstart ) > ADC_ENABLE_TIMEOUT)
2224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
2225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         if(ADC_IS_ENABLE(hadc) == RESET)
2227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
2228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Update ADC state machine to error */
2229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Set ADC error code to ADC IP internal error */
2232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Process unlocked */
2235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
2236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           return HAL_ERROR;
2238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
2239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
2240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
2241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****    
2243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return HAL status */
2244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return HAL_OK;
2245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
2246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  Stop ADC conversion and disable the selected ADC
2249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   *         stopped to disable the ADC.
2251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hadc ADC handle
2252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval HAL status.
2253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 75


2254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop_Disable(ADC_HandleTypeDef* hadc)
2255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
2256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tickstart = 0;
2257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Verification if ADC is not already disabled */
2259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) != RESET)
2260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Disable the ADC peripheral */
2262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     __HAL_ADC_DISABLE(hadc);
2263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      
2264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Get tick count */
2265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     tickstart = HAL_GetTick();
2266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
2267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Wait for ADC effectively disabled */    
2268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     while(ADC_IS_ENABLE(hadc) != RESET)
2269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
2270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if((HAL_GetTick() - tickstart ) > ADC_DISABLE_TIMEOUT)
2271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
2272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         if(ADC_IS_ENABLE(hadc) != RESET)
2274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
2275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Update ADC state machine to error */
2276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           /* Set ADC error code to ADC IP internal error */
2279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           return HAL_ERROR;
2282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
2283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
2284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
2285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return HAL status */
2288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return HAL_OK;
2289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
2290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
2293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hdma pointer to DMA handle.
2294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
2295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 837              		.loc 1 2297 1 is_stmt 1 view -0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841              		.loc 1 2297 1 is_stmt 0 view .LVU246
 842 0000 08B5     		push	{r3, lr}
 843              	.LCFI7:
 844              		.cfi_def_cfa_offset 8
 845              		.cfi_offset 3, -8
 846              		.cfi_offset 14, -4
2298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 847              		.loc 1 2299 3 is_stmt 1 view .LVU247
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 76


 848              		.loc 1 2299 22 is_stmt 0 view .LVU248
 849 0002 436A     		ldr	r3, [r0, #36]
 850              	.LVL52:
2300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 851              		.loc 1 2302 3 is_stmt 1 view .LVU249
 852              		.loc 1 2302 7 is_stmt 0 view .LVU250
 853 0004 DA6C     		ldr	r2, [r3, #76]
 854              		.loc 1 2302 6 view .LVU251
 855 0006 12F0500F 		tst	r2, #80
 856 000a 27D1     		bne	.L59
2303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Update ADC state machine */
2305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 857              		.loc 1 2305 5 is_stmt 1 view .LVU252
 858 000c DA6C     		ldr	r2, [r3, #76]
 859 000e 42F40072 		orr	r2, r2, #512
 860 0012 DA64     		str	r2, [r3, #76]
2306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
2307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
2308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
2309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Note: On STM32L1, there is no independent flag of end of sequence.   */
2310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
2311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
2312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /*       of end of sequence.                                            */
2313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 861              		.loc 1 2313 5 view .LVU253
 862              		.loc 1 2313 8 is_stmt 0 view .LVU254
 863 0014 1A68     		ldr	r2, [r3]
 864 0016 9168     		ldr	r1, [r2, #8]
 865              		.loc 1 2313 7 view .LVU255
 866 0018 11F0405F 		tst	r1, #805306368
 867 001c 1AD1     		bne	.L60
2314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 868              		.loc 1 2314 19 discriminator 1 view .LVU256
 869 001e 93F82410 		ldrb	r1, [r3, #36]	@ zero_extendqisi2
2313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 870              		.loc 1 2313 62 discriminator 1 view .LVU257
 871 0022 B9B9     		cbnz	r1, .L60
2315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 872              		.loc 1 2315 9 view .LVU258
 873 0024 116B     		ldr	r1, [r2, #48]
2314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 874              		.loc 1 2314 62 view .LVU259
 875 0026 11F0F87F 		tst	r1, #32505856
 876 002a 03D0     		beq	.L61
2316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 877              		.loc 1 2316 9 view .LVU260
 878 002c 9168     		ldr	r1, [r2, #8]
2315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 879              		.loc 1 2315 58 view .LVU261
 880 002e 11F4806F 		tst	r1, #1024
 881 0032 0FD1     		bne	.L60
 882              	.L61:
2317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
2318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 77


2319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
2320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
2321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
2322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 883              		.loc 1 2322 7 is_stmt 1 view .LVU262
 884 0034 5168     		ldr	r1, [r2, #4]
 885 0036 21F02001 		bic	r1, r1, #32
 886 003a 5160     		str	r1, [r2, #4]
2323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
2324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       /* Set ADC state */
2325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 887              		.loc 1 2325 7 view .LVU263
 888 003c DA6C     		ldr	r2, [r3, #76]
 889 003e 22F48072 		bic	r2, r2, #256
 890 0042 DA64     		str	r2, [r3, #76]
2326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
2327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 891              		.loc 1 2327 7 view .LVU264
 892              		.loc 1 2327 11 is_stmt 0 view .LVU265
 893 0044 DA6C     		ldr	r2, [r3, #76]
 894              		.loc 1 2327 10 view .LVU266
 895 0046 12F4805F 		tst	r2, #4096
 896 004a 03D1     		bne	.L60
2328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
2329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 897              		.loc 1 2329 9 is_stmt 1 view .LVU267
 898 004c DA6C     		ldr	r2, [r3, #76]
 899 004e 42F00102 		orr	r2, r2, #1
 900 0052 DA64     		str	r2, [r3, #76]
 901              	.L60:
2330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
2331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
2332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
2333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Conversion complete callback */
2334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #else
2337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 902              		.loc 1 2337 5 view .LVU268
 903 0054 1846     		mov	r0, r3
 904              	.LVL53:
 905              		.loc 1 2337 5 is_stmt 0 view .LVU269
 906 0056 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 907              	.LVL54:
 908              	.L58:
2338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   else
2341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
2342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Call DMA error callback */
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
2344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
2345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 909              		.loc 1 2345 1 view .LVU270
 910 005a 08BD     		pop	{r3, pc}
 911              	.LVL55:
 912              	.L59:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 78


2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 913              		.loc 1 2343 5 is_stmt 1 view .LVU271
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 914              		.loc 1 2343 9 is_stmt 0 view .LVU272
 915 005c 5B6C     		ldr	r3, [r3, #68]
 916              	.LVL56:
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 917              		.loc 1 2343 21 view .LVU273
 918 005e 1B6B     		ldr	r3, [r3, #48]
2343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 919              		.loc 1 2343 5 view .LVU274
 920 0060 9847     		blx	r3
 921              	.LVL57:
 922              		.loc 1 2345 1 view .LVU275
 923 0062 FAE7     		b	.L58
 924              		.cfi_endproc
 925              	.LFE96:
 927              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 928              		.align	1
 929              		.weak	HAL_ADC_ConvHalfCpltCallback
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 934              	HAL_ADC_ConvHalfCpltCallback:
 935              	.LVL58:
 936              	.LFB87:
1857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 937              		.loc 1 1857 1 is_stmt 1 view -0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              		@ link register save eliminated.
1859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 942              		.loc 1 1859 3 view .LVU277
1864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 943              		.loc 1 1864 1 is_stmt 0 view .LVU278
 944 0000 7047     		bx	lr
 945              		.cfi_endproc
 946              	.LFE87:
 948              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 949              		.align	1
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 954              	ADC_DMAHalfConvCplt:
 955              	.LVL59:
 956              	.LFB97:
2346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hdma pointer to DMA handle.
2350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
2351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
2353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 957              		.loc 1 2353 1 is_stmt 1 view -0
 958              		.cfi_startproc
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 79


 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              		.loc 1 2353 1 is_stmt 0 view .LVU280
 962 0000 08B5     		push	{r3, lr}
 963              	.LCFI8:
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 3, -8
 966              		.cfi_offset 14, -4
2354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 967              		.loc 1 2355 3 is_stmt 1 view .LVU281
 968              	.LVL60:
2356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Half conversion callback */
2358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     hadc->ConvHalfCpltCallback(hadc);
2360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #else
2361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 969              		.loc 1 2361 3 view .LVU282
 970 0002 406A     		ldr	r0, [r0, #36]
 971              	.LVL61:
 972              		.loc 1 2361 3 is_stmt 0 view .LVU283
 973 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 974              	.LVL62:
2362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 975              		.loc 1 2363 1 view .LVU284
 976 0008 08BD     		pop	{r3, pc}
 977              		.cfi_endproc
 978              	.LFE97:
 980              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 981              		.align	1
 982              		.weak	HAL_ADC_LevelOutOfWindowCallback
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 987              	HAL_ADC_LevelOutOfWindowCallback:
 988              	.LVL63:
 989              	.LFB88:
1872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 990              		.loc 1 1872 1 is_stmt 1 view -0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994              		@ link register save eliminated.
1874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 995              		.loc 1 1874 3 view .LVU286
1879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 996              		.loc 1 1879 1 is_stmt 0 view .LVU287
 997 0000 7047     		bx	lr
 998              		.cfi_endproc
 999              	.LFE88:
 1001              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1002              		.align	1
 1003              		.weak	HAL_ADC_ErrorCallback
 1004              		.syntax unified
 1005              		.thumb
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 80


 1006              		.thumb_func
 1008              	HAL_ADC_ErrorCallback:
 1009              	.LVL64:
 1010              	.LFB89:
1894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1011              		.loc 1 1894 1 is_stmt 1 view -0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
1896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1016              		.loc 1 1896 3 view .LVU289
1901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1017              		.loc 1 1901 1 is_stmt 0 view .LVU290
 1018 0000 7047     		bx	lr
 1019              		.cfi_endproc
 1020              	.LFE89:
 1022              		.section	.text.ADC_DMAError,"ax",%progbits
 1023              		.align	1
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1028              	ADC_DMAError:
 1029              	.LVL65:
 1030              	.LFB98:
2364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
2365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** /**
2366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @brief  DMA error callback 
2367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @param  hdma pointer to DMA handle.
2368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   * @retval None
2369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   */
2370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
2371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** {
 1031              		.loc 1 2371 1 is_stmt 1 view -0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              		.loc 1 2371 1 is_stmt 0 view .LVU292
 1036 0000 08B5     		push	{r3, lr}
 1037              	.LCFI9:
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 3, -8
 1040              		.cfi_offset 14, -4
2372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1041              		.loc 1 2373 3 is_stmt 1 view .LVU293
 1042              		.loc 1 2373 22 is_stmt 0 view .LVU294
 1043 0002 406A     		ldr	r0, [r0, #36]
 1044              	.LVL66:
2374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Set ADC state */
2376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1045              		.loc 1 2376 3 is_stmt 1 view .LVU295
 1046 0004 C36C     		ldr	r3, [r0, #76]
 1047 0006 43F04003 		orr	r3, r3, #64
 1048 000a C364     		str	r3, [r0, #76]
2377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 81


2378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1049              		.loc 1 2379 3 view .LVU296
 1050 000c 036D     		ldr	r3, [r0, #80]
 1051 000e 43F00403 		orr	r3, r3, #4
 1052 0012 0365     		str	r3, [r0, #80]
2380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
2381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Error callback */
2382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #else
2385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1053              		.loc 1 2385 3 view .LVU297
 1054 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1055              	.LVL67:
2386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 1056              		.loc 1 2387 1 is_stmt 0 view .LVU298
 1057 0018 08BD     		pop	{r3, pc}
 1058              		.cfi_endproc
 1059              	.LFE98:
 1061              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1062              		.align	1
 1063              		.global	HAL_ADC_IRQHandler
 1064              		.syntax unified
 1065              		.thumb
 1066              		.thumb_func
 1068              	HAL_ADC_IRQHandler:
 1069              	.LVL68:
 1070              	.LFB85:
1684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_sr = hadc->Instance->SR;
 1071              		.loc 1 1684 1 is_stmt 1 view -0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
1684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_sr = hadc->Instance->SR;
 1075              		.loc 1 1684 1 is_stmt 0 view .LVU300
 1076 0000 70B5     		push	{r4, r5, r6, lr}
 1077              	.LCFI10:
 1078              		.cfi_def_cfa_offset 16
 1079              		.cfi_offset 4, -16
 1080              		.cfi_offset 5, -12
 1081              		.cfi_offset 6, -8
 1082              		.cfi_offset 14, -4
 1083 0002 0446     		mov	r4, r0
1685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_cr1 = hadc->Instance->CR1;
 1084              		.loc 1 1685 3 is_stmt 1 view .LVU301
1685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_cr1 = hadc->Instance->CR1;
 1085              		.loc 1 1685 25 is_stmt 0 view .LVU302
 1086 0004 0368     		ldr	r3, [r0]
1685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tmp_cr1 = hadc->Instance->CR1;
 1087              		.loc 1 1685 12 view .LVU303
 1088 0006 1E68     		ldr	r6, [r3]
 1089              	.LVL69:
1686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1090              		.loc 1 1686 3 is_stmt 1 view .LVU304
1686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 82


 1091              		.loc 1 1686 12 is_stmt 0 view .LVU305
 1092 0008 5D68     		ldr	r5, [r3, #4]
 1093              	.LVL70:
1689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 1094              		.loc 1 1689 3 is_stmt 1 view .LVU306
1690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 1095              		.loc 1 1690 3 view .LVU307
1691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1096              		.loc 1 1691 3 view .LVU308
1695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1097              		.loc 1 1695 3 view .LVU309
1695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1098              		.loc 1 1695 5 is_stmt 0 view .LVU310
 1099 000a 15F0200F 		tst	r5, #32
 1100 000e 30D0     		beq	.L72
1697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1101              		.loc 1 1697 5 is_stmt 1 view .LVU311
1697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1102              		.loc 1 1697 7 is_stmt 0 view .LVU312
 1103 0010 16F0020F 		tst	r6, #2
 1104 0014 2DD0     		beq	.L72
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1105              		.loc 1 1700 7 is_stmt 1 view .LVU313
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1106              		.loc 1 1700 11 is_stmt 0 view .LVU314
 1107 0016 C26C     		ldr	r2, [r0, #76]
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1108              		.loc 1 1700 10 view .LVU315
 1109 0018 12F0100F 		tst	r2, #16
 1110 001c 03D1     		bne	.L73
1703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
 1111              		.loc 1 1703 9 is_stmt 1 view .LVU316
 1112 001e C26C     		ldr	r2, [r0, #76]
 1113 0020 42F40072 		orr	r2, r2, #512
 1114 0024 C264     		str	r2, [r0, #76]
 1115              	.L73:
1712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1116              		.loc 1 1712 7 view .LVU317
1712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1117              		.loc 1 1712 10 is_stmt 0 view .LVU318
 1118 0026 9A68     		ldr	r2, [r3, #8]
1712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1119              		.loc 1 1712 9 view .LVU319
 1120 0028 12F0405F 		tst	r2, #805306368
 1121 002c 1AD1     		bne	.L74
1713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1122              		.loc 1 1713 21 discriminator 1 view .LVU320
 1123 002e 94F82420 		ldrb	r2, [r4, #36]	@ zero_extendqisi2
1712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1124              		.loc 1 1712 64 discriminator 1 view .LVU321
 1125 0032 BAB9     		cbnz	r2, .L74
1714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1126              		.loc 1 1714 11 view .LVU322
 1127 0034 1A6B     		ldr	r2, [r3, #48]
1713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1128              		.loc 1 1713 64 view .LVU323
 1129 0036 12F0F87F 		tst	r2, #32505856
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 83


 1130 003a 03D0     		beq	.L75
1715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1131              		.loc 1 1715 11 view .LVU324
 1132 003c 9A68     		ldr	r2, [r3, #8]
1714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1133              		.loc 1 1714 60 view .LVU325
 1134 003e 12F4806F 		tst	r2, #1024
 1135 0042 0FD1     		bne	.L74
 1136              	.L75:
1721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
 1137              		.loc 1 1721 9 is_stmt 1 view .LVU326
 1138 0044 5A68     		ldr	r2, [r3, #4]
 1139 0046 22F02002 		bic	r2, r2, #32
 1140 004a 5A60     		str	r2, [r3, #4]
1724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
 1141              		.loc 1 1724 9 view .LVU327
 1142 004c E36C     		ldr	r3, [r4, #76]
 1143 004e 23F48073 		bic	r3, r3, #256
 1144 0052 E364     		str	r3, [r4, #76]
1726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 1145              		.loc 1 1726 9 view .LVU328
1726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 1146              		.loc 1 1726 13 is_stmt 0 view .LVU329
 1147 0054 E36C     		ldr	r3, [r4, #76]
1726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 1148              		.loc 1 1726 12 view .LVU330
 1149 0056 13F4805F 		tst	r3, #4096
 1150 005a 03D1     		bne	.L74
1728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
 1151              		.loc 1 1728 11 is_stmt 1 view .LVU331
 1152 005c E36C     		ldr	r3, [r4, #76]
 1153 005e 43F00103 		orr	r3, r3, #1
 1154 0062 E364     		str	r3, [r4, #76]
 1155              	.L74:
1735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1156              		.loc 1 1735 7 view .LVU332
 1157 0064 2046     		mov	r0, r4
 1158              	.LVL71:
1735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1159              		.loc 1 1735 7 is_stmt 0 view .LVU333
 1160 0066 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1161              	.LVL72:
1739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 1162              		.loc 1 1739 7 is_stmt 1 view .LVU334
 1163 006a 2368     		ldr	r3, [r4]
 1164 006c 6FF01202 		mvn	r2, #18
 1165 0070 1A60     		str	r2, [r3]
 1166              	.L72:
1744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1167              		.loc 1 1744 3 view .LVU335
1744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1168              		.loc 1 1744 5 is_stmt 0 view .LVU336
 1169 0072 15F0800F 		tst	r5, #128
 1170 0076 39D0     		beq	.L76
1746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1171              		.loc 1 1746 5 is_stmt 1 view .LVU337
1746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 84


 1172              		.loc 1 1746 7 is_stmt 0 view .LVU338
 1173 0078 16F0040F 		tst	r6, #4
 1174 007c 36D0     		beq	.L76
1749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1175              		.loc 1 1749 7 is_stmt 1 view .LVU339
1749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1176              		.loc 1 1749 11 is_stmt 0 view .LVU340
 1177 007e E36C     		ldr	r3, [r4, #76]
1749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1178              		.loc 1 1749 10 view .LVU341
 1179 0080 13F0100F 		tst	r3, #16
 1180 0084 03D1     		bne	.L77
1752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       }
 1181              		.loc 1 1752 9 is_stmt 1 view .LVU342
 1182 0086 E36C     		ldr	r3, [r4, #76]
 1183 0088 43F40053 		orr	r3, r3, #8192
 1184 008c E364     		str	r3, [r4, #76]
 1185              	.L77:
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1186              		.loc 1 1759 7 view .LVU343
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1187              		.loc 1 1759 10 is_stmt 0 view .LVU344
 1188 008e 2368     		ldr	r3, [r4]
 1189 0090 9A68     		ldr	r2, [r3, #8]
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1190              		.loc 1 1759 9 view .LVU345
 1191 0092 12F4401F 		tst	r2, #3145728
 1192 0096 22D1     		bne	.L78
1760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1193              		.loc 1 1760 11 discriminator 1 view .LVU346
 1194 0098 5A6C     		ldr	r2, [r3, #68]
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1195              		.loc 1 1759 66 discriminator 1 view .LVU347
 1196 009a 12F4401F 		tst	r2, #3145728
 1197 009e 03D0     		beq	.L79
1761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1198              		.loc 1 1761 11 view .LVU348
 1199 00a0 9A68     		ldr	r2, [r3, #8]
1760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1200              		.loc 1 1760 62 view .LVU349
 1201 00a2 12F4806F 		tst	r2, #1024
 1202 00a6 1AD1     		bne	.L78
 1203              	.L79:
1762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1204              		.loc 1 1762 11 view .LVU350
 1205 00a8 5A68     		ldr	r2, [r3, #4]
1761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1206              		.loc 1 1761 66 view .LVU351
 1207 00aa 12F4806F 		tst	r2, #1024
 1208 00ae 16D1     		bne	.L78
1763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 1209              		.loc 1 1763 12 view .LVU352
 1210 00b0 9A68     		ldr	r2, [r3, #8]
1762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1211              		.loc 1 1762 62 view .LVU353
 1212 00b2 12F0405F 		tst	r2, #805306368
 1213 00b6 12D1     		bne	.L78
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 85


1764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1214              		.loc 1 1764 22 view .LVU354
 1215 00b8 94F82420 		ldrb	r2, [r4, #36]	@ zero_extendqisi2
1763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 1216              		.loc 1 1763 54 view .LVU355
 1217 00bc 7AB9     		cbnz	r2, .L78
1767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
 1218              		.loc 1 1767 9 is_stmt 1 view .LVU356
 1219 00be 5A68     		ldr	r2, [r3, #4]
 1220 00c0 22F08002 		bic	r2, r2, #128
 1221 00c4 5A60     		str	r2, [r3, #4]
1770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1222              		.loc 1 1770 9 view .LVU357
 1223 00c6 E36C     		ldr	r3, [r4, #76]
 1224 00c8 23F48053 		bic	r3, r3, #4096
 1225 00cc E364     		str	r3, [r4, #76]
1772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         { 
 1226              		.loc 1 1772 9 view .LVU358
1772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         { 
 1227              		.loc 1 1772 13 is_stmt 0 view .LVU359
 1228 00ce E36C     		ldr	r3, [r4, #76]
1772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         { 
 1229              		.loc 1 1772 12 view .LVU360
 1230 00d0 13F4807F 		tst	r3, #256
 1231 00d4 03D1     		bne	.L78
1774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
 1232              		.loc 1 1774 11 is_stmt 1 view .LVU361
 1233 00d6 E36C     		ldr	r3, [r4, #76]
 1234 00d8 43F00103 		orr	r3, r3, #1
 1235 00dc E364     		str	r3, [r4, #76]
 1236              	.L78:
1781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1237              		.loc 1 1781 7 view .LVU362
 1238 00de 2046     		mov	r0, r4
 1239 00e0 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1240              	.LVL73:
1785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 1241              		.loc 1 1785 7 view .LVU363
 1242 00e4 2368     		ldr	r3, [r4]
 1243 00e6 6FF00C02 		mvn	r2, #12
 1244 00ea 1A60     		str	r2, [r3]
 1245              	.L76:
1790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1246              		.loc 1 1790 3 view .LVU364
1790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1247              		.loc 1 1790 5 is_stmt 0 view .LVU365
 1248 00ec 15F0400F 		tst	r5, #64
 1249 00f0 02D0     		beq	.L80
1792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1250              		.loc 1 1792 5 is_stmt 1 view .LVU366
1792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1251              		.loc 1 1792 7 is_stmt 0 view .LVU367
 1252 00f2 16F0010F 		tst	r6, #1
 1253 00f6 06D1     		bne	.L83
 1254              	.L80:
1809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1255              		.loc 1 1809 3 is_stmt 1 view .LVU368
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 86


1809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1256              		.loc 1 1809 5 is_stmt 0 view .LVU369
 1257 00f8 15F0806F 		tst	r5, #67108864
 1258 00fc 02D0     		beq	.L71
1811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1259              		.loc 1 1811 5 is_stmt 1 view .LVU370
1811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1260              		.loc 1 1811 7 is_stmt 0 view .LVU371
 1261 00fe 16F0200F 		tst	r6, #32
 1262 0102 0CD1     		bne	.L84
 1263              	.LVL74:
 1264              	.L71:
1834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1265              		.loc 1 1834 1 view .LVU372
 1266 0104 70BD     		pop	{r4, r5, r6, pc}
 1267              	.LVL75:
 1268              	.L83:
1795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 1269              		.loc 1 1795 7 is_stmt 1 view .LVU373
 1270 0106 E36C     		ldr	r3, [r4, #76]
 1271 0108 43F48033 		orr	r3, r3, #65536
 1272 010c E364     		str	r3, [r4, #76]
1800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1273              		.loc 1 1800 7 view .LVU374
 1274 010e 2046     		mov	r0, r4
 1275 0110 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1276              	.LVL76:
1804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 1277              		.loc 1 1804 7 view .LVU375
 1278 0114 2368     		ldr	r3, [r4]
 1279 0116 6FF00102 		mvn	r2, #1
 1280 011a 1A60     		str	r2, [r3]
 1281 011c ECE7     		b	.L80
 1282              	.L84:
1818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 1283              		.loc 1 1818 7 view .LVU376
 1284 011e 236D     		ldr	r3, [r4, #80]
 1285 0120 43F00203 		orr	r3, r3, #2
 1286 0124 2365     		str	r3, [r4, #80]
1821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 1287              		.loc 1 1821 7 view .LVU377
 1288 0126 2368     		ldr	r3, [r4]
 1289 0128 6FF02005 		mvn	r5, #32
 1290              	.LVL77:
1821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 1291              		.loc 1 1821 7 is_stmt 0 view .LVU378
 1292 012c 1D60     		str	r5, [r3]
1826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1293              		.loc 1 1826 7 is_stmt 1 view .LVU379
 1294 012e 2046     		mov	r0, r4
 1295 0130 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1296              	.LVL78:
1830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 1297              		.loc 1 1830 7 view .LVU380
 1298 0134 2368     		ldr	r3, [r4]
 1299 0136 1D60     		str	r5, [r3]
1834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 87


 1300              		.loc 1 1834 1 is_stmt 0 view .LVU381
 1301 0138 E4E7     		b	.L71
 1302              		.cfi_endproc
 1303              	.LFE85:
 1305              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1306              		.align	1
 1307              		.global	HAL_ADC_ConfigChannel
 1308              		.syntax unified
 1309              		.thumb
 1310              		.thumb_func
 1312              	HAL_ADC_ConfigChannel:
 1313              	.LVL79:
 1314              	.LFB90:
1943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1315              		.loc 1 1943 1 is_stmt 1 view -0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 8
 1318              		@ frame_needed = 0, uses_anonymous_args = 0
 1319              		@ link register save eliminated.
1943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1320              		.loc 1 1943 1 is_stmt 0 view .LVU383
 1321 0000 30B4     		push	{r4, r5}
 1322              	.LCFI11:
 1323              		.cfi_def_cfa_offset 8
 1324              		.cfi_offset 4, -8
 1325              		.cfi_offset 5, -4
 1326 0002 82B0     		sub	sp, sp, #8
 1327              	.LCFI12:
 1328              		.cfi_def_cfa_offset 16
1944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
 1329              		.loc 1 1944 3 is_stmt 1 view .LVU384
 1330              	.LVL80:
1945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1331              		.loc 1 1945 3 view .LVU385
1945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1332              		.loc 1 1945 17 is_stmt 0 view .LVU386
 1333 0004 0023     		movs	r3, #0
 1334 0006 0193     		str	r3, [sp, #4]
1948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
 1335              		.loc 1 1948 3 is_stmt 1 view .LVU387
1949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 1336              		.loc 1 1949 3 view .LVU388
1950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 1337              		.loc 1 1950 3 view .LVU389
1951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1338              		.loc 1 1951 3 view .LVU390
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1339              		.loc 1 1954 3 view .LVU391
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1340              		.loc 1 1954 3 view .LVU392
 1341 0008 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 1342 000c 012B     		cmp	r3, #1
 1343 000e 00F0BE80 		beq	.L99
 1344 0012 0246     		mov	r2, r0
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1345              		.loc 1 1954 3 discriminator 2 view .LVU393
 1346 0014 0123     		movs	r3, #1
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 88


 1347 0016 80F84830 		strb	r3, [r0, #72]
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1348              		.loc 1 1954 3 discriminator 2 view .LVU394
1959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1349              		.loc 1 1959 3 discriminator 2 view .LVU395
1959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1350              		.loc 1 1959 14 is_stmt 0 discriminator 2 view .LVU396
 1351 001a 4B68     		ldr	r3, [r1, #4]
1959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1352              		.loc 1 1959 6 discriminator 2 view .LVU397
 1353 001c 062B     		cmp	r3, #6
 1354 001e 2BD8     		bhi	.L87
1961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR5_RK(ADC_SQR5_SQ1, sConfig->Rank),
 1355              		.loc 1 1961 5 is_stmt 1 view .LVU398
 1356 0020 0468     		ldr	r4, [r0]
 1357 0022 206C     		ldr	r0, [r4, #64]
 1358              	.LVL81:
1961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR5_RK(ADC_SQR5_SQ1, sConfig->Rank),
 1359              		.loc 1 1961 5 is_stmt 0 view .LVU399
 1360 0024 03EB8303 		add	r3, r3, r3, lsl #2
 1361 0028 053B     		subs	r3, r3, #5
 1362 002a 4FF01F0C 		mov	ip, #31
 1363 002e 0CFA03FC 		lsl	ip, ip, r3
 1364 0032 20EA0C00 		bic	r0, r0, ip
 1365 0036 0D68     		ldr	r5, [r1]
 1366 0038 05FA03F3 		lsl	r3, r5, r3
 1367 003c 0343     		orrs	r3, r3, r0
 1368 003e 2364     		str	r3, [r4, #64]
 1369              	.L88:
1997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1370              		.loc 1 1997 3 is_stmt 1 view .LVU400
1997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1371              		.loc 1 1997 14 is_stmt 0 view .LVU401
 1372 0040 0B68     		ldr	r3, [r1]
1997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1373              		.loc 1 1997 6 view .LVU402
 1374 0042 092B     		cmp	r3, #9
 1375 0044 56D8     		bhi	.L92
1999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SMPR3(ADC_SMPR3_SMP0, sConfig->Channel),
 1376              		.loc 1 1999 5 is_stmt 1 view .LVU403
 1377 0046 1468     		ldr	r4, [r2]
 1378 0048 6069     		ldr	r0, [r4, #20]
 1379 004a 03EB4303 		add	r3, r3, r3, lsl #1
 1380 004e 4FF0070C 		mov	ip, #7
 1381 0052 0CFA03FC 		lsl	ip, ip, r3
 1382 0056 20EA0C00 		bic	r0, r0, ip
 1383 005a 8D68     		ldr	r5, [r1, #8]
 1384 005c 05FA03F3 		lsl	r3, r5, r3
 1385 0060 0343     		orrs	r3, r3, r0
 1386 0062 6361     		str	r3, [r4, #20]
 1387              	.L93:
2026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
 1388              		.loc 1 2026 3 view .LVU404
2026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
 1389              		.loc 1 2026 15 is_stmt 0 view .LVU405
 1390 0064 0B68     		ldr	r3, [r1]
2026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 89


 1391              		.loc 1 2026 52 view .LVU406
 1392 0066 103B     		subs	r3, r3, #16
2026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
 1393              		.loc 1 2026 6 view .LVU407
 1394 0068 012B     		cmp	r3, #1
 1395 006a 71D9     		bls	.L101
 1396              	.LVL82:
 1397              	.L96:
2047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1398              		.loc 1 2047 3 is_stmt 1 view .LVU408
2047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1399              		.loc 1 2047 3 view .LVU409
 1400 006c 0020     		movs	r0, #0
 1401 006e 82F84800 		strb	r0, [r2, #72]
2047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1402              		.loc 1 2047 3 view .LVU410
2050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 1403              		.loc 1 2050 3 view .LVU411
 1404              	.LVL83:
 1405              	.L86:
2051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1406              		.loc 1 2051 1 is_stmt 0 view .LVU412
 1407 0072 02B0     		add	sp, sp, #8
 1408              	.LCFI13:
 1409              		.cfi_remember_state
 1410              		.cfi_def_cfa_offset 8
 1411              		@ sp needed
 1412 0074 30BC     		pop	{r4, r5}
 1413              	.LCFI14:
 1414              		.cfi_restore 5
 1415              		.cfi_restore 4
 1416              		.cfi_def_cfa_offset 0
 1417 0076 7047     		bx	lr
 1418              	.LVL84:
 1419              	.L87:
 1420              	.LCFI15:
 1421              		.cfi_restore_state
1966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1422              		.loc 1 1966 8 is_stmt 1 view .LVU413
1966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1423              		.loc 1 1966 11 is_stmt 0 view .LVU414
 1424 0078 0C2B     		cmp	r3, #12
 1425 007a 0DD8     		bhi	.L89
1968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR4_RK(ADC_SQR4_SQ7, sConfig->Rank),
 1426              		.loc 1 1968 5 is_stmt 1 view .LVU415
 1427 007c 0568     		ldr	r5, [r0]
 1428 007e E86B     		ldr	r0, [r5, #60]
 1429              	.LVL85:
1968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR4_RK(ADC_SQR4_SQ7, sConfig->Rank),
 1430              		.loc 1 1968 5 is_stmt 0 view .LVU416
 1431 0080 03EB8303 		add	r3, r3, r3, lsl #2
 1432 0084 233B     		subs	r3, r3, #35
 1433 0086 1F24     		movs	r4, #31
 1434 0088 9C40     		lsls	r4, r4, r3
 1435 008a 20EA0400 		bic	r0, r0, r4
 1436 008e 0C68     		ldr	r4, [r1]
 1437 0090 9C40     		lsls	r4, r4, r3
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 90


 1438 0092 2043     		orrs	r0, r0, r4
 1439 0094 E863     		str	r0, [r5, #60]
 1440 0096 D3E7     		b	.L88
 1441              	.LVL86:
 1442              	.L89:
1973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1443              		.loc 1 1973 8 is_stmt 1 view .LVU417
1973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1444              		.loc 1 1973 11 is_stmt 0 view .LVU418
 1445 0098 122B     		cmp	r3, #18
 1446 009a 0DD8     		bhi	.L90
1975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ13, sConfig->Rank),
 1447              		.loc 1 1975 5 is_stmt 1 view .LVU419
 1448 009c 0568     		ldr	r5, [r0]
 1449 009e A86B     		ldr	r0, [r5, #56]
 1450              	.LVL87:
1975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ13, sConfig->Rank),
 1451              		.loc 1 1975 5 is_stmt 0 view .LVU420
 1452 00a0 03EB8303 		add	r3, r3, r3, lsl #2
 1453 00a4 413B     		subs	r3, r3, #65
 1454 00a6 1F24     		movs	r4, #31
 1455 00a8 9C40     		lsls	r4, r4, r3
 1456 00aa 20EA0400 		bic	r0, r0, r4
 1457 00ae 0C68     		ldr	r4, [r1]
 1458 00b0 9C40     		lsls	r4, r4, r3
 1459 00b2 2043     		orrs	r0, r0, r4
 1460 00b4 A863     		str	r0, [r5, #56]
 1461 00b6 C3E7     		b	.L88
 1462              	.LVL88:
 1463              	.L90:
1980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1464              		.loc 1 1980 8 is_stmt 1 view .LVU421
1980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1465              		.loc 1 1980 11 is_stmt 0 view .LVU422
 1466 00b8 182B     		cmp	r3, #24
 1467 00ba 0DD8     		bhi	.L91
1982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ19, sConfig->Rank),
 1468              		.loc 1 1982 5 is_stmt 1 view .LVU423
 1469 00bc 0568     		ldr	r5, [r0]
 1470 00be 686B     		ldr	r0, [r5, #52]
 1471              	.LVL89:
1982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ19, sConfig->Rank),
 1472              		.loc 1 1982 5 is_stmt 0 view .LVU424
 1473 00c0 03EB8303 		add	r3, r3, r3, lsl #2
 1474 00c4 5F3B     		subs	r3, r3, #95
 1475 00c6 1F24     		movs	r4, #31
 1476 00c8 9C40     		lsls	r4, r4, r3
 1477 00ca 20EA0400 		bic	r0, r0, r4
 1478 00ce 0C68     		ldr	r4, [r1]
 1479 00d0 9C40     		lsls	r4, r4, r3
 1480 00d2 2043     		orrs	r0, r0, r4
 1481 00d4 6863     		str	r0, [r5, #52]
 1482 00d6 B3E7     		b	.L88
 1483              	.LVL90:
 1484              	.L91:
1989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR1_RK(ADC_SQR1_SQ25, sConfig->Rank),
 1485              		.loc 1 1989 5 is_stmt 1 view .LVU425
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 91


 1486 00d8 0568     		ldr	r5, [r0]
 1487 00da 286B     		ldr	r0, [r5, #48]
 1488              	.LVL91:
1989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SQR1_RK(ADC_SQR1_SQ25, sConfig->Rank),
 1489              		.loc 1 1989 5 is_stmt 0 view .LVU426
 1490 00dc 03EB8303 		add	r3, r3, r3, lsl #2
 1491 00e0 7D3B     		subs	r3, r3, #125
 1492 00e2 1F24     		movs	r4, #31
 1493 00e4 9C40     		lsls	r4, r4, r3
 1494 00e6 20EA0400 		bic	r0, r0, r4
 1495 00ea 0C68     		ldr	r4, [r1]
 1496 00ec 9C40     		lsls	r4, r4, r3
 1497 00ee 2043     		orrs	r0, r0, r4
 1498 00f0 2863     		str	r0, [r5, #48]
 1499 00f2 A5E7     		b	.L88
 1500              	.L92:
2004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1501              		.loc 1 2004 8 is_stmt 1 view .LVU427
2004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1502              		.loc 1 2004 11 is_stmt 0 view .LVU428
 1503 00f4 132B     		cmp	r3, #19
 1504 00f6 0DD8     		bhi	.L94
2006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel),
 1505              		.loc 1 2006 5 is_stmt 1 view .LVU429
 1506 00f8 1568     		ldr	r5, [r2]
 1507 00fa 2869     		ldr	r0, [r5, #16]
 1508 00fc 03EB4303 		add	r3, r3, r3, lsl #1
 1509 0100 1E3B     		subs	r3, r3, #30
 1510 0102 0724     		movs	r4, #7
 1511 0104 9C40     		lsls	r4, r4, r3
 1512 0106 20EA0400 		bic	r0, r0, r4
 1513 010a 8C68     		ldr	r4, [r1, #8]
 1514 010c 9C40     		lsls	r4, r4, r3
 1515 010e 2043     		orrs	r0, r0, r4
 1516 0110 2861     		str	r0, [r5, #16]
 1517 0112 A7E7     		b	.L93
 1518              	.L94:
2012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1519              		.loc 1 2012 8 view .LVU430
2012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1520              		.loc 1 2012 11 is_stmt 0 view .LVU431
 1521 0114 1D2B     		cmp	r3, #29
 1522 0116 0DD8     		bhi	.L95
2014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                ADC_SMPR1(ADC_SMPR1_SMP20, sConfig->Channel),
 1523              		.loc 1 2014 5 is_stmt 1 view .LVU432
 1524 0118 1568     		ldr	r5, [r2]
 1525 011a E868     		ldr	r0, [r5, #12]
 1526 011c 03EB4303 		add	r3, r3, r3, lsl #1
 1527 0120 3C3B     		subs	r3, r3, #60
 1528 0122 0724     		movs	r4, #7
 1529 0124 9C40     		lsls	r4, r4, r3
 1530 0126 20EA0400 		bic	r0, r0, r4
 1531 012a 8C68     		ldr	r4, [r1, #8]
 1532 012c 9C40     		lsls	r4, r4, r3
 1533 012e 2043     		orrs	r0, r0, r4
 1534 0130 E860     		str	r0, [r5, #12]
 1535 0132 97E7     		b	.L93
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 92


 1536              	.L95:
2021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 1537              		.loc 1 2021 5 view .LVU433
 1538 0134 1568     		ldr	r5, [r2]
 1539 0136 E86D     		ldr	r0, [r5, #92]
 1540 0138 03EB4303 		add	r3, r3, r3, lsl #1
 1541 013c 5A3B     		subs	r3, r3, #90
 1542 013e 0724     		movs	r4, #7
 1543 0140 9C40     		lsls	r4, r4, r3
 1544 0142 20EA0400 		bic	r0, r0, r4
 1545 0146 8C68     		ldr	r4, [r1, #8]
 1546 0148 9C40     		lsls	r4, r4, r3
 1547 014a 2043     		orrs	r0, r0, r4
 1548 014c E865     		str	r0, [r5, #92]
 1549 014e 89E7     		b	.L93
 1550              	.L101:
2029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1551              		.loc 1 2029 7 view .LVU434
2029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1552              		.loc 1 2029 11 is_stmt 0 view .LVU435
 1553 0150 104B     		ldr	r3, .L102
 1554 0152 5B68     		ldr	r3, [r3, #4]
2029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1555              		.loc 1 2029 10 view .LVU436
 1556 0154 13F4000F 		tst	r3, #8388608
 1557 0158 88D1     		bne	.L96
2031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         
 1558              		.loc 1 2031 9 is_stmt 1 view .LVU437
 1559 015a 0E48     		ldr	r0, .L102
 1560 015c 4368     		ldr	r3, [r0, #4]
 1561 015e 43F40003 		orr	r3, r3, #8388608
 1562 0162 4360     		str	r3, [r0, #4]
2033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 1563              		.loc 1 2033 9 view .LVU438
2033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 1564              		.loc 1 2033 20 is_stmt 0 view .LVU439
 1565 0164 0B68     		ldr	r3, [r1]
2033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 1566              		.loc 1 2033 12 view .LVU440
 1567 0166 102B     		cmp	r3, #16
 1568 0168 80D1     		bne	.L96
2037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           while(wait_loop_index != 0)
 1569              		.loc 1 2037 11 is_stmt 1 view .LVU441
2037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           while(wait_loop_index != 0)
 1570              		.loc 1 2037 73 is_stmt 0 view .LVU442
 1571 016a 0B4B     		ldr	r3, .L102+4
 1572 016c 1B68     		ldr	r3, [r3]
 1573 016e 0B49     		ldr	r1, .L102+8
 1574              	.LVL92:
2037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           while(wait_loop_index != 0)
 1575              		.loc 1 2037 73 view .LVU443
 1576 0170 A1FB0313 		umull	r1, r3, r1, r3
 1577 0174 9B0C     		lsrs	r3, r3, #18
2037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           while(wait_loop_index != 0)
 1578              		.loc 1 2037 54 view .LVU444
 1579 0176 03EB8303 		add	r3, r3, r3, lsl #2
 1580 017a 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 93


2037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           while(wait_loop_index != 0)
 1581              		.loc 1 2037 27 view .LVU445
 1582 017c 0193     		str	r3, [sp, #4]
2038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           {
 1583              		.loc 1 2038 11 is_stmt 1 view .LVU446
2038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           {
 1584              		.loc 1 2038 16 is_stmt 0 view .LVU447
 1585 017e 02E0     		b	.L97
 1586              	.L98:
2040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           }
 1587              		.loc 1 2040 13 is_stmt 1 view .LVU448
2040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           }
 1588              		.loc 1 2040 28 is_stmt 0 view .LVU449
 1589 0180 019B     		ldr	r3, [sp, #4]
 1590 0182 013B     		subs	r3, r3, #1
 1591 0184 0193     		str	r3, [sp, #4]
 1592              	.L97:
2038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****           {
 1593              		.loc 1 2038 33 is_stmt 1 view .LVU450
 1594 0186 019B     		ldr	r3, [sp, #4]
 1595 0188 002B     		cmp	r3, #0
 1596 018a F9D1     		bne	.L98
 1597 018c 6EE7     		b	.L96
 1598              	.LVL93:
 1599              	.L99:
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1600              		.loc 1 1954 3 is_stmt 0 view .LVU451
 1601 018e 0220     		movs	r0, #2
 1602              	.LVL94:
1954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1603              		.loc 1 1954 3 view .LVU452
 1604 0190 6FE7     		b	.L86
 1605              	.L103:
 1606 0192 00BF     		.align	2
 1607              	.L102:
 1608 0194 00270140 		.word	1073817344
 1609 0198 00000000 		.word	SystemCoreClock
 1610 019c 83DE1B43 		.word	1125899907
 1611              		.cfi_endproc
 1612              	.LFE90:
 1614              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 1615              		.align	1
 1616              		.global	HAL_ADC_AnalogWDGConfig
 1617              		.syntax unified
 1618              		.thumb
 1619              		.thumb_func
 1621              	HAL_ADC_AnalogWDGConfig:
 1622              	.LVL95:
 1623              	.LFB91:
2068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
 1624              		.loc 1 2068 1 is_stmt 1 view -0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628              		@ link register save eliminated.
2070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 1629              		.loc 1 2070 3 view .LVU454
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 94


2071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 1630              		.loc 1 2071 3 view .LVU455
2072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
 1631              		.loc 1 2072 3 view .LVU456
2073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
 1632              		.loc 1 2073 3 view .LVU457
2074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1633              		.loc 1 2074 3 view .LVU458
2076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 1634              		.loc 1 2076 3 view .LVU459
2080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 1635              		.loc 1 2080 5 view .LVU460
2084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1636              		.loc 1 2084 3 view .LVU461
2084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1637              		.loc 1 2084 3 view .LVU462
 1638 0000 90F84820 		ldrb	r2, [r0, #72]	@ zero_extendqisi2
 1639 0004 012A     		cmp	r2, #1
 1640 0006 29D0     		beq	.L108
2068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Check the parameters */
 1641              		.loc 1 2068 1 is_stmt 0 discriminator 2 view .LVU463
 1642 0008 30B4     		push	{r4, r5}
 1643              	.LCFI16:
 1644              		.cfi_def_cfa_offset 8
 1645              		.cfi_offset 4, -8
 1646              		.cfi_offset 5, -4
 1647 000a 0346     		mov	r3, r0
2084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1648              		.loc 1 2084 3 is_stmt 1 discriminator 2 view .LVU464
 1649 000c 0122     		movs	r2, #1
 1650 000e 80F84820 		strb	r2, [r0, #72]
2084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1651              		.loc 1 2084 3 discriminator 2 view .LVU465
2089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1652              		.loc 1 2089 3 discriminator 2 view .LVU466
2089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1653              		.loc 1 2089 21 is_stmt 0 discriminator 2 view .LVU467
 1654 0012 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
2089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1655              		.loc 1 2089 5 discriminator 2 view .LVU468
 1656 0014 012A     		cmp	r2, #1
 1657 0016 1BD0     		beq	.L113
2097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 1658              		.loc 1 2097 5 is_stmt 1 view .LVU469
 1659 0018 0068     		ldr	r0, [r0]
 1660              	.LVL96:
2097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 1661              		.loc 1 2097 5 is_stmt 0 view .LVU470
 1662 001a 4268     		ldr	r2, [r0, #4]
 1663 001c 22F04002 		bic	r2, r2, #64
 1664 0020 4260     		str	r2, [r0, #4]
 1665              	.L107:
2105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                             ADC_CR1_JAWDEN |
 1666              		.loc 1 2105 3 is_stmt 1 view .LVU471
2105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                             ADC_CR1_JAWDEN |
 1667              		.loc 1 2105 7 is_stmt 0 view .LVU472
 1668 0022 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 95


2105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                             ADC_CR1_JAWDEN |
 1669              		.loc 1 2105 23 view .LVU473
 1670 0024 4468     		ldr	r4, [r0, #4]
 1671 0026 0E4A     		ldr	r2, .L114
 1672 0028 2240     		ands	r2, r2, r4
 1673 002a 4260     		str	r2, [r0, #4]
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            AnalogWDGConfig->Channel       );
 1674              		.loc 1 2110 3 is_stmt 1 view .LVU474
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            AnalogWDGConfig->Channel       );
 1675              		.loc 1 2110 7 is_stmt 0 view .LVU475
 1676 002c 1C68     		ldr	r4, [r3]
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            AnalogWDGConfig->Channel       );
 1677              		.loc 1 2110 23 view .LVU476
 1678 002e 6268     		ldr	r2, [r4, #4]
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            AnalogWDGConfig->Channel       );
 1679              		.loc 1 2110 43 view .LVU477
 1680 0030 0868     		ldr	r0, [r1]
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            AnalogWDGConfig->Channel       );
 1681              		.loc 1 2110 58 view .LVU478
 1682 0032 4D68     		ldr	r5, [r1, #4]
 1683 0034 2843     		orrs	r0, r0, r5
2110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                            AnalogWDGConfig->Channel       );
 1684              		.loc 1 2110 23 view .LVU479
 1685 0036 0243     		orrs	r2, r2, r0
 1686 0038 6260     		str	r2, [r4, #4]
2114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1687              		.loc 1 2114 3 is_stmt 1 view .LVU480
2114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1688              		.loc 1 2114 7 is_stmt 0 view .LVU481
 1689 003a 1A68     		ldr	r2, [r3]
2114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1690              		.loc 1 2114 40 view .LVU482
 1691 003c C868     		ldr	r0, [r1, #12]
2114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1692              		.loc 1 2114 23 view .LVU483
 1693 003e 9062     		str	r0, [r2, #40]
2117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1694              		.loc 1 2117 3 is_stmt 1 view .LVU484
2117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1695              		.loc 1 2117 7 is_stmt 0 view .LVU485
 1696 0040 1A68     		ldr	r2, [r3]
2117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1697              		.loc 1 2117 40 view .LVU486
 1698 0042 0969     		ldr	r1, [r1, #16]
 1699              	.LVL97:
2117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1700              		.loc 1 2117 23 view .LVU487
 1701 0044 D162     		str	r1, [r2, #44]
2120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1702              		.loc 1 2120 3 is_stmt 1 view .LVU488
2120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1703              		.loc 1 2120 3 view .LVU489
 1704 0046 0020     		movs	r0, #0
 1705 0048 83F84800 		strb	r0, [r3, #72]
2120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1706              		.loc 1 2120 3 view .LVU490
2123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 96


 1707              		.loc 1 2123 3 view .LVU491
2124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1708              		.loc 1 2124 1 is_stmt 0 view .LVU492
 1709 004c 30BC     		pop	{r4, r5}
 1710              	.LCFI17:
 1711              		.cfi_remember_state
 1712              		.cfi_restore 5
 1713              		.cfi_restore 4
 1714              		.cfi_def_cfa_offset 0
 1715 004e 7047     		bx	lr
 1716              	.LVL98:
 1717              	.L113:
 1718              	.LCFI18:
 1719              		.cfi_restore_state
2092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 1720              		.loc 1 2092 5 is_stmt 1 view .LVU493
 1721 0050 0068     		ldr	r0, [r0]
 1722              	.LVL99:
2092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 1723              		.loc 1 2092 5 is_stmt 0 view .LVU494
 1724 0052 4268     		ldr	r2, [r0, #4]
 1725 0054 42F04002 		orr	r2, r2, #64
 1726 0058 4260     		str	r2, [r0, #4]
 1727 005a E2E7     		b	.L107
 1728              	.LVL100:
 1729              	.L108:
 1730              	.LCFI19:
 1731              		.cfi_def_cfa_offset 0
 1732              		.cfi_restore 4
 1733              		.cfi_restore 5
2084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1734              		.loc 1 2084 3 view .LVU495
 1735 005c 0220     		movs	r0, #2
 1736              	.LVL101:
2124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1737              		.loc 1 2124 1 view .LVU496
 1738 005e 7047     		bx	lr
 1739              	.L115:
 1740              		.align	2
 1741              	.L114:
 1742 0060 E0FD3FFF 		.word	-12583456
 1743              		.cfi_endproc
 1744              	.LFE91:
 1746              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 1747              		.align	1
 1748              		.global	HAL_ADC_GetState
 1749              		.syntax unified
 1750              		.thumb
 1751              		.thumb_func
 1753              	HAL_ADC_GetState:
 1754              	.LVL102:
 1755              	.LFB92:
2155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   /* Return ADC state */
 1756              		.loc 1 2155 1 is_stmt 1 view -0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 0
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 97


 1760              		@ link register save eliminated.
2157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 1761              		.loc 1 2157 3 view .LVU498
2157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 1762              		.loc 1 2157 14 is_stmt 0 view .LVU499
 1763 0000 C06C     		ldr	r0, [r0, #76]
 1764              	.LVL103:
2158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1765              		.loc 1 2158 1 view .LVU500
 1766 0002 7047     		bx	lr
 1767              		.cfi_endproc
 1768              	.LFE92:
 1770              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 1771              		.align	1
 1772              		.global	HAL_ADC_GetError
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
 1777              	HAL_ADC_GetError:
 1778              	.LVL104:
 1779              	.LFB93:
2166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   return hadc->ErrorCode;
 1780              		.loc 1 2166 1 is_stmt 1 view -0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 0
 1783              		@ frame_needed = 0, uses_anonymous_args = 0
 1784              		@ link register save eliminated.
2167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 1785              		.loc 1 2167 3 view .LVU502
2167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 1786              		.loc 1 2167 14 is_stmt 0 view .LVU503
 1787 0000 006D     		ldr	r0, [r0, #80]
 1788              	.LVL105:
2168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1789              		.loc 1 2168 1 view .LVU504
 1790 0002 7047     		bx	lr
 1791              		.cfi_endproc
 1792              	.LFE93:
 1794              		.section	.text.ADC_Enable,"ax",%progbits
 1795              		.align	1
 1796              		.global	ADC_Enable
 1797              		.syntax unified
 1798              		.thumb
 1799              		.thumb_func
 1801              	ADC_Enable:
 1802              	.LVL106:
 1803              	.LFB94:
2196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tickstart = 0;
 1804              		.loc 1 2196 1 is_stmt 1 view -0
 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 8
 1807              		@ frame_needed = 0, uses_anonymous_args = 0
2196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tickstart = 0;
 1808              		.loc 1 2196 1 is_stmt 0 view .LVU506
 1809 0000 30B5     		push	{r4, r5, lr}
 1810              	.LCFI20:
 1811              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 98


 1812              		.cfi_offset 4, -12
 1813              		.cfi_offset 5, -8
 1814              		.cfi_offset 14, -4
 1815 0002 83B0     		sub	sp, sp, #12
 1816              	.LCFI21:
 1817              		.cfi_def_cfa_offset 24
2197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
 1818              		.loc 1 2197 3 is_stmt 1 view .LVU507
 1819              	.LVL107:
2198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1820              		.loc 1 2198 3 view .LVU508
2198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1821              		.loc 1 2198 17 is_stmt 0 view .LVU509
 1822 0004 0023     		movs	r3, #0
 1823 0006 0193     		str	r3, [sp, #4]
2204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1824              		.loc 1 2204 3 is_stmt 1 view .LVU510
2204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1825              		.loc 1 2204 7 is_stmt 0 view .LVU511
 1826 0008 0368     		ldr	r3, [r0]
 1827 000a 1A68     		ldr	r2, [r3]
2204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1828              		.loc 1 2204 6 view .LVU512
 1829 000c 12F0400F 		tst	r2, #64
 1830 0010 35D1     		bne	.L124
 1831 0012 0446     		mov	r4, r0
2207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 1832              		.loc 1 2207 5 is_stmt 1 view .LVU513
 1833 0014 9A68     		ldr	r2, [r3, #8]
 1834 0016 42F00102 		orr	r2, r2, #1
 1835 001a 9A60     		str	r2, [r3, #8]
2211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     while(wait_loop_index != 0)
 1836              		.loc 1 2211 5 view .LVU514
2211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     while(wait_loop_index != 0)
 1837              		.loc 1 2211 61 is_stmt 0 view .LVU515
 1838 001c 194B     		ldr	r3, .L127
 1839 001e 1B68     		ldr	r3, [r3]
 1840 0020 194A     		ldr	r2, .L127+4
 1841 0022 A2FB0323 		umull	r2, r3, r2, r3
 1842 0026 9B0C     		lsrs	r3, r3, #18
2211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     while(wait_loop_index != 0)
 1843              		.loc 1 2211 42 view .LVU516
 1844 0028 03EB4303 		add	r3, r3, r3, lsl #1
2211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     while(wait_loop_index != 0)
 1845              		.loc 1 2211 21 view .LVU517
 1846 002c 0193     		str	r3, [sp, #4]
2212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1847              		.loc 1 2212 5 is_stmt 1 view .LVU518
2212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1848              		.loc 1 2212 10 is_stmt 0 view .LVU519
 1849 002e 02E0     		b	.L120
 1850              	.L121:
2214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 1851              		.loc 1 2214 7 is_stmt 1 view .LVU520
2214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 1852              		.loc 1 2214 22 is_stmt 0 view .LVU521
 1853 0030 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 99


 1854 0032 013B     		subs	r3, r3, #1
 1855 0034 0193     		str	r3, [sp, #4]
 1856              	.L120:
2212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1857              		.loc 1 2212 27 is_stmt 1 view .LVU522
 1858 0036 019B     		ldr	r3, [sp, #4]
 1859 0038 002B     		cmp	r3, #0
 1860 003a F9D1     		bne	.L121
2218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1861              		.loc 1 2218 5 view .LVU523
2218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1862              		.loc 1 2218 17 is_stmt 0 view .LVU524
 1863 003c FFF7FEFF 		bl	HAL_GetTick
 1864              	.LVL108:
2218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1865              		.loc 1 2218 17 view .LVU525
 1866 0040 0546     		mov	r5, r0
 1867              	.LVL109:
2221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1868              		.loc 1 2221 5 is_stmt 1 view .LVU526
 1869              	.L122:
2221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1870              		.loc 1 2221 31 view .LVU527
2221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1871              		.loc 1 2221 11 is_stmt 0 view .LVU528
 1872 0042 2368     		ldr	r3, [r4]
 1873 0044 1B68     		ldr	r3, [r3]
2221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1874              		.loc 1 2221 31 view .LVU529
 1875 0046 13F0400F 		tst	r3, #64
 1876 004a 16D1     		bne	.L126
2223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1877              		.loc 1 2223 7 is_stmt 1 view .LVU530
2223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1878              		.loc 1 2223 11 is_stmt 0 view .LVU531
 1879 004c FFF7FEFF 		bl	HAL_GetTick
 1880              	.LVL110:
2223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1881              		.loc 1 2223 25 view .LVU532
 1882 0050 431B     		subs	r3, r0, r5
2223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 1883              		.loc 1 2223 9 view .LVU533
 1884 0052 022B     		cmp	r3, #2
 1885 0054 F5D9     		bls	.L122
2226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 1886              		.loc 1 2226 9 is_stmt 1 view .LVU534
2226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 1887              		.loc 1 2226 12 is_stmt 0 view .LVU535
 1888 0056 2368     		ldr	r3, [r4]
 1889 0058 1B68     		ldr	r3, [r3]
2226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 1890              		.loc 1 2226 11 view .LVU536
 1891 005a 13F0400F 		tst	r3, #64
 1892 005e F0D1     		bne	.L122
2229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1893              		.loc 1 2229 11 is_stmt 1 view .LVU537
 1894 0060 E36C     		ldr	r3, [r4, #76]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 100


 1895 0062 43F01003 		orr	r3, r3, #16
 1896 0066 E364     		str	r3, [r4, #76]
2232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1897              		.loc 1 2232 11 view .LVU538
 1898 0068 236D     		ldr	r3, [r4, #80]
 1899 006a 43F00103 		orr	r3, r3, #1
 1900 006e 2365     		str	r3, [r4, #80]
2235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1901              		.loc 1 2235 11 view .LVU539
2235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1902              		.loc 1 2235 11 view .LVU540
 1903 0070 0023     		movs	r3, #0
 1904 0072 84F84830 		strb	r3, [r4, #72]
2235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1905              		.loc 1 2235 11 view .LVU541
2237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
 1906              		.loc 1 2237 11 view .LVU542
2237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
 1907              		.loc 1 2237 18 is_stmt 0 view .LVU543
 1908 0076 0120     		movs	r0, #1
 1909 0078 02E0     		b	.L119
 1910              	.L126:
2244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 1911              		.loc 1 2244 10 view .LVU544
 1912 007a 0020     		movs	r0, #0
 1913 007c 00E0     		b	.L119
 1914              	.LVL111:
 1915              	.L124:
2244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 1916              		.loc 1 2244 10 view .LVU545
 1917 007e 0020     		movs	r0, #0
 1918              	.LVL112:
 1919              	.L119:
2245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 1920              		.loc 1 2245 1 view .LVU546
 1921 0080 03B0     		add	sp, sp, #12
 1922              	.LCFI22:
 1923              		.cfi_def_cfa_offset 12
 1924              		@ sp needed
 1925 0082 30BD     		pop	{r4, r5, pc}
 1926              	.L128:
 1927              		.align	2
 1928              	.L127:
 1929 0084 00000000 		.word	SystemCoreClock
 1930 0088 83DE1B43 		.word	1125899907
 1931              		.cfi_endproc
 1932              	.LFE94:
 1934              		.section	.text.HAL_ADC_Start,"ax",%progbits
 1935              		.align	1
 1936              		.global	HAL_ADC_Start
 1937              		.syntax unified
 1938              		.thumb
 1939              		.thumb_func
 1941              	HAL_ADC_Start:
 1942              	.LVL113:
 1943              	.LFB76:
1082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 101


 1944              		.loc 1 1082 1 is_stmt 1 view -0
 1945              		.cfi_startproc
 1946              		@ args = 0, pretend = 0, frame = 0
 1947              		@ frame_needed = 0, uses_anonymous_args = 0
1083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1948              		.loc 1 1083 3 view .LVU548
1086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1949              		.loc 1 1086 3 view .LVU549
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1950              		.loc 1 1089 3 view .LVU550
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1951              		.loc 1 1089 3 view .LVU551
 1952 0000 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 1953 0004 012B     		cmp	r3, #1
 1954 0006 35D0     		beq	.L134
1082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1955              		.loc 1 1082 1 is_stmt 0 discriminator 2 view .LVU552
 1956 0008 10B5     		push	{r4, lr}
 1957              	.LCFI23:
 1958              		.cfi_def_cfa_offset 8
 1959              		.cfi_offset 4, -8
 1960              		.cfi_offset 14, -4
 1961 000a 0446     		mov	r4, r0
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1962              		.loc 1 1089 3 is_stmt 1 discriminator 2 view .LVU553
 1963 000c 0123     		movs	r3, #1
 1964 000e 80F84830 		strb	r3, [r0, #72]
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1965              		.loc 1 1089 3 discriminator 2 view .LVU554
1092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1966              		.loc 1 1092 3 discriminator 2 view .LVU555
1092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 1967              		.loc 1 1092 20 is_stmt 0 discriminator 2 view .LVU556
 1968 0012 FFF7FEFF 		bl	ADC_Enable
 1969              	.LVL114:
1095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1970              		.loc 1 1095 3 is_stmt 1 discriminator 2 view .LVU557
1095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 1971              		.loc 1 1095 6 is_stmt 0 discriminator 2 view .LVU558
 1972 0016 48BB     		cbnz	r0, .L130
1100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 1973              		.loc 1 1100 5 is_stmt 1 view .LVU559
 1974 0018 E36C     		ldr	r3, [r4, #76]
 1975 001a 23F4E063 		bic	r3, r3, #1792
 1976 001e 23F00103 		bic	r3, r3, #1
 1977 0022 43F48073 		orr	r3, r3, #256
 1978 0026 E364     		str	r3, [r4, #76]
1106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1979              		.loc 1 1106 5 view .LVU560
1106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1980              		.loc 1 1106 9 is_stmt 0 view .LVU561
 1981 0028 2368     		ldr	r3, [r4]
 1982 002a 5A68     		ldr	r2, [r3, #4]
1106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1983              		.loc 1 1106 8 view .LVU562
 1984 002c 12F4806F 		tst	r2, #1024
 1985 0030 05D0     		beq	.L131
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 102


1108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 1986              		.loc 1 1108 7 is_stmt 1 view .LVU563
 1987 0032 E26C     		ldr	r2, [r4, #76]
 1988 0034 22F44052 		bic	r2, r2, #12288
 1989 0038 42F48052 		orr	r2, r2, #4096
 1990 003c E264     		str	r2, [r4, #76]
 1991              	.L131:
1112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1992              		.loc 1 1112 5 view .LVU564
1112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1993              		.loc 1 1112 9 is_stmt 0 view .LVU565
 1994 003e E26C     		ldr	r2, [r4, #76]
1112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 1995              		.loc 1 1112 8 view .LVU566
 1996 0040 12F4805F 		tst	r2, #4096
 1997 0044 13D0     		beq	.L132
1115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 1998              		.loc 1 1115 7 is_stmt 1 view .LVU567
 1999 0046 226D     		ldr	r2, [r4, #80]
 2000 0048 22F00602 		bic	r2, r2, #6
 2001 004c 2265     		str	r2, [r4, #80]
 2002              	.L133:
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2003              		.loc 1 1126 5 view .LVU568
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2004              		.loc 1 1126 5 view .LVU569
 2005 004e 0022     		movs	r2, #0
 2006 0050 84F84820 		strb	r2, [r4, #72]
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2007              		.loc 1 1126 5 view .LVU570
1130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2008              		.loc 1 1130 5 view .LVU571
 2009 0054 6FF02202 		mvn	r2, #34
 2010 0058 1A60     		str	r2, [r3]
1136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2011              		.loc 1 1136 5 view .LVU572
1136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2012              		.loc 1 1136 9 is_stmt 0 view .LVU573
 2013 005a 2368     		ldr	r3, [r4]
 2014 005c 9A68     		ldr	r2, [r3, #8]
1136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2015              		.loc 1 1136 8 view .LVU574
 2016 005e 12F0405F 		tst	r2, #805306368
 2017 0062 03D1     		bne	.L130
1139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 2018              		.loc 1 1139 7 is_stmt 1 view .LVU575
 2019 0064 9A68     		ldr	r2, [r3, #8]
 2020 0066 42F08042 		orr	r2, r2, #1073741824
 2021 006a 9A60     		str	r2, [r3, #8]
 2022              	.L130:
1145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2023              		.loc 1 1145 1 is_stmt 0 view .LVU576
 2024 006c 10BD     		pop	{r4, pc}
 2025              	.LVL115:
 2026              	.L132:
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 2027              		.loc 1 1120 7 is_stmt 1 view .LVU577
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 103


 2028 006e 0022     		movs	r2, #0
 2029 0070 2265     		str	r2, [r4, #80]
 2030 0072 ECE7     		b	.L133
 2031              	.LVL116:
 2032              	.L134:
 2033              	.LCFI24:
 2034              		.cfi_def_cfa_offset 0
 2035              		.cfi_restore 4
 2036              		.cfi_restore 14
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2037              		.loc 1 1089 3 is_stmt 0 view .LVU578
 2038 0074 0220     		movs	r0, #2
 2039              	.LVL117:
1145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2040              		.loc 1 1145 1 view .LVU579
 2041 0076 7047     		bx	lr
 2042              		.cfi_endproc
 2043              	.LFE76:
 2045              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 2046              		.align	1
 2047              		.global	HAL_ADC_Start_IT
 2048              		.syntax unified
 2049              		.thumb
 2050              		.thumb_func
 2052              	HAL_ADC_Start_IT:
 2053              	.LVL118:
 2054              	.LFB80:
1376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2055              		.loc 1 1376 1 is_stmt 1 view -0
 2056              		.cfi_startproc
 2057              		@ args = 0, pretend = 0, frame = 0
 2058              		@ frame_needed = 0, uses_anonymous_args = 0
1377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2059              		.loc 1 1377 3 view .LVU581
1380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2060              		.loc 1 1380 3 view .LVU582
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2061              		.loc 1 1383 3 view .LVU583
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2062              		.loc 1 1383 3 view .LVU584
 2063 0000 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 2064 0004 012B     		cmp	r3, #1
 2065 0006 3DD0     		beq	.L144
1376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2066              		.loc 1 1376 1 is_stmt 0 discriminator 2 view .LVU585
 2067 0008 10B5     		push	{r4, lr}
 2068              	.LCFI25:
 2069              		.cfi_def_cfa_offset 8
 2070              		.cfi_offset 4, -8
 2071              		.cfi_offset 14, -4
 2072 000a 0446     		mov	r4, r0
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2073              		.loc 1 1383 3 is_stmt 1 discriminator 2 view .LVU586
 2074 000c 0123     		movs	r3, #1
 2075 000e 80F84830 		strb	r3, [r0, #72]
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2076              		.loc 1 1383 3 discriminator 2 view .LVU587
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 104


1386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2077              		.loc 1 1386 3 discriminator 2 view .LVU588
1386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2078              		.loc 1 1386 20 is_stmt 0 discriminator 2 view .LVU589
 2079 0012 FFF7FEFF 		bl	ADC_Enable
 2080              	.LVL119:
1389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2081              		.loc 1 1389 3 is_stmt 1 discriminator 2 view .LVU590
1389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2082              		.loc 1 1389 6 is_stmt 0 discriminator 2 view .LVU591
 2083 0016 0028     		cmp	r0, #0
 2084 0018 30D1     		bne	.L140
1394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 2085              		.loc 1 1394 5 is_stmt 1 view .LVU592
 2086 001a E36C     		ldr	r3, [r4, #76]
 2087 001c 23F4E063 		bic	r3, r3, #1792
 2088 0020 23F00103 		bic	r3, r3, #1
 2089 0024 43F48073 		orr	r3, r3, #256
 2090 0028 E364     		str	r3, [r4, #76]
1400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2091              		.loc 1 1400 5 view .LVU593
1400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2092              		.loc 1 1400 9 is_stmt 0 view .LVU594
 2093 002a 2368     		ldr	r3, [r4]
 2094 002c 5A68     		ldr	r2, [r3, #4]
1400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2095              		.loc 1 1400 8 view .LVU595
 2096 002e 12F4806F 		tst	r2, #1024
 2097 0032 05D0     		beq	.L141
1402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 2098              		.loc 1 1402 7 is_stmt 1 view .LVU596
 2099 0034 E26C     		ldr	r2, [r4, #76]
 2100 0036 22F44052 		bic	r2, r2, #12288
 2101 003a 42F48052 		orr	r2, r2, #4096
 2102 003e E264     		str	r2, [r4, #76]
 2103              	.L141:
1406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2104              		.loc 1 1406 5 view .LVU597
1406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2105              		.loc 1 1406 9 is_stmt 0 view .LVU598
 2106 0040 E26C     		ldr	r2, [r4, #76]
1406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2107              		.loc 1 1406 8 view .LVU599
 2108 0042 12F4805F 		tst	r2, #4096
 2109 0046 1AD0     		beq	.L142
1409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 2110              		.loc 1 1409 7 is_stmt 1 view .LVU600
 2111 0048 226D     		ldr	r2, [r4, #80]
 2112 004a 22F00602 		bic	r2, r2, #6
 2113 004e 2265     		str	r2, [r4, #80]
 2114              	.L143:
1420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2115              		.loc 1 1420 5 view .LVU601
1420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2116              		.loc 1 1420 5 view .LVU602
 2117 0050 0022     		movs	r2, #0
 2118 0052 84F84820 		strb	r2, [r4, #72]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 105


1420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2119              		.loc 1 1420 5 view .LVU603
1424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2120              		.loc 1 1424 5 view .LVU604
 2121 0056 6FF02202 		mvn	r2, #34
 2122 005a 1A60     		str	r2, [r3]
1427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2123              		.loc 1 1427 5 view .LVU605
 2124 005c 2268     		ldr	r2, [r4]
 2125 005e 5368     		ldr	r3, [r2, #4]
 2126 0060 43F08063 		orr	r3, r3, #67108864
 2127 0064 43F02003 		orr	r3, r3, #32
 2128 0068 5360     		str	r3, [r2, #4]
1433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2129              		.loc 1 1433 5 view .LVU606
1433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2130              		.loc 1 1433 9 is_stmt 0 view .LVU607
 2131 006a 2368     		ldr	r3, [r4]
 2132 006c 9A68     		ldr	r2, [r3, #8]
1433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2133              		.loc 1 1433 8 view .LVU608
 2134 006e 12F0405F 		tst	r2, #805306368
 2135 0072 03D1     		bne	.L140
1436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 2136              		.loc 1 1436 7 is_stmt 1 view .LVU609
 2137 0074 9A68     		ldr	r2, [r3, #8]
 2138 0076 42F08042 		orr	r2, r2, #1073741824
 2139 007a 9A60     		str	r2, [r3, #8]
 2140              	.L140:
1442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2141              		.loc 1 1442 1 is_stmt 0 view .LVU610
 2142 007c 10BD     		pop	{r4, pc}
 2143              	.LVL120:
 2144              	.L142:
1414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 2145              		.loc 1 1414 7 is_stmt 1 view .LVU611
 2146 007e 0022     		movs	r2, #0
 2147 0080 2265     		str	r2, [r4, #80]
 2148 0082 E5E7     		b	.L143
 2149              	.LVL121:
 2150              	.L144:
 2151              	.LCFI26:
 2152              		.cfi_def_cfa_offset 0
 2153              		.cfi_restore 4
 2154              		.cfi_restore 14
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2155              		.loc 1 1383 3 is_stmt 0 view .LVU612
 2156 0084 0220     		movs	r0, #2
 2157              	.LVL122:
1442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2158              		.loc 1 1442 1 view .LVU613
 2159 0086 7047     		bx	lr
 2160              		.cfi_endproc
 2161              	.LFE80:
 2163              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 2164              		.align	1
 2165              		.global	HAL_ADC_Start_DMA
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 106


 2166              		.syntax unified
 2167              		.thumb
 2168              		.thumb_func
 2170              	HAL_ADC_Start_DMA:
 2171              	.LVL123:
 2172              	.LFB82:
1498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2173              		.loc 1 1498 1 is_stmt 1 view -0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 0, uses_anonymous_args = 0
1498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2177              		.loc 1 1498 1 is_stmt 0 view .LVU615
 2178 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2179              	.LCFI27:
 2180              		.cfi_def_cfa_offset 24
 2181              		.cfi_offset 3, -24
 2182              		.cfi_offset 4, -20
 2183              		.cfi_offset 5, -16
 2184              		.cfi_offset 6, -12
 2185              		.cfi_offset 7, -8
 2186              		.cfi_offset 14, -4
 2187 0002 0D46     		mov	r5, r1
1499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2188              		.loc 1 1499 3 is_stmt 1 view .LVU616
 2189              	.LVL124:
1502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2190              		.loc 1 1502 3 view .LVU617
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2191              		.loc 1 1505 3 view .LVU618
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2192              		.loc 1 1505 3 view .LVU619
 2193 0004 90F84810 		ldrb	r1, [r0, #72]	@ zero_extendqisi2
 2194              	.LVL125:
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2195              		.loc 1 1505 3 is_stmt 0 view .LVU620
 2196 0008 0129     		cmp	r1, #1
 2197 000a 52D0     		beq	.L154
 2198 000c 0446     		mov	r4, r0
 2199 000e 1646     		mov	r6, r2
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2200              		.loc 1 1505 3 is_stmt 1 discriminator 2 view .LVU621
 2201 0010 0123     		movs	r3, #1
 2202 0012 80F84830 		strb	r3, [r0, #72]
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2203              		.loc 1 1505 3 discriminator 2 view .LVU622
1508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2204              		.loc 1 1508 3 discriminator 2 view .LVU623
1508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2205              		.loc 1 1508 20 is_stmt 0 discriminator 2 view .LVU624
 2206 0016 FFF7FEFF 		bl	ADC_Enable
 2207              	.LVL126:
1511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2208              		.loc 1 1511 3 is_stmt 1 discriminator 2 view .LVU625
1511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2209              		.loc 1 1511 6 is_stmt 0 discriminator 2 view .LVU626
 2210 001a 0746     		mov	r7, r0
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 107


 2211 001c 0028     		cmp	r0, #0
 2212 001e 49D1     		bne	.L150
1516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 2213              		.loc 1 1516 5 is_stmt 1 view .LVU627
 2214 0020 E16C     		ldr	r1, [r4, #76]
 2215 0022 21F4E061 		bic	r1, r1, #1792
 2216 0026 21F00101 		bic	r1, r1, #1
 2217 002a 41F48071 		orr	r1, r1, #256
 2218 002e E164     		str	r1, [r4, #76]
1522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2219              		.loc 1 1522 5 view .LVU628
1522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2220              		.loc 1 1522 9 is_stmt 0 view .LVU629
 2221 0030 2368     		ldr	r3, [r4]
 2222 0032 5B68     		ldr	r3, [r3, #4]
1522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2223              		.loc 1 1522 8 view .LVU630
 2224 0034 13F4806F 		tst	r3, #1024
 2225 0038 05D0     		beq	.L151
1524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 2226              		.loc 1 1524 7 is_stmt 1 view .LVU631
 2227 003a E36C     		ldr	r3, [r4, #76]
 2228 003c 23F44053 		bic	r3, r3, #12288
 2229 0040 43F48053 		orr	r3, r3, #4096
 2230 0044 E364     		str	r3, [r4, #76]
 2231              	.L151:
1528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2232              		.loc 1 1528 5 view .LVU632
1528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2233              		.loc 1 1528 9 is_stmt 0 view .LVU633
 2234 0046 E36C     		ldr	r3, [r4, #76]
1528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2235              		.loc 1 1528 8 view .LVU634
 2236 0048 13F4805F 		tst	r3, #4096
 2237 004c 2ED0     		beq	.L152
1531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 2238              		.loc 1 1531 7 is_stmt 1 view .LVU635
 2239 004e 236D     		ldr	r3, [r4, #80]
 2240 0050 23F00603 		bic	r3, r3, #6
 2241 0054 2365     		str	r3, [r4, #80]
 2242              	.L153:
1542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2243              		.loc 1 1542 5 view .LVU636
1542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2244              		.loc 1 1542 5 view .LVU637
 2245 0056 0023     		movs	r3, #0
 2246 0058 84F84830 		strb	r3, [r4, #72]
1542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2247              		.loc 1 1542 5 view .LVU638
1545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2248              		.loc 1 1545 5 view .LVU639
1545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2249              		.loc 1 1545 9 is_stmt 0 view .LVU640
 2250 005c 636C     		ldr	r3, [r4, #68]
1545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2251              		.loc 1 1545 40 view .LVU641
 2252 005e 164A     		ldr	r2, .L156
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 108


 2253 0060 9A62     		str	r2, [r3, #40]
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2254              		.loc 1 1548 5 is_stmt 1 view .LVU642
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2255              		.loc 1 1548 9 is_stmt 0 view .LVU643
 2256 0062 636C     		ldr	r3, [r4, #68]
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2257              		.loc 1 1548 44 view .LVU644
 2258 0064 154A     		ldr	r2, .L156+4
 2259 0066 DA62     		str	r2, [r3, #44]
1551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2260              		.loc 1 1551 5 is_stmt 1 view .LVU645
1551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2261              		.loc 1 1551 9 is_stmt 0 view .LVU646
 2262 0068 636C     		ldr	r3, [r4, #68]
1551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2263              		.loc 1 1551 41 view .LVU647
 2264 006a 154A     		ldr	r2, .L156+8
 2265 006c 1A63     		str	r2, [r3, #48]
1559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2266              		.loc 1 1559 5 is_stmt 1 view .LVU648
 2267 006e 2368     		ldr	r3, [r4]
 2268 0070 6FF02202 		mvn	r2, #34
 2269 0074 1A60     		str	r2, [r3]
1562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2270              		.loc 1 1562 5 view .LVU649
 2271 0076 2268     		ldr	r2, [r4]
 2272 0078 5368     		ldr	r3, [r2, #4]
 2273 007a 43F08063 		orr	r3, r3, #67108864
 2274 007e 5360     		str	r3, [r2, #4]
1565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2275              		.loc 1 1565 5 view .LVU650
1565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2276              		.loc 1 1565 9 is_stmt 0 view .LVU651
 2277 0080 2268     		ldr	r2, [r4]
1565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2278              		.loc 1 1565 25 view .LVU652
 2279 0082 9368     		ldr	r3, [r2, #8]
 2280 0084 43F48073 		orr	r3, r3, #256
 2281 0088 9360     		str	r3, [r2, #8]
1568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2282              		.loc 1 1568 5 is_stmt 1 view .LVU653
1568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2283              		.loc 1 1568 55 is_stmt 0 view .LVU654
 2284 008a 2168     		ldr	r1, [r4]
1568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2285              		.loc 1 1568 5 view .LVU655
 2286 008c 3346     		mov	r3, r6
 2287 008e 2A46     		mov	r2, r5
 2288 0090 5831     		adds	r1, r1, #88
 2289 0092 606C     		ldr	r0, [r4, #68]
 2290              	.LVL127:
1568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2291              		.loc 1 1568 5 view .LVU656
 2292 0094 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2293              	.LVL128:
1576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 109


 2294              		.loc 1 1576 5 is_stmt 1 view .LVU657
1576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2295              		.loc 1 1576 9 is_stmt 0 view .LVU658
 2296 0098 2368     		ldr	r3, [r4]
 2297 009a 9A68     		ldr	r2, [r3, #8]
1576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2298              		.loc 1 1576 8 view .LVU659
 2299 009c 12F0405F 		tst	r2, #805306368
 2300 00a0 08D1     		bne	.L150
1579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 2301              		.loc 1 1579 7 is_stmt 1 view .LVU660
 2302 00a2 9A68     		ldr	r2, [r3, #8]
 2303 00a4 42F08042 		orr	r2, r2, #1073741824
 2304 00a8 9A60     		str	r2, [r3, #8]
 2305 00aa 03E0     		b	.L150
 2306              	.LVL129:
 2307              	.L152:
1536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     }
 2308              		.loc 1 1536 7 view .LVU661
 2309 00ac 0023     		movs	r3, #0
 2310 00ae 2365     		str	r3, [r4, #80]
 2311 00b0 D1E7     		b	.L153
 2312              	.LVL130:
 2313              	.L154:
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2314              		.loc 1 1505 3 is_stmt 0 view .LVU662
 2315 00b2 0227     		movs	r7, #2
 2316              	.LVL131:
 2317              	.L150:
1585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2318              		.loc 1 1585 1 view .LVU663
 2319 00b4 3846     		mov	r0, r7
 2320 00b6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2321              	.LVL132:
 2322              	.L157:
1585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2323              		.loc 1 1585 1 view .LVU664
 2324              		.align	2
 2325              	.L156:
 2326 00b8 00000000 		.word	ADC_DMAConvCplt
 2327 00bc 00000000 		.word	ADC_DMAHalfConvCplt
 2328 00c0 00000000 		.word	ADC_DMAError
 2329              		.cfi_endproc
 2330              	.LFE82:
 2332              		.section	.text.ADC_ConversionStop_Disable,"ax",%progbits
 2333              		.align	1
 2334              		.global	ADC_ConversionStop_Disable
 2335              		.syntax unified
 2336              		.thumb
 2337              		.thumb_func
 2339              	ADC_ConversionStop_Disable:
 2340              	.LVL133:
 2341              	.LFB95:
2255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tickstart = 0;
 2342              		.loc 1 2255 1 is_stmt 1 view -0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 110


 2345              		@ frame_needed = 0, uses_anonymous_args = 0
2255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   uint32_t tickstart = 0;
 2346              		.loc 1 2255 1 is_stmt 0 view .LVU666
 2347 0000 38B5     		push	{r3, r4, r5, lr}
 2348              	.LCFI28:
 2349              		.cfi_def_cfa_offset 16
 2350              		.cfi_offset 3, -16
 2351              		.cfi_offset 4, -12
 2352              		.cfi_offset 5, -8
 2353              		.cfi_offset 14, -4
2256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2354              		.loc 1 2256 3 is_stmt 1 view .LVU667
 2355              	.LVL134:
2259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2356              		.loc 1 2259 3 view .LVU668
2259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2357              		.loc 1 2259 7 is_stmt 0 view .LVU669
 2358 0002 0368     		ldr	r3, [r0]
 2359 0004 1A68     		ldr	r2, [r3]
2259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2360              		.loc 1 2259 6 view .LVU670
 2361 0006 12F0400F 		tst	r2, #64
 2362 000a 01D1     		bne	.L164
2288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 2363              		.loc 1 2288 10 view .LVU671
 2364 000c 0020     		movs	r0, #0
 2365              	.LVL135:
 2366              	.L159:
2289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2367              		.loc 1 2289 1 view .LVU672
 2368 000e 38BD     		pop	{r3, r4, r5, pc}
 2369              	.LVL136:
 2370              	.L164:
2289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2371              		.loc 1 2289 1 view .LVU673
 2372 0010 0446     		mov	r4, r0
2262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      
 2373              		.loc 1 2262 5 is_stmt 1 view .LVU674
 2374 0012 9A68     		ldr	r2, [r3, #8]
 2375 0014 22F00102 		bic	r2, r2, #1
 2376 0018 9A60     		str	r2, [r3, #8]
2265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2377              		.loc 1 2265 5 view .LVU675
2265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2378              		.loc 1 2265 17 is_stmt 0 view .LVU676
 2379 001a FFF7FEFF 		bl	HAL_GetTick
 2380              	.LVL137:
2265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2381              		.loc 1 2265 17 view .LVU677
 2382 001e 0546     		mov	r5, r0
 2383              	.LVL138:
2268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2384              		.loc 1 2268 5 is_stmt 1 view .LVU678
 2385              	.L160:
2268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2386              		.loc 1 2268 31 view .LVU679
2268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 111


 2387              		.loc 1 2268 11 is_stmt 0 view .LVU680
 2388 0020 2368     		ldr	r3, [r4]
 2389 0022 1B68     		ldr	r3, [r3]
2268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2390              		.loc 1 2268 31 view .LVU681
 2391 0024 13F0400F 		tst	r3, #64
 2392 0028 13D0     		beq	.L165
2270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 2393              		.loc 1 2270 7 is_stmt 1 view .LVU682
2270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 2394              		.loc 1 2270 11 is_stmt 0 view .LVU683
 2395 002a FFF7FEFF 		bl	HAL_GetTick
 2396              	.LVL139:
2270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 2397              		.loc 1 2270 25 view .LVU684
 2398 002e 431B     		subs	r3, r0, r5
2270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 2399              		.loc 1 2270 9 view .LVU685
 2400 0030 022B     		cmp	r3, #2
 2401 0032 F5D9     		bls	.L160
2273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 2402              		.loc 1 2273 9 is_stmt 1 view .LVU686
2273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 2403              		.loc 1 2273 12 is_stmt 0 view .LVU687
 2404 0034 2368     		ldr	r3, [r4]
 2405 0036 1B68     		ldr	r3, [r3]
2273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         {
 2406              		.loc 1 2273 11 view .LVU688
 2407 0038 13F0400F 		tst	r3, #64
 2408 003c F0D0     		beq	.L160
2276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2409              		.loc 1 2276 11 is_stmt 1 view .LVU689
 2410 003e E36C     		ldr	r3, [r4, #76]
 2411 0040 43F01003 		orr	r3, r3, #16
 2412 0044 E364     		str	r3, [r4, #76]
2279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2413              		.loc 1 2279 11 view .LVU690
 2414 0046 236D     		ldr	r3, [r4, #80]
 2415 0048 43F00103 		orr	r3, r3, #1
 2416 004c 2365     		str	r3, [r4, #80]
2281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
 2417              		.loc 1 2281 11 view .LVU691
2281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****         }
 2418              		.loc 1 2281 18 is_stmt 0 view .LVU692
 2419 004e 0120     		movs	r0, #1
 2420 0050 DDE7     		b	.L159
 2421              	.L165:
2288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 2422              		.loc 1 2288 10 view .LVU693
 2423 0052 0020     		movs	r0, #0
 2424 0054 DBE7     		b	.L159
 2425              		.cfi_endproc
 2426              	.LFE95:
 2428              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 2429              		.align	1
 2430              		.global	HAL_ADC_DeInit
 2431              		.syntax unified
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 112


 2432              		.thumb
 2433              		.thumb_func
 2435              	HAL_ADC_DeInit:
 2436              	.LVL140:
 2437              	.LFB73:
 672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2438              		.loc 1 672 1 is_stmt 1 view -0
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 0
 2441              		@ frame_needed = 0, uses_anonymous_args = 0
 672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2442              		.loc 1 672 1 is_stmt 0 view .LVU695
 2443 0000 38B5     		push	{r3, r4, r5, lr}
 2444              	.LCFI29:
 2445              		.cfi_def_cfa_offset 16
 2446              		.cfi_offset 3, -16
 2447              		.cfi_offset 4, -12
 2448              		.cfi_offset 5, -8
 2449              		.cfi_offset 14, -4
 673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2450              		.loc 1 673 3 is_stmt 1 view .LVU696
 2451              	.LVL141:
 676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2452              		.loc 1 676 3 view .LVU697
 676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2453              		.loc 1 676 5 is_stmt 0 view .LVU698
 2454 0002 0028     		cmp	r0, #0
 2455 0004 00F08480 		beq	.L169
 2456 0008 0446     		mov	r4, r0
 682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2457              		.loc 1 682 3 is_stmt 1 view .LVU699
 685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2458              		.loc 1 685 3 view .LVU700
 2459 000a C36C     		ldr	r3, [r0, #76]
 2460 000c 43F00203 		orr	r3, r3, #2
 2461 0010 C364     		str	r3, [r0, #76]
 689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2462              		.loc 1 689 3 view .LVU701
 689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2463              		.loc 1 689 20 is_stmt 0 view .LVU702
 2464 0012 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2465              	.LVL142:
 694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2466              		.loc 1 694 3 is_stmt 1 view .LVU703
 694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2467              		.loc 1 694 6 is_stmt 0 view .LVU704
 2468 0016 0546     		mov	r5, r0
 2469 0018 20B1     		cbz	r0, .L171
 2470              	.LVL143:
 2471              	.L168:
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2472              		.loc 1 809 3 is_stmt 1 view .LVU705
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2473              		.loc 1 809 3 view .LVU706
 2474 001a 0023     		movs	r3, #0
 2475 001c 84F84830 		strb	r3, [r4, #72]
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 113


 2476              		.loc 1 809 3 view .LVU707
 812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 2477              		.loc 1 812 3 view .LVU708
 2478              	.LVL144:
 2479              	.L167:
 813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2480              		.loc 1 813 1 is_stmt 0 view .LVU709
 2481 0020 2846     		mov	r0, r5
 2482 0022 38BD     		pop	{r3, r4, r5, pc}
 2483              	.LVL145:
 2484              	.L171:
 698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
 2485              		.loc 1 698 5 is_stmt 1 view .LVU710
 2486 0024 2368     		ldr	r3, [r4]
 2487 0026 6FF01F02 		mvn	r2, #31
 2488 002a 1A60     		str	r2, [r3]
 702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                     ADC_CR1_JAWDEN  | ADC_CR1_PDI     | ADC_CR1_PDD    |
 2489              		.loc 1 702 5 view .LVU711
 2490 002c 2268     		ldr	r2, [r4]
 2491 002e 5168     		ldr	r1, [r2, #4]
 2492 0030 384B     		ldr	r3, .L172
 2493 0032 0B40     		ands	r3, r3, r1
 2494 0034 5360     		str	r3, [r2, #4]
 710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2495              		.loc 1 710 5 view .LVU712
 2496 0036 2268     		ldr	r2, [r4]
 2497 0038 9168     		ldr	r1, [r2, #8]
 2498 003a 374B     		ldr	r3, .L172+4
 2499 003c 0B40     		ands	r3, r3, r1
 2500 003e 9360     		str	r3, [r2, #8]
 713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2501              		.loc 1 713 5 view .LVU713
 2502 0040 2268     		ldr	r2, [r4]
 2503 0042 D36D     		ldr	r3, [r2, #92]
 2504 0044 23F03F03 		bic	r3, r3, #63
 2505 0048 D365     		str	r3, [r2, #92]
 716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2506              		.loc 1 716 5 view .LVU714
 2507 004a 2268     		ldr	r2, [r4]
 2508 004c D368     		ldr	r3, [r2, #12]
 2509 004e 03F04043 		and	r3, r3, #-1073741824
 2510 0052 D360     		str	r3, [r2, #12]
 719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                       ADC_SMPR2_SMP16 | ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | 
 2511              		.loc 1 719 5 view .LVU715
 2512 0054 2268     		ldr	r2, [r4]
 2513 0056 1369     		ldr	r3, [r2, #16]
 2514 0058 03F04043 		and	r3, r3, #-1073741824
 2515 005c 1361     		str	r3, [r2, #16]
 725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                       ADC_SMPR3_SMP6 | ADC_SMPR3_SMP5 | ADC_SMPR3_SMP4 | 
 2516              		.loc 1 725 5 view .LVU716
 2517 005e 2268     		ldr	r2, [r4]
 2518 0060 5369     		ldr	r3, [r2, #20]
 2519 0062 03F04043 		and	r3, r3, #-1073741824
 2520 0066 5361     		str	r3, [r2, #20]
 731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register JOFR2 */
 2521              		.loc 1 731 5 view .LVU717
 2522 0068 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 114


 2523 006a 9369     		ldr	r3, [r2, #24]
 2524 006c 23F47F63 		bic	r3, r3, #4080
 2525 0070 23F00F03 		bic	r3, r3, #15
 2526 0074 9361     		str	r3, [r2, #24]
 733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register JOFR3 */
 2527              		.loc 1 733 5 view .LVU718
 2528 0076 2268     		ldr	r2, [r4]
 2529 0078 D369     		ldr	r3, [r2, #28]
 2530 007a 23F47F63 		bic	r3, r3, #4080
 2531 007e 23F00F03 		bic	r3, r3, #15
 2532 0082 D361     		str	r3, [r2, #28]
 735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register JOFR4 */
 2533              		.loc 1 735 5 view .LVU719
 2534 0084 2268     		ldr	r2, [r4]
 2535 0086 136A     		ldr	r3, [r2, #32]
 2536 0088 23F47F63 		bic	r3, r3, #4080
 2537 008c 23F00F03 		bic	r3, r3, #15
 2538 0090 1362     		str	r3, [r2, #32]
 737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2539              		.loc 1 737 5 view .LVU720
 2540 0092 2268     		ldr	r2, [r4]
 2541 0094 536A     		ldr	r3, [r2, #36]
 2542 0096 23F47F63 		bic	r3, r3, #4080
 2543 009a 23F00F03 		bic	r3, r3, #15
 2544 009e 5362     		str	r3, [r2, #36]
 740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     /* Reset register LTR */
 2545              		.loc 1 740 5 view .LVU721
 2546 00a0 2268     		ldr	r2, [r4]
 2547 00a2 936A     		ldr	r3, [r2, #40]
 2548 00a4 23F47F63 		bic	r3, r3, #4080
 2549 00a8 23F00F03 		bic	r3, r3, #15
 2550 00ac 9362     		str	r3, [r2, #40]
 742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2551              		.loc 1 742 5 view .LVU722
 2552 00ae 2268     		ldr	r2, [r4]
 2553 00b0 D36A     		ldr	r3, [r2, #44]
 2554 00b2 23F47F63 		bic	r3, r3, #4080
 2555 00b6 23F00F03 		bic	r3, r3, #15
 2556 00ba D362     		str	r3, [r2, #44]
 745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2557              		.loc 1 745 5 view .LVU723
 2558 00bc 2268     		ldr	r2, [r4]
 2559 00be 136B     		ldr	r3, [r2, #48]
 2560 00c0 03F07E43 		and	r3, r3, #-33554432
 2561 00c4 1363     		str	r3, [r2, #48]
 748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_SQR2_SQ21 | ADC_SQR2_SQ20 | ADC_SQR2_SQ19  ));
 2562              		.loc 1 748 5 view .LVU724
 2563 00c6 2268     		ldr	r2, [r4]
 2564 00c8 536B     		ldr	r3, [r2, #52]
 2565 00ca 03F04043 		and	r3, r3, #-1073741824
 2566 00ce 5363     		str	r3, [r2, #52]
 752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_SQR3_SQ15 | ADC_SQR3_SQ14 | ADC_SQR3_SQ13  ));
 2567              		.loc 1 752 5 view .LVU725
 2568 00d0 2268     		ldr	r2, [r4]
 2569 00d2 936B     		ldr	r3, [r2, #56]
 2570 00d4 03F04043 		and	r3, r3, #-1073741824
 2571 00d8 9363     		str	r3, [r2, #56]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 115


 756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_SQR4_SQ9  | ADC_SQR4_SQ8  | ADC_SQR4_SQ7   ));
 2572              		.loc 1 756 5 view .LVU726
 2573 00da 2268     		ldr	r2, [r4]
 2574 00dc D36B     		ldr	r3, [r2, #60]
 2575 00de 03F04043 		and	r3, r3, #-1073741824
 2576 00e2 D363     		str	r3, [r2, #60]
 760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_SQR5_SQ3 | ADC_SQR5_SQ2 | ADC_SQR5_SQ1  ));
 2577              		.loc 1 760 5 view .LVU727
 2578 00e4 2268     		ldr	r2, [r4]
 2579 00e6 136C     		ldr	r3, [r2, #64]
 2580 00e8 03F04043 		and	r3, r3, #-1073741824
 2581 00ec 1364     		str	r3, [r2, #64]
 765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                                      ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 2582              		.loc 1 765 5 view .LVU728
 2583 00ee 2268     		ldr	r2, [r4]
 2584 00f0 536C     		ldr	r3, [r2, #68]
 2585 00f2 9B0D     		lsrs	r3, r3, #22
 2586 00f4 9B05     		lsls	r3, r3, #22
 2587 00f6 5364     		str	r3, [r2, #68]
 776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2588              		.loc 1 776 5 view .LVU729
 2589 00f8 084A     		ldr	r2, .L172+8
 2590 00fa 5368     		ldr	r3, [r2, #4]
 2591 00fc 23F40003 		bic	r3, r3, #8388608
 2592 0100 5360     		str	r3, [r2, #4]
 797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2593              		.loc 1 797 5 view .LVU730
 2594 0102 2046     		mov	r0, r4
 2595              	.LVL146:
 797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2596              		.loc 1 797 5 is_stmt 0 view .LVU731
 2597 0104 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 2598              	.LVL147:
 801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2599              		.loc 1 801 5 is_stmt 1 view .LVU732
 2600 0108 0023     		movs	r3, #0
 2601 010a 2365     		str	r3, [r4, #80]
 804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2602              		.loc 1 804 5 view .LVU733
 804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2603              		.loc 1 804 17 is_stmt 0 view .LVU734
 2604 010c E364     		str	r3, [r4, #76]
 2605 010e 84E7     		b	.L168
 2606              	.LVL148:
 2607              	.L169:
 678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 2608              		.loc 1 678 12 view .LVU735
 2609 0110 0125     		movs	r5, #1
 2610 0112 85E7     		b	.L167
 2611              	.L173:
 2612              		.align	2
 2613              	.L172:
 2614 0114 00003CF8 		.word	-130285568
 2615 0118 88F08080 		.word	-2139033464
 2616 011c 00270140 		.word	1073817344
 2617              		.cfi_endproc
 2618              	.LFE73:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 116


 2620              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 2621              		.align	1
 2622              		.global	HAL_ADC_Stop
 2623              		.syntax unified
 2624              		.thumb
 2625              		.thumb_func
 2627              	HAL_ADC_Stop:
 2628              	.LVL149:
 2629              	.LFB77:
1157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2630              		.loc 1 1157 1 is_stmt 1 view -0
 2631              		.cfi_startproc
 2632              		@ args = 0, pretend = 0, frame = 0
 2633              		@ frame_needed = 0, uses_anonymous_args = 0
1158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2634              		.loc 1 1158 3 view .LVU737
1161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2635              		.loc 1 1161 3 view .LVU738
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2636              		.loc 1 1164 3 view .LVU739
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2637              		.loc 1 1164 3 view .LVU740
 2638 0000 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 2639 0004 012B     		cmp	r3, #1
 2640 0006 13D0     		beq	.L177
1157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2641              		.loc 1 1157 1 is_stmt 0 discriminator 2 view .LVU741
 2642 0008 10B5     		push	{r4, lr}
 2643              	.LCFI30:
 2644              		.cfi_def_cfa_offset 8
 2645              		.cfi_offset 4, -8
 2646              		.cfi_offset 14, -4
 2647 000a 0446     		mov	r4, r0
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2648              		.loc 1 1164 3 is_stmt 1 discriminator 2 view .LVU742
 2649 000c 0123     		movs	r3, #1
 2650 000e 80F84830 		strb	r3, [r0, #72]
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2651              		.loc 1 1164 3 discriminator 2 view .LVU743
1168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2652              		.loc 1 1168 3 discriminator 2 view .LVU744
1168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2653              		.loc 1 1168 20 is_stmt 0 discriminator 2 view .LVU745
 2654 0012 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2655              	.LVL150:
1171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2656              		.loc 1 1171 3 is_stmt 1 discriminator 2 view .LVU746
1171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2657              		.loc 1 1171 6 is_stmt 0 discriminator 2 view .LVU747
 2658 0016 38B9     		cbnz	r0, .L176
1174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2659              		.loc 1 1174 5 is_stmt 1 view .LVU748
 2660 0018 E36C     		ldr	r3, [r4, #76]
 2661 001a 23F48853 		bic	r3, r3, #4352
 2662 001e 23F00103 		bic	r3, r3, #1
 2663 0022 43F00103 		orr	r3, r3, #1
 2664 0026 E364     		str	r3, [r4, #76]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 117


 2665              	.L176:
1180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2666              		.loc 1 1180 3 view .LVU749
1180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2667              		.loc 1 1180 3 view .LVU750
 2668 0028 0023     		movs	r3, #0
 2669 002a 84F84830 		strb	r3, [r4, #72]
1180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2670              		.loc 1 1180 3 view .LVU751
1183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 2671              		.loc 1 1183 3 view .LVU752
1184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2672              		.loc 1 1184 1 is_stmt 0 view .LVU753
 2673 002e 10BD     		pop	{r4, pc}
 2674              	.LVL151:
 2675              	.L177:
 2676              	.LCFI31:
 2677              		.cfi_def_cfa_offset 0
 2678              		.cfi_restore 4
 2679              		.cfi_restore 14
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2680              		.loc 1 1164 3 view .LVU754
 2681 0030 0220     		movs	r0, #2
 2682              	.LVL152:
1184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2683              		.loc 1 1184 1 view .LVU755
 2684 0032 7047     		bx	lr
 2685              		.cfi_endproc
 2686              	.LFE77:
 2688              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 2689              		.align	1
 2690              		.global	HAL_ADC_Stop_IT
 2691              		.syntax unified
 2692              		.thumb
 2693              		.thumb_func
 2695              	HAL_ADC_Stop_IT:
 2696              	.LVL153:
 2697              	.LFB81:
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2698              		.loc 1 1452 1 is_stmt 1 view -0
 2699              		.cfi_startproc
 2700              		@ args = 0, pretend = 0, frame = 0
 2701              		@ frame_needed = 0, uses_anonymous_args = 0
1453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2702              		.loc 1 1453 3 view .LVU757
1456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2703              		.loc 1 1456 3 view .LVU758
1459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2704              		.loc 1 1459 3 view .LVU759
1459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2705              		.loc 1 1459 3 view .LVU760
 2706 0000 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 2707 0004 012B     		cmp	r3, #1
 2708 0006 18D0     		beq	.L185
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2709              		.loc 1 1452 1 is_stmt 0 discriminator 2 view .LVU761
 2710 0008 10B5     		push	{r4, lr}
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 118


 2711              	.LCFI32:
 2712              		.cfi_def_cfa_offset 8
 2713              		.cfi_offset 4, -8
 2714              		.cfi_offset 14, -4
 2715 000a 0446     		mov	r4, r0
1459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2716              		.loc 1 1459 3 is_stmt 1 discriminator 2 view .LVU762
 2717 000c 0123     		movs	r3, #1
 2718 000e 80F84830 		strb	r3, [r0, #72]
1459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2719              		.loc 1 1459 3 discriminator 2 view .LVU763
1463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2720              		.loc 1 1463 3 discriminator 2 view .LVU764
1463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2721              		.loc 1 1463 20 is_stmt 0 discriminator 2 view .LVU765
 2722 0012 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2723              	.LVL154:
1466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2724              		.loc 1 1466 3 is_stmt 1 discriminator 2 view .LVU766
1466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2725              		.loc 1 1466 6 is_stmt 0 discriminator 2 view .LVU767
 2726 0016 60B9     		cbnz	r0, .L184
1469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2727              		.loc 1 1469 5 is_stmt 1 view .LVU768
 2728 0018 2268     		ldr	r2, [r4]
 2729 001a 5368     		ldr	r3, [r2, #4]
 2730 001c 23F02003 		bic	r3, r3, #32
 2731 0020 5360     		str	r3, [r2, #4]
1472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2732              		.loc 1 1472 5 view .LVU769
 2733 0022 E36C     		ldr	r3, [r4, #76]
 2734 0024 23F48853 		bic	r3, r3, #4352
 2735 0028 23F00103 		bic	r3, r3, #1
 2736 002c 43F00103 		orr	r3, r3, #1
 2737 0030 E364     		str	r3, [r4, #76]
 2738              	.L184:
1478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2739              		.loc 1 1478 3 view .LVU770
1478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2740              		.loc 1 1478 3 view .LVU771
 2741 0032 0023     		movs	r3, #0
 2742 0034 84F84830 		strb	r3, [r4, #72]
1478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2743              		.loc 1 1478 3 view .LVU772
1481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 2744              		.loc 1 1481 3 view .LVU773
1482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2745              		.loc 1 1482 1 is_stmt 0 view .LVU774
 2746 0038 10BD     		pop	{r4, pc}
 2747              	.LVL155:
 2748              	.L185:
 2749              	.LCFI33:
 2750              		.cfi_def_cfa_offset 0
 2751              		.cfi_restore 4
 2752              		.cfi_restore 14
1459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2753              		.loc 1 1459 3 view .LVU775
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 119


 2754 003a 0220     		movs	r0, #2
 2755              	.LVL156:
1482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2756              		.loc 1 1482 1 view .LVU776
 2757 003c 7047     		bx	lr
 2758              		.cfi_endproc
 2759              	.LFE81:
 2761              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 2762              		.align	1
 2763              		.global	HAL_ADC_Stop_DMA
 2764              		.syntax unified
 2765              		.thumb
 2766              		.thumb_func
 2768              	HAL_ADC_Stop_DMA:
 2769              	.LVL157:
 2770              	.LFB83:
1598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2771              		.loc 1 1598 1 is_stmt 1 view -0
 2772              		.cfi_startproc
 2773              		@ args = 0, pretend = 0, frame = 0
 2774              		@ frame_needed = 0, uses_anonymous_args = 0
1598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2775              		.loc 1 1598 1 is_stmt 0 view .LVU778
 2776 0000 38B5     		push	{r3, r4, r5, lr}
 2777              	.LCFI34:
 2778              		.cfi_def_cfa_offset 16
 2779              		.cfi_offset 3, -16
 2780              		.cfi_offset 4, -12
 2781              		.cfi_offset 5, -8
 2782              		.cfi_offset 14, -4
1599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2783              		.loc 1 1599 3 is_stmt 1 view .LVU779
 2784              	.LVL158:
1602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****      
 2785              		.loc 1 1602 3 view .LVU780
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2786              		.loc 1 1605 3 view .LVU781
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2787              		.loc 1 1605 3 view .LVU782
 2788 0002 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 2789 0006 012B     		cmp	r3, #1
 2790 0008 27D0     		beq	.L194
 2791 000a 0446     		mov	r4, r0
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2792              		.loc 1 1605 3 discriminator 2 view .LVU783
 2793 000c 0123     		movs	r3, #1
 2794 000e 80F84830 		strb	r3, [r0, #72]
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2795              		.loc 1 1605 3 discriminator 2 view .LVU784
1609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2796              		.loc 1 1609 3 discriminator 2 view .LVU785
1609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2797              		.loc 1 1609 20 is_stmt 0 discriminator 2 view .LVU786
 2798 0012 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2799              	.LVL159:
1612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2800              		.loc 1 1612 3 is_stmt 1 discriminator 2 view .LVU787
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 120


1612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   {
 2801              		.loc 1 1612 6 is_stmt 0 discriminator 2 view .LVU788
 2802 0016 0546     		mov	r5, r0
 2803 0018 B8B9     		cbnz	r0, .L192
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2804              		.loc 1 1615 5 is_stmt 1 view .LVU789
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2805              		.loc 1 1615 9 is_stmt 0 view .LVU790
 2806 001a 2268     		ldr	r2, [r4]
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     
 2807              		.loc 1 1615 25 view .LVU791
 2808 001c 9368     		ldr	r3, [r2, #8]
 2809 001e 23F48073 		bic	r3, r3, #256
 2810 0022 9360     		str	r3, [r2, #8]
1619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2811              		.loc 1 1619 5 is_stmt 1 view .LVU792
1619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2812              		.loc 1 1619 13 is_stmt 0 view .LVU793
 2813 0024 606C     		ldr	r0, [r4, #68]
 2814              	.LVL160:
1619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2815              		.loc 1 1619 25 view .LVU794
 2816 0026 90F82130 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 2817 002a DBB2     		uxtb	r3, r3
1619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****     {
 2818              		.loc 1 1619 8 view .LVU795
 2819 002c 022B     		cmp	r3, #2
 2820 002e 11D0     		beq	.L196
 2821              	.L193:
1632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2822              		.loc 1 1632 5 is_stmt 1 view .LVU796
 2823 0030 E36C     		ldr	r3, [r4, #76]
 2824 0032 23F48853 		bic	r3, r3, #4352
 2825 0036 23F00103 		bic	r3, r3, #1
 2826 003a 43F00103 		orr	r3, r3, #1
 2827 003e E364     		str	r3, [r4, #76]
1637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   }
 2828              		.loc 1 1637 5 view .LVU797
 2829 0040 2268     		ldr	r2, [r4]
 2830 0042 5368     		ldr	r3, [r2, #4]
 2831 0044 23F08063 		bic	r3, r3, #67108864
 2832 0048 5360     		str	r3, [r2, #4]
 2833              	.L192:
1641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2834              		.loc 1 1641 3 view .LVU798
1641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2835              		.loc 1 1641 3 view .LVU799
 2836 004a 0023     		movs	r3, #0
 2837 004c 84F84830 		strb	r3, [r4, #72]
1641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2838              		.loc 1 1641 3 view .LVU800
1644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** }
 2839              		.loc 1 1644 3 view .LVU801
 2840              	.LVL161:
 2841              	.L191:
1645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c **** 
 2842              		.loc 1 1645 1 is_stmt 0 view .LVU802
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 121


 2843 0050 2846     		mov	r0, r5
 2844 0052 38BD     		pop	{r3, r4, r5, pc}
 2845              	.LVL162:
 2846              	.L196:
1621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       
 2847              		.loc 1 1621 7 is_stmt 1 view .LVU803
 2848 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2849              	.LVL163:
1624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****       {
 2850              		.loc 1 1624 7 view .LVU804
 2851 0058 EAE7     		b	.L193
 2852              	.LVL164:
 2853              	.L194:
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc.c ****   
 2854              		.loc 1 1605 3 is_stmt 0 view .LVU805
 2855 005a 0225     		movs	r5, #2
 2856 005c F8E7     		b	.L191
 2857              		.cfi_endproc
 2858              	.LFE83:
 2860              		.text
 2861              	.Letext0:
 2862              		.file 3 "C:\\ST\\STM32CubeCLT\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/11.3.1/../../../.
 2863              		.file 4 "C:\\ST\\STM32CubeCLT\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/11.3.1/../../../.
 2864              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l152xe.h"
 2865              		.file 6 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 2866              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 2867              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 2868              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_adc.h"
 2869              		.file 10 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 2870              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_adc_ex.h"
 2871              		.file 12 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 122


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_hal_adc.c
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:18     .text.HAL_ADC_MspInit:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:24     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:40     .text.HAL_ADC_Init:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:46     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:452    .text.HAL_ADC_Init:0000000000000188 $d
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:461    .text.HAL_ADC_MspDeInit:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:467    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:482    .text.HAL_ADC_PollForConversion:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:488    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:658    .text.HAL_ADC_PollForEvent:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:664    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:781    .text.HAL_ADC_GetValue:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:787    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:808    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:814    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:829    .text.ADC_DMAConvCplt:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:834    .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:928    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:934    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:949    .text.ADC_DMAHalfConvCplt:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:954    .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:981    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:987    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1002   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1008   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1023   .text.ADC_DMAError:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1028   .text.ADC_DMAError:0000000000000000 ADC_DMAError
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1062   .text.HAL_ADC_IRQHandler:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1068   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1306   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1312   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1608   .text.HAL_ADC_ConfigChannel:0000000000000194 $d
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1615   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1621   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1742   .text.HAL_ADC_AnalogWDGConfig:0000000000000060 $d
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1747   .text.HAL_ADC_GetState:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1753   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1771   .text.HAL_ADC_GetError:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1777   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1795   .text.ADC_Enable:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1801   .text.ADC_Enable:0000000000000000 ADC_Enable
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1929   .text.ADC_Enable:0000000000000084 $d
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1935   .text.HAL_ADC_Start:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:1941   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2046   .text.HAL_ADC_Start_IT:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2052   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2164   .text.HAL_ADC_Start_DMA:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2170   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2326   .text.HAL_ADC_Start_DMA:00000000000000b8 $d
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2333   .text.ADC_ConversionStop_Disable:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2339   .text.ADC_ConversionStop_Disable:0000000000000000 ADC_ConversionStop_Disable
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2429   .text.HAL_ADC_DeInit:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2435   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2614   .text.HAL_ADC_DeInit:0000000000000114 $d
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2621   .text.HAL_ADC_Stop:0000000000000000 $t
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s 			page 123


C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2627   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2689   .text.HAL_ADC_Stop_IT:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2695   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2762   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
C:\Users\cedri\AppData\Local\Temp\cc9WRHZF.s:2768   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA

UNDEFINED SYMBOLS
HAL_GetTick
HAL_ADCEx_InjectedConvCpltCallback
SystemCoreClock
HAL_DMA_Start_IT
HAL_DMA_Abort
