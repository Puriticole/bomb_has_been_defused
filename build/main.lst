ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.ITM_SendChar,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	ITM_SendChar:
  25              	.LVL0:
  26              	.LFB69:
  27              		.file 2 "Drivers/CMSIS/Include/core_cm3.h"
   1:Drivers/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:Drivers/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm3.h ****  * @version  V5.0.8
   5:Drivers/CMSIS/Include/core_cm3.h ****  * @date     04. June 2018
   6:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm3.h **** /*
   8:Drivers/CMSIS/Include/core_cm3.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm3.h ****  *
  10:Drivers/CMSIS/Include/core_cm3.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm3.h ****  *
  12:Drivers/CMSIS/Include/core_cm3.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm3.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm3.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm3.h ****  *
  16:Drivers/CMSIS/Include/core_cm3.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm3.h ****  *
  18:Drivers/CMSIS/Include/core_cm3.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm3.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm3.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm3.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm3.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm3.h ****  */
  24:Drivers/CMSIS/Include/core_cm3.h **** 
  25:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm3.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm3.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm3.h **** #endif
  30:Drivers/CMSIS/Include/core_cm3.h **** 
  31:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 2


  32:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm3.h **** 
  34:Drivers/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm3.h **** 
  36:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm3.h **** #endif
  39:Drivers/CMSIS/Include/core_cm3.h **** 
  40:Drivers/CMSIS/Include/core_cm3.h **** /**
  41:Drivers/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm3.h **** 
  44:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm3.h **** 
  47:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm3.h **** 
  50:Drivers/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm3.h ****  */
  53:Drivers/CMSIS/Include/core_cm3.h **** 
  54:Drivers/CMSIS/Include/core_cm3.h **** 
  55:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm3.h **** /**
  59:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  60:Drivers/CMSIS/Include/core_cm3.h ****   @{
  61:Drivers/CMSIS/Include/core_cm3.h ****  */
  62:Drivers/CMSIS/Include/core_cm3.h **** 
  63:Drivers/CMSIS/Include/core_cm3.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm3.h **** 
  65:Drivers/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  66:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm3.h **** 
  71:Drivers/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (3U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm3.h **** 
  73:Drivers/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm3.h **** */
  76:Drivers/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm3.h **** 
  78:Drivers/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm3.h **** 
  83:Drivers/CMSIS/Include/core_cm3.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm3.h **** 
  88:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 3


  89:Drivers/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm3.h **** 
  93:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm3.h **** 
  98:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm3.h **** 
 103:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm3.h **** 
 108:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm3.h **** 
 113:Drivers/CMSIS/Include/core_cm3.h **** #endif
 114:Drivers/CMSIS/Include/core_cm3.h **** 
 115:Drivers/CMSIS/Include/core_cm3.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm3.h **** 
 117:Drivers/CMSIS/Include/core_cm3.h **** 
 118:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm3.h **** }
 120:Drivers/CMSIS/Include/core_cm3.h **** #endif
 121:Drivers/CMSIS/Include/core_cm3.h **** 
 122:Drivers/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm3.h **** 
 124:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm3.h **** 
 126:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm3.h **** 
 129:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm3.h **** #endif
 132:Drivers/CMSIS/Include/core_cm3.h **** 
 133:Drivers/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 136:Drivers/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 137:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm3.h **** 
 140:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 141:Drivers/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 142:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm3.h **** 
 145:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 4


 146:Drivers/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          3U
 147:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm3.h **** 
 150:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 151:Drivers/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 152:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 153:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 154:Drivers/CMSIS/Include/core_cm3.h **** #endif
 155:Drivers/CMSIS/Include/core_cm3.h **** 
 156:Drivers/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 157:Drivers/CMSIS/Include/core_cm3.h **** /**
 158:Drivers/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 159:Drivers/CMSIS/Include/core_cm3.h **** 
 160:Drivers/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 161:Drivers/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 162:Drivers/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 163:Drivers/CMSIS/Include/core_cm3.h **** */
 164:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 165:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 166:Drivers/CMSIS/Include/core_cm3.h **** #else
 167:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 168:Drivers/CMSIS/Include/core_cm3.h **** #endif
 169:Drivers/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 170:Drivers/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 171:Drivers/CMSIS/Include/core_cm3.h **** 
 172:Drivers/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 173:Drivers/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 174:Drivers/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 175:Drivers/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 176:Drivers/CMSIS/Include/core_cm3.h **** 
 177:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 178:Drivers/CMSIS/Include/core_cm3.h **** 
 179:Drivers/CMSIS/Include/core_cm3.h **** 
 180:Drivers/CMSIS/Include/core_cm3.h **** 
 181:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 182:Drivers/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 183:Drivers/CMSIS/Include/core_cm3.h ****   Core Register contain:
 184:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register
 185:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 186:Drivers/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 187:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 188:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 189:Drivers/CMSIS/Include/core_cm3.h ****   - Core MPU Register
 190:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 191:Drivers/CMSIS/Include/core_cm3.h **** /**
 192:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 193:Drivers/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 194:Drivers/CMSIS/Include/core_cm3.h **** */
 195:Drivers/CMSIS/Include/core_cm3.h **** 
 196:Drivers/CMSIS/Include/core_cm3.h **** /**
 197:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 198:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 199:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 200:Drivers/CMSIS/Include/core_cm3.h ****   @{
 201:Drivers/CMSIS/Include/core_cm3.h ****  */
 202:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 5


 203:Drivers/CMSIS/Include/core_cm3.h **** /**
 204:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 205:Drivers/CMSIS/Include/core_cm3.h ****  */
 206:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 207:Drivers/CMSIS/Include/core_cm3.h **** {
 208:Drivers/CMSIS/Include/core_cm3.h ****   struct
 209:Drivers/CMSIS/Include/core_cm3.h ****   {
 210:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 211:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 212:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 213:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 214:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 215:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 216:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 217:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 218:Drivers/CMSIS/Include/core_cm3.h **** } APSR_Type;
 219:Drivers/CMSIS/Include/core_cm3.h **** 
 220:Drivers/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 221:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 222:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm3.h **** 
 224:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 225:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 226:Drivers/CMSIS/Include/core_cm3.h **** 
 227:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 228:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 229:Drivers/CMSIS/Include/core_cm3.h **** 
 230:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 231:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 232:Drivers/CMSIS/Include/core_cm3.h **** 
 233:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 234:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 235:Drivers/CMSIS/Include/core_cm3.h **** 
 236:Drivers/CMSIS/Include/core_cm3.h **** 
 237:Drivers/CMSIS/Include/core_cm3.h **** /**
 238:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:Drivers/CMSIS/Include/core_cm3.h ****  */
 240:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 241:Drivers/CMSIS/Include/core_cm3.h **** {
 242:Drivers/CMSIS/Include/core_cm3.h ****   struct
 243:Drivers/CMSIS/Include/core_cm3.h ****   {
 244:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 247:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:Drivers/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 249:Drivers/CMSIS/Include/core_cm3.h **** 
 250:Drivers/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 251:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:Drivers/CMSIS/Include/core_cm3.h **** 
 254:Drivers/CMSIS/Include/core_cm3.h **** 
 255:Drivers/CMSIS/Include/core_cm3.h **** /**
 256:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:Drivers/CMSIS/Include/core_cm3.h ****  */
 258:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 259:Drivers/CMSIS/Include/core_cm3.h **** {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 6


 260:Drivers/CMSIS/Include/core_cm3.h ****   struct
 261:Drivers/CMSIS/Include/core_cm3.h ****   {
 262:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 264:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 265:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:8;               /*!< bit: 16..23  Reserved */
 266:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 267:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 268:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 269:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 270:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 271:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 272:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 273:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 274:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 275:Drivers/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 276:Drivers/CMSIS/Include/core_cm3.h **** 
 277:Drivers/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 278:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 279:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm3.h **** 
 281:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 282:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 283:Drivers/CMSIS/Include/core_cm3.h **** 
 284:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 285:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 286:Drivers/CMSIS/Include/core_cm3.h **** 
 287:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 288:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 289:Drivers/CMSIS/Include/core_cm3.h **** 
 290:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 291:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 292:Drivers/CMSIS/Include/core_cm3.h **** 
 293:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 294:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 295:Drivers/CMSIS/Include/core_cm3.h **** 
 296:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 297:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 298:Drivers/CMSIS/Include/core_cm3.h **** 
 299:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 300:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 301:Drivers/CMSIS/Include/core_cm3.h **** 
 302:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 303:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 304:Drivers/CMSIS/Include/core_cm3.h **** 
 305:Drivers/CMSIS/Include/core_cm3.h **** 
 306:Drivers/CMSIS/Include/core_cm3.h **** /**
 307:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 308:Drivers/CMSIS/Include/core_cm3.h ****  */
 309:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 310:Drivers/CMSIS/Include/core_cm3.h **** {
 311:Drivers/CMSIS/Include/core_cm3.h ****   struct
 312:Drivers/CMSIS/Include/core_cm3.h ****   {
 313:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 314:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 315:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 316:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 7


 317:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 318:Drivers/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 319:Drivers/CMSIS/Include/core_cm3.h **** 
 320:Drivers/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 321:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 322:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 323:Drivers/CMSIS/Include/core_cm3.h **** 
 324:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 325:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 326:Drivers/CMSIS/Include/core_cm3.h **** 
 327:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 328:Drivers/CMSIS/Include/core_cm3.h **** 
 329:Drivers/CMSIS/Include/core_cm3.h **** 
 330:Drivers/CMSIS/Include/core_cm3.h **** /**
 331:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 332:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 333:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 334:Drivers/CMSIS/Include/core_cm3.h ****   @{
 335:Drivers/CMSIS/Include/core_cm3.h ****  */
 336:Drivers/CMSIS/Include/core_cm3.h **** 
 337:Drivers/CMSIS/Include/core_cm3.h **** /**
 338:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 339:Drivers/CMSIS/Include/core_cm3.h ****  */
 340:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 341:Drivers/CMSIS/Include/core_cm3.h **** {
 342:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 343:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 344:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 345:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 346:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 347:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 348:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 349:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 350:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 351:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 352:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 353:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 354:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 355:Drivers/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 356:Drivers/CMSIS/Include/core_cm3.h **** 
 357:Drivers/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 358:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 359:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 360:Drivers/CMSIS/Include/core_cm3.h **** 
 361:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 362:Drivers/CMSIS/Include/core_cm3.h **** 
 363:Drivers/CMSIS/Include/core_cm3.h **** 
 364:Drivers/CMSIS/Include/core_cm3.h **** /**
 365:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 366:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 367:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 368:Drivers/CMSIS/Include/core_cm3.h ****   @{
 369:Drivers/CMSIS/Include/core_cm3.h ****  */
 370:Drivers/CMSIS/Include/core_cm3.h **** 
 371:Drivers/CMSIS/Include/core_cm3.h **** /**
 372:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 373:Drivers/CMSIS/Include/core_cm3.h ****  */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 8


 374:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 375:Drivers/CMSIS/Include/core_cm3.h **** {
 376:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 377:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 378:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 379:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 380:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 381:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 382:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 383:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 384:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 385:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 386:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 387:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 388:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 389:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 390:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 391:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 392:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 393:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 394:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 395:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 396:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 397:Drivers/CMSIS/Include/core_cm3.h **** } SCB_Type;
 398:Drivers/CMSIS/Include/core_cm3.h **** 
 399:Drivers/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 400:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 402:Drivers/CMSIS/Include/core_cm3.h **** 
 403:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm3.h **** 
 406:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm3.h **** 
 409:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm3.h **** 
 412:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm3.h **** 
 415:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 416:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 418:Drivers/CMSIS/Include/core_cm3.h **** 
 419:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 421:Drivers/CMSIS/Include/core_cm3.h **** 
 422:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm3.h **** 
 425:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm3.h **** 
 428:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 9


 431:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 432:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm3.h **** 
 434:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 436:Drivers/CMSIS/Include/core_cm3.h **** 
 437:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm3.h **** 
 440:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm3.h **** 
 443:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm3.h **** 
 446:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 447:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__CM3_REV) && (__CM3_REV < 0x0201U)                   /* core r2p1 */
 448:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 449:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm3.h **** 
 451:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 452:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm3.h **** #else
 454:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 455:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm3.h **** #endif
 457:Drivers/CMSIS/Include/core_cm3.h **** 
 458:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 459:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm3.h **** 
 462:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm3.h **** 
 465:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 466:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm3.h **** 
 468:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 469:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm3.h **** 
 471:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm3.h **** 
 474:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm3.h **** 
 477:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm3.h **** 
 480:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 481:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm3.h **** 
 484:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm3.h **** 
 487:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 10


 488:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm3.h **** 
 490:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 491:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm3.h **** 
 494:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm3.h **** 
 497:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm3.h **** 
 500:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm3.h **** 
 503:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm3.h **** 
 506:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm3.h **** 
 509:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 510:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm3.h **** 
 513:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm3.h **** 
 516:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm3.h **** 
 519:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm3.h **** 
 522:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm3.h **** 
 525:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm3.h **** 
 528:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm3.h **** 
 531:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm3.h **** 
 534:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm3.h **** 
 537:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm3.h **** 
 540:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm3.h **** 
 543:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 11


 545:Drivers/CMSIS/Include/core_cm3.h **** 
 546:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm3.h **** 
 549:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm3.h **** 
 552:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 553:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm3.h **** 
 556:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm3.h **** 
 559:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm3.h **** 
 562:Drivers/CMSIS/Include/core_cm3.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 563:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm3.h **** 
 566:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm3.h **** 
 569:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm3.h **** 
 572:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm3.h **** 
 575:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm3.h **** 
 578:Drivers/CMSIS/Include/core_cm3.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 579:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm3.h **** 
 582:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm3.h **** 
 585:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm3.h **** 
 588:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm3.h **** 
 591:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm3.h **** 
 594:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm3.h **** 
 597:Drivers/CMSIS/Include/core_cm3.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 598:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm3.h **** 
 601:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 12


 602:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm3.h **** 
 604:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm3.h **** 
 607:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm3.h **** 
 610:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm3.h **** 
 613:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm3.h **** 
 616:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 617:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm3.h **** 
 620:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm3.h **** 
 623:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm3.h **** 
 626:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 627:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm3.h **** 
 630:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm3.h **** 
 633:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm3.h **** 
 636:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm3.h **** 
 639:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm3.h **** 
 642:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 643:Drivers/CMSIS/Include/core_cm3.h **** 
 644:Drivers/CMSIS/Include/core_cm3.h **** 
 645:Drivers/CMSIS/Include/core_cm3.h **** /**
 646:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 647:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 648:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 649:Drivers/CMSIS/Include/core_cm3.h ****   @{
 650:Drivers/CMSIS/Include/core_cm3.h ****  */
 651:Drivers/CMSIS/Include/core_cm3.h **** 
 652:Drivers/CMSIS/Include/core_cm3.h **** /**
 653:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 654:Drivers/CMSIS/Include/core_cm3.h ****  */
 655:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 656:Drivers/CMSIS/Include/core_cm3.h **** {
 657:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 658:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 13


 659:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__CM3_REV) && (__CM3_REV >= 0x200U)
 660:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 661:Drivers/CMSIS/Include/core_cm3.h **** #else
 662:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 663:Drivers/CMSIS/Include/core_cm3.h **** #endif
 664:Drivers/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 665:Drivers/CMSIS/Include/core_cm3.h **** 
 666:Drivers/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 667:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 668:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 669:Drivers/CMSIS/Include/core_cm3.h **** 
 670:Drivers/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 671:Drivers/CMSIS/Include/core_cm3.h **** 
 672:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 673:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 674:Drivers/CMSIS/Include/core_cm3.h **** 
 675:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 676:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 677:Drivers/CMSIS/Include/core_cm3.h **** 
 678:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 679:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 680:Drivers/CMSIS/Include/core_cm3.h **** 
 681:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 682:Drivers/CMSIS/Include/core_cm3.h **** 
 683:Drivers/CMSIS/Include/core_cm3.h **** 
 684:Drivers/CMSIS/Include/core_cm3.h **** /**
 685:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 686:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 687:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 688:Drivers/CMSIS/Include/core_cm3.h ****   @{
 689:Drivers/CMSIS/Include/core_cm3.h ****  */
 690:Drivers/CMSIS/Include/core_cm3.h **** 
 691:Drivers/CMSIS/Include/core_cm3.h **** /**
 692:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 693:Drivers/CMSIS/Include/core_cm3.h ****  */
 694:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 695:Drivers/CMSIS/Include/core_cm3.h **** {
 696:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 697:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 698:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 699:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 700:Drivers/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 701:Drivers/CMSIS/Include/core_cm3.h **** 
 702:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 703:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 704:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 705:Drivers/CMSIS/Include/core_cm3.h **** 
 706:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 707:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 708:Drivers/CMSIS/Include/core_cm3.h **** 
 709:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 710:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 711:Drivers/CMSIS/Include/core_cm3.h **** 
 712:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 713:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 714:Drivers/CMSIS/Include/core_cm3.h **** 
 715:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 14


 716:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 717:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 718:Drivers/CMSIS/Include/core_cm3.h **** 
 719:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 720:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 721:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 722:Drivers/CMSIS/Include/core_cm3.h **** 
 723:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 724:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 725:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 726:Drivers/CMSIS/Include/core_cm3.h **** 
 727:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 728:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 729:Drivers/CMSIS/Include/core_cm3.h **** 
 730:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 731:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 732:Drivers/CMSIS/Include/core_cm3.h **** 
 733:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 734:Drivers/CMSIS/Include/core_cm3.h **** 
 735:Drivers/CMSIS/Include/core_cm3.h **** 
 736:Drivers/CMSIS/Include/core_cm3.h **** /**
 737:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 738:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 739:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 740:Drivers/CMSIS/Include/core_cm3.h ****   @{
 741:Drivers/CMSIS/Include/core_cm3.h ****  */
 742:Drivers/CMSIS/Include/core_cm3.h **** 
 743:Drivers/CMSIS/Include/core_cm3.h **** /**
 744:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 745:Drivers/CMSIS/Include/core_cm3.h ****  */
 746:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 747:Drivers/CMSIS/Include/core_cm3.h **** {
 748:Drivers/CMSIS/Include/core_cm3.h ****   __OM  union
 749:Drivers/CMSIS/Include/core_cm3.h ****   {
 750:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 751:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 752:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 753:Drivers/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 754:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 755:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 756:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 757:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 758:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 759:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 760:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
 761:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 762:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 763:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 764:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 765:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 766:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 767:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 768:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 769:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 770:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 771:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 772:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 15


 773:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 774:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 775:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 776:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 777:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 778:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 779:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 780:Drivers/CMSIS/Include/core_cm3.h **** } ITM_Type;
 781:Drivers/CMSIS/Include/core_cm3.h **** 
 782:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 783:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 784:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 785:Drivers/CMSIS/Include/core_cm3.h **** 
 786:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 787:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 788:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 789:Drivers/CMSIS/Include/core_cm3.h **** 
 790:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 791:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm3.h **** 
 793:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 794:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm3.h **** 
 796:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 797:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm3.h **** 
 799:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 800:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm3.h **** 
 802:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 803:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 804:Drivers/CMSIS/Include/core_cm3.h **** 
 805:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 806:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 807:Drivers/CMSIS/Include/core_cm3.h **** 
 808:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 809:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm3.h **** 
 811:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 812:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm3.h **** 
 814:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 815:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 816:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm3.h **** 
 818:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 819:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 821:Drivers/CMSIS/Include/core_cm3.h **** 
 822:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 823:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 825:Drivers/CMSIS/Include/core_cm3.h **** 
 826:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 827:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 828:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 829:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 16


 830:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 831:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 832:Drivers/CMSIS/Include/core_cm3.h **** 
 833:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 834:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 835:Drivers/CMSIS/Include/core_cm3.h **** 
 836:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 837:Drivers/CMSIS/Include/core_cm3.h **** 
 838:Drivers/CMSIS/Include/core_cm3.h **** 
 839:Drivers/CMSIS/Include/core_cm3.h **** /**
 840:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 841:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 842:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 843:Drivers/CMSIS/Include/core_cm3.h ****   @{
 844:Drivers/CMSIS/Include/core_cm3.h ****  */
 845:Drivers/CMSIS/Include/core_cm3.h **** 
 846:Drivers/CMSIS/Include/core_cm3.h **** /**
 847:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 848:Drivers/CMSIS/Include/core_cm3.h ****  */
 849:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 850:Drivers/CMSIS/Include/core_cm3.h **** {
 851:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 852:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 853:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 854:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 855:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 856:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 857:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 858:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 859:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 860:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 861:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 862:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 863:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 864:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 865:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 866:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 867:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 868:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 869:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 870:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 871:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 872:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 873:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 874:Drivers/CMSIS/Include/core_cm3.h **** } DWT_Type;
 875:Drivers/CMSIS/Include/core_cm3.h **** 
 876:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 877:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 878:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 879:Drivers/CMSIS/Include/core_cm3.h **** 
 880:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 881:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 882:Drivers/CMSIS/Include/core_cm3.h **** 
 883:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 884:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 885:Drivers/CMSIS/Include/core_cm3.h **** 
 886:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 17


 887:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 888:Drivers/CMSIS/Include/core_cm3.h **** 
 889:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 890:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 891:Drivers/CMSIS/Include/core_cm3.h **** 
 892:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 893:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 894:Drivers/CMSIS/Include/core_cm3.h **** 
 895:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 896:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 897:Drivers/CMSIS/Include/core_cm3.h **** 
 898:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 899:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 900:Drivers/CMSIS/Include/core_cm3.h **** 
 901:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 902:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 903:Drivers/CMSIS/Include/core_cm3.h **** 
 904:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 905:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 906:Drivers/CMSIS/Include/core_cm3.h **** 
 907:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 908:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 909:Drivers/CMSIS/Include/core_cm3.h **** 
 910:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 911:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 912:Drivers/CMSIS/Include/core_cm3.h **** 
 913:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 914:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 915:Drivers/CMSIS/Include/core_cm3.h **** 
 916:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 917:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 918:Drivers/CMSIS/Include/core_cm3.h **** 
 919:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 920:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 921:Drivers/CMSIS/Include/core_cm3.h **** 
 922:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 923:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 924:Drivers/CMSIS/Include/core_cm3.h **** 
 925:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 926:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 927:Drivers/CMSIS/Include/core_cm3.h **** 
 928:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 930:Drivers/CMSIS/Include/core_cm3.h **** 
 931:Drivers/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 932:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 933:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 934:Drivers/CMSIS/Include/core_cm3.h **** 
 935:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 936:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 937:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 938:Drivers/CMSIS/Include/core_cm3.h **** 
 939:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 940:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 941:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 942:Drivers/CMSIS/Include/core_cm3.h **** 
 943:Drivers/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 18


 944:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 945:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 946:Drivers/CMSIS/Include/core_cm3.h **** 
 947:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 948:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 949:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 950:Drivers/CMSIS/Include/core_cm3.h **** 
 951:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 952:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 953:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 954:Drivers/CMSIS/Include/core_cm3.h **** 
 955:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 956:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 957:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 958:Drivers/CMSIS/Include/core_cm3.h **** 
 959:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 960:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 961:Drivers/CMSIS/Include/core_cm3.h **** 
 962:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 963:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 964:Drivers/CMSIS/Include/core_cm3.h **** 
 965:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 966:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 967:Drivers/CMSIS/Include/core_cm3.h **** 
 968:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 969:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 970:Drivers/CMSIS/Include/core_cm3.h **** 
 971:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 972:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 973:Drivers/CMSIS/Include/core_cm3.h **** 
 974:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 975:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 976:Drivers/CMSIS/Include/core_cm3.h **** 
 977:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 978:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 979:Drivers/CMSIS/Include/core_cm3.h **** 
 980:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 981:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 982:Drivers/CMSIS/Include/core_cm3.h **** 
 983:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 984:Drivers/CMSIS/Include/core_cm3.h **** 
 985:Drivers/CMSIS/Include/core_cm3.h **** 
 986:Drivers/CMSIS/Include/core_cm3.h **** /**
 987:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 988:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 989:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 990:Drivers/CMSIS/Include/core_cm3.h ****   @{
 991:Drivers/CMSIS/Include/core_cm3.h ****  */
 992:Drivers/CMSIS/Include/core_cm3.h **** 
 993:Drivers/CMSIS/Include/core_cm3.h **** /**
 994:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 995:Drivers/CMSIS/Include/core_cm3.h ****  */
 996:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 997:Drivers/CMSIS/Include/core_cm3.h **** {
 998:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 999:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1000:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 19


1001:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1002:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
1003:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1004:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
1005:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1006:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1007:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1008:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
1009:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1010:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1011:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1012:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
1013:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1014:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1015:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1016:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1017:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1018:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1019:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1020:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1021:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1022:Drivers/CMSIS/Include/core_cm3.h **** } TPI_Type;
1023:Drivers/CMSIS/Include/core_cm3.h **** 
1024:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1025:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1026:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1027:Drivers/CMSIS/Include/core_cm3.h **** 
1028:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1029:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1030:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1031:Drivers/CMSIS/Include/core_cm3.h **** 
1032:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1033:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1034:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1035:Drivers/CMSIS/Include/core_cm3.h **** 
1036:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1037:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1038:Drivers/CMSIS/Include/core_cm3.h **** 
1039:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1040:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1041:Drivers/CMSIS/Include/core_cm3.h **** 
1042:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1043:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1044:Drivers/CMSIS/Include/core_cm3.h **** 
1045:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1046:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1047:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1048:Drivers/CMSIS/Include/core_cm3.h **** 
1049:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1050:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1051:Drivers/CMSIS/Include/core_cm3.h **** 
1052:Drivers/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1053:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1054:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1055:Drivers/CMSIS/Include/core_cm3.h **** 
1056:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1057:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 20


1058:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1059:Drivers/CMSIS/Include/core_cm3.h **** 
1060:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1061:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm3.h **** 
1063:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1064:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm3.h **** 
1066:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1067:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1068:Drivers/CMSIS/Include/core_cm3.h **** 
1069:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1070:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1071:Drivers/CMSIS/Include/core_cm3.h **** 
1072:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm3.h **** 
1075:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm3.h **** 
1078:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1079:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1080:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1081:Drivers/CMSIS/Include/core_cm3.h **** 
1082:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1083:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1084:Drivers/CMSIS/Include/core_cm3.h **** 
1085:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1087:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm3.h **** 
1089:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1090:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm3.h **** 
1092:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1093:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:Drivers/CMSIS/Include/core_cm3.h **** 
1095:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1096:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:Drivers/CMSIS/Include/core_cm3.h **** 
1098:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1099:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:Drivers/CMSIS/Include/core_cm3.h **** 
1101:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1102:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:Drivers/CMSIS/Include/core_cm3.h **** 
1104:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1105:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:Drivers/CMSIS/Include/core_cm3.h **** 
1107:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1108:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1109:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1110:Drivers/CMSIS/Include/core_cm3.h **** 
1111:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1112:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1113:Drivers/CMSIS/Include/core_cm3.h **** 
1114:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 21


1115:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1116:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1117:Drivers/CMSIS/Include/core_cm3.h **** 
1118:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1119:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1120:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1121:Drivers/CMSIS/Include/core_cm3.h **** 
1122:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1124:Drivers/CMSIS/Include/core_cm3.h **** 
1125:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1127:Drivers/CMSIS/Include/core_cm3.h **** 
1128:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1129:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1130:Drivers/CMSIS/Include/core_cm3.h **** 
1131:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1132:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1133:Drivers/CMSIS/Include/core_cm3.h **** 
1134:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1135:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1136:Drivers/CMSIS/Include/core_cm3.h **** 
1137:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1138:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1139:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:Drivers/CMSIS/Include/core_cm3.h **** 
1141:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1142:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1143:Drivers/CMSIS/Include/core_cm3.h **** 
1144:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1145:Drivers/CMSIS/Include/core_cm3.h **** 
1146:Drivers/CMSIS/Include/core_cm3.h **** 
1147:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1148:Drivers/CMSIS/Include/core_cm3.h **** /**
1149:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1150:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1151:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1152:Drivers/CMSIS/Include/core_cm3.h ****   @{
1153:Drivers/CMSIS/Include/core_cm3.h ****  */
1154:Drivers/CMSIS/Include/core_cm3.h **** 
1155:Drivers/CMSIS/Include/core_cm3.h **** /**
1156:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1157:Drivers/CMSIS/Include/core_cm3.h ****  */
1158:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1159:Drivers/CMSIS/Include/core_cm3.h **** {
1160:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1161:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1162:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1163:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1164:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1165:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1166:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1167:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1168:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1169:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1170:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1171:Drivers/CMSIS/Include/core_cm3.h **** } MPU_Type;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 22


1172:Drivers/CMSIS/Include/core_cm3.h **** 
1173:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_RALIASES                  4U
1174:Drivers/CMSIS/Include/core_cm3.h **** 
1175:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1176:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1177:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1178:Drivers/CMSIS/Include/core_cm3.h **** 
1179:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1180:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1181:Drivers/CMSIS/Include/core_cm3.h **** 
1182:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1184:Drivers/CMSIS/Include/core_cm3.h **** 
1185:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1186:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1187:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1188:Drivers/CMSIS/Include/core_cm3.h **** 
1189:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1190:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1191:Drivers/CMSIS/Include/core_cm3.h **** 
1192:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1193:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1194:Drivers/CMSIS/Include/core_cm3.h **** 
1195:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1196:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1197:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm3.h **** 
1199:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1200:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1202:Drivers/CMSIS/Include/core_cm3.h **** 
1203:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm3.h **** 
1206:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1207:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm3.h **** 
1209:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1210:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1212:Drivers/CMSIS/Include/core_cm3.h **** 
1213:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1215:Drivers/CMSIS/Include/core_cm3.h **** 
1216:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1218:Drivers/CMSIS/Include/core_cm3.h **** 
1219:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1221:Drivers/CMSIS/Include/core_cm3.h **** 
1222:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1224:Drivers/CMSIS/Include/core_cm3.h **** 
1225:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1227:Drivers/CMSIS/Include/core_cm3.h **** 
1228:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 23


1229:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm3.h **** 
1231:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm3.h **** 
1234:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm3.h **** 
1237:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm3.h **** 
1240:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1241:Drivers/CMSIS/Include/core_cm3.h **** #endif
1242:Drivers/CMSIS/Include/core_cm3.h **** 
1243:Drivers/CMSIS/Include/core_cm3.h **** 
1244:Drivers/CMSIS/Include/core_cm3.h **** /**
1245:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1246:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1247:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1248:Drivers/CMSIS/Include/core_cm3.h ****   @{
1249:Drivers/CMSIS/Include/core_cm3.h ****  */
1250:Drivers/CMSIS/Include/core_cm3.h **** 
1251:Drivers/CMSIS/Include/core_cm3.h **** /**
1252:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1253:Drivers/CMSIS/Include/core_cm3.h ****  */
1254:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1255:Drivers/CMSIS/Include/core_cm3.h **** {
1256:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1257:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1258:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1259:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1260:Drivers/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1261:Drivers/CMSIS/Include/core_cm3.h **** 
1262:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1263:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1264:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1265:Drivers/CMSIS/Include/core_cm3.h **** 
1266:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1267:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1268:Drivers/CMSIS/Include/core_cm3.h **** 
1269:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1270:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1271:Drivers/CMSIS/Include/core_cm3.h **** 
1272:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1273:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1274:Drivers/CMSIS/Include/core_cm3.h **** 
1275:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1276:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1277:Drivers/CMSIS/Include/core_cm3.h **** 
1278:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1279:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1280:Drivers/CMSIS/Include/core_cm3.h **** 
1281:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1282:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1283:Drivers/CMSIS/Include/core_cm3.h **** 
1284:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1285:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 24


1286:Drivers/CMSIS/Include/core_cm3.h **** 
1287:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1288:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1289:Drivers/CMSIS/Include/core_cm3.h **** 
1290:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1291:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1292:Drivers/CMSIS/Include/core_cm3.h **** 
1293:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1294:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1295:Drivers/CMSIS/Include/core_cm3.h **** 
1296:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1297:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1298:Drivers/CMSIS/Include/core_cm3.h **** 
1299:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1300:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1301:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1302:Drivers/CMSIS/Include/core_cm3.h **** 
1303:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1304:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1305:Drivers/CMSIS/Include/core_cm3.h **** 
1306:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1307:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1308:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1309:Drivers/CMSIS/Include/core_cm3.h **** 
1310:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1311:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1312:Drivers/CMSIS/Include/core_cm3.h **** 
1313:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1314:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1315:Drivers/CMSIS/Include/core_cm3.h **** 
1316:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1317:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1318:Drivers/CMSIS/Include/core_cm3.h **** 
1319:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1320:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1321:Drivers/CMSIS/Include/core_cm3.h **** 
1322:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1323:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1324:Drivers/CMSIS/Include/core_cm3.h **** 
1325:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1326:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1327:Drivers/CMSIS/Include/core_cm3.h **** 
1328:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1329:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1330:Drivers/CMSIS/Include/core_cm3.h **** 
1331:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1332:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1333:Drivers/CMSIS/Include/core_cm3.h **** 
1334:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1335:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1336:Drivers/CMSIS/Include/core_cm3.h **** 
1337:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1338:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1339:Drivers/CMSIS/Include/core_cm3.h **** 
1340:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1341:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1342:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 25


1343:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1344:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1345:Drivers/CMSIS/Include/core_cm3.h **** 
1346:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1347:Drivers/CMSIS/Include/core_cm3.h **** 
1348:Drivers/CMSIS/Include/core_cm3.h **** 
1349:Drivers/CMSIS/Include/core_cm3.h **** /**
1350:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1351:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1352:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1353:Drivers/CMSIS/Include/core_cm3.h ****   @{
1354:Drivers/CMSIS/Include/core_cm3.h ****  */
1355:Drivers/CMSIS/Include/core_cm3.h **** 
1356:Drivers/CMSIS/Include/core_cm3.h **** /**
1357:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1358:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1359:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1360:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1361:Drivers/CMSIS/Include/core_cm3.h **** */
1362:Drivers/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1363:Drivers/CMSIS/Include/core_cm3.h **** 
1364:Drivers/CMSIS/Include/core_cm3.h **** /**
1365:Drivers/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1366:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1367:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1368:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1369:Drivers/CMSIS/Include/core_cm3.h **** */
1370:Drivers/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1371:Drivers/CMSIS/Include/core_cm3.h **** 
1372:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1373:Drivers/CMSIS/Include/core_cm3.h **** 
1374:Drivers/CMSIS/Include/core_cm3.h **** 
1375:Drivers/CMSIS/Include/core_cm3.h **** /**
1376:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1377:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1378:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1379:Drivers/CMSIS/Include/core_cm3.h ****   @{
1380:Drivers/CMSIS/Include/core_cm3.h ****  */
1381:Drivers/CMSIS/Include/core_cm3.h **** 
1382:Drivers/CMSIS/Include/core_cm3.h **** /* Memory mapping of Core Hardware */
1383:Drivers/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1384:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1385:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1386:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1387:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1388:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1389:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1390:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1391:Drivers/CMSIS/Include/core_cm3.h **** 
1392:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1393:Drivers/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1394:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1395:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1396:Drivers/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1397:Drivers/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1398:Drivers/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1399:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 26


1400:Drivers/CMSIS/Include/core_cm3.h **** 
1401:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1402:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1403:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1404:Drivers/CMSIS/Include/core_cm3.h **** #endif
1405:Drivers/CMSIS/Include/core_cm3.h **** 
1406:Drivers/CMSIS/Include/core_cm3.h **** /*@} */
1407:Drivers/CMSIS/Include/core_cm3.h **** 
1408:Drivers/CMSIS/Include/core_cm3.h **** 
1409:Drivers/CMSIS/Include/core_cm3.h **** 
1410:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1411:Drivers/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1412:Drivers/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1413:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1414:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1415:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1416:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1417:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1418:Drivers/CMSIS/Include/core_cm3.h **** /**
1419:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1420:Drivers/CMSIS/Include/core_cm3.h **** */
1421:Drivers/CMSIS/Include/core_cm3.h **** 
1422:Drivers/CMSIS/Include/core_cm3.h **** 
1423:Drivers/CMSIS/Include/core_cm3.h **** 
1424:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1425:Drivers/CMSIS/Include/core_cm3.h **** /**
1426:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1427:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1428:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1429:Drivers/CMSIS/Include/core_cm3.h ****   @{
1430:Drivers/CMSIS/Include/core_cm3.h ****  */
1431:Drivers/CMSIS/Include/core_cm3.h **** 
1432:Drivers/CMSIS/Include/core_cm3.h **** #ifdef CMSIS_NVIC_VIRTUAL
1433:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1434:Drivers/CMSIS/Include/core_cm3.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1435:Drivers/CMSIS/Include/core_cm3.h ****   #endif
1436:Drivers/CMSIS/Include/core_cm3.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1437:Drivers/CMSIS/Include/core_cm3.h **** #else
1438:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1439:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1440:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1441:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1442:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1443:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1444:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1445:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1446:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetActive              __NVIC_GetActive
1447:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1448:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1449:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1450:Drivers/CMSIS/Include/core_cm3.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1451:Drivers/CMSIS/Include/core_cm3.h **** 
1452:Drivers/CMSIS/Include/core_cm3.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1453:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1454:Drivers/CMSIS/Include/core_cm3.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1455:Drivers/CMSIS/Include/core_cm3.h ****   #endif
1456:Drivers/CMSIS/Include/core_cm3.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 27


1457:Drivers/CMSIS/Include/core_cm3.h **** #else
1458:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetVector              __NVIC_SetVector
1459:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetVector              __NVIC_GetVector
1460:Drivers/CMSIS/Include/core_cm3.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1461:Drivers/CMSIS/Include/core_cm3.h **** 
1462:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_USER_IRQ_OFFSET          16
1463:Drivers/CMSIS/Include/core_cm3.h **** 
1464:Drivers/CMSIS/Include/core_cm3.h **** 
1465:Drivers/CMSIS/Include/core_cm3.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1466:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1467:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1468:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1469:Drivers/CMSIS/Include/core_cm3.h **** 
1470:Drivers/CMSIS/Include/core_cm3.h **** 
1471:Drivers/CMSIS/Include/core_cm3.h **** /**
1472:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1473:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1474:Drivers/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1475:Drivers/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1476:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1477:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1478:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1479:Drivers/CMSIS/Include/core_cm3.h ****  */
1480:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1481:Drivers/CMSIS/Include/core_cm3.h **** {
1482:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1483:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1484:Drivers/CMSIS/Include/core_cm3.h **** 
1485:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1486:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1487:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1488:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1489:Drivers/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key a
1490:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1491:Drivers/CMSIS/Include/core_cm3.h **** }
1492:Drivers/CMSIS/Include/core_cm3.h **** 
1493:Drivers/CMSIS/Include/core_cm3.h **** 
1494:Drivers/CMSIS/Include/core_cm3.h **** /**
1495:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
1496:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1497:Drivers/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1498:Drivers/CMSIS/Include/core_cm3.h ****  */
1499:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1500:Drivers/CMSIS/Include/core_cm3.h **** {
1501:Drivers/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1502:Drivers/CMSIS/Include/core_cm3.h **** }
1503:Drivers/CMSIS/Include/core_cm3.h **** 
1504:Drivers/CMSIS/Include/core_cm3.h **** 
1505:Drivers/CMSIS/Include/core_cm3.h **** /**
1506:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Enable Interrupt
1507:Drivers/CMSIS/Include/core_cm3.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1508:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1509:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1510:Drivers/CMSIS/Include/core_cm3.h ****  */
1511:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1512:Drivers/CMSIS/Include/core_cm3.h **** {
1513:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 28


1514:Drivers/CMSIS/Include/core_cm3.h ****   {
1515:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1516:Drivers/CMSIS/Include/core_cm3.h ****   }
1517:Drivers/CMSIS/Include/core_cm3.h **** }
1518:Drivers/CMSIS/Include/core_cm3.h **** 
1519:Drivers/CMSIS/Include/core_cm3.h **** 
1520:Drivers/CMSIS/Include/core_cm3.h **** /**
1521:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Enable status
1522:Drivers/CMSIS/Include/core_cm3.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1523:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1524:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt is not enabled.
1525:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt is enabled.
1526:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1527:Drivers/CMSIS/Include/core_cm3.h ****  */
1528:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1529:Drivers/CMSIS/Include/core_cm3.h **** {
1530:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1531:Drivers/CMSIS/Include/core_cm3.h ****   {
1532:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1533:Drivers/CMSIS/Include/core_cm3.h ****   }
1534:Drivers/CMSIS/Include/core_cm3.h ****   else
1535:Drivers/CMSIS/Include/core_cm3.h ****   {
1536:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1537:Drivers/CMSIS/Include/core_cm3.h ****   }
1538:Drivers/CMSIS/Include/core_cm3.h **** }
1539:Drivers/CMSIS/Include/core_cm3.h **** 
1540:Drivers/CMSIS/Include/core_cm3.h **** 
1541:Drivers/CMSIS/Include/core_cm3.h **** /**
1542:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Disable Interrupt
1543:Drivers/CMSIS/Include/core_cm3.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1544:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1545:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1546:Drivers/CMSIS/Include/core_cm3.h ****  */
1547:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1548:Drivers/CMSIS/Include/core_cm3.h **** {
1549:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1550:Drivers/CMSIS/Include/core_cm3.h ****   {
1551:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1552:Drivers/CMSIS/Include/core_cm3.h ****     __DSB();
1553:Drivers/CMSIS/Include/core_cm3.h ****     __ISB();
1554:Drivers/CMSIS/Include/core_cm3.h ****   }
1555:Drivers/CMSIS/Include/core_cm3.h **** }
1556:Drivers/CMSIS/Include/core_cm3.h **** 
1557:Drivers/CMSIS/Include/core_cm3.h **** 
1558:Drivers/CMSIS/Include/core_cm3.h **** /**
1559:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1560:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1561:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1562:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1563:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
1564:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1565:Drivers/CMSIS/Include/core_cm3.h ****  */
1566:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1567:Drivers/CMSIS/Include/core_cm3.h **** {
1568:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1569:Drivers/CMSIS/Include/core_cm3.h ****   {
1570:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 29


1571:Drivers/CMSIS/Include/core_cm3.h ****   }
1572:Drivers/CMSIS/Include/core_cm3.h ****   else
1573:Drivers/CMSIS/Include/core_cm3.h ****   {
1574:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1575:Drivers/CMSIS/Include/core_cm3.h ****   }
1576:Drivers/CMSIS/Include/core_cm3.h **** }
1577:Drivers/CMSIS/Include/core_cm3.h **** 
1578:Drivers/CMSIS/Include/core_cm3.h **** 
1579:Drivers/CMSIS/Include/core_cm3.h **** /**
1580:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1581:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1582:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1583:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1584:Drivers/CMSIS/Include/core_cm3.h ****  */
1585:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1586:Drivers/CMSIS/Include/core_cm3.h **** {
1587:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1588:Drivers/CMSIS/Include/core_cm3.h ****   {
1589:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1590:Drivers/CMSIS/Include/core_cm3.h ****   }
1591:Drivers/CMSIS/Include/core_cm3.h **** }
1592:Drivers/CMSIS/Include/core_cm3.h **** 
1593:Drivers/CMSIS/Include/core_cm3.h **** 
1594:Drivers/CMSIS/Include/core_cm3.h **** /**
1595:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1596:Drivers/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1597:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1598:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1599:Drivers/CMSIS/Include/core_cm3.h ****  */
1600:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1601:Drivers/CMSIS/Include/core_cm3.h **** {
1602:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1603:Drivers/CMSIS/Include/core_cm3.h ****   {
1604:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1605:Drivers/CMSIS/Include/core_cm3.h ****   }
1606:Drivers/CMSIS/Include/core_cm3.h **** }
1607:Drivers/CMSIS/Include/core_cm3.h **** 
1608:Drivers/CMSIS/Include/core_cm3.h **** 
1609:Drivers/CMSIS/Include/core_cm3.h **** /**
1610:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Active Interrupt
1611:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1612:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1613:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not active.
1614:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is active.
1615:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1616:Drivers/CMSIS/Include/core_cm3.h ****  */
1617:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1618:Drivers/CMSIS/Include/core_cm3.h **** {
1619:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1620:Drivers/CMSIS/Include/core_cm3.h ****   {
1621:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1622:Drivers/CMSIS/Include/core_cm3.h ****   }
1623:Drivers/CMSIS/Include/core_cm3.h ****   else
1624:Drivers/CMSIS/Include/core_cm3.h ****   {
1625:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1626:Drivers/CMSIS/Include/core_cm3.h ****   }
1627:Drivers/CMSIS/Include/core_cm3.h **** }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 30


1628:Drivers/CMSIS/Include/core_cm3.h **** 
1629:Drivers/CMSIS/Include/core_cm3.h **** 
1630:Drivers/CMSIS/Include/core_cm3.h **** /**
1631:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Priority
1632:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1633:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify a device specific interrupt,
1634:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify a processor exception.
1635:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1636:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  priority  Priority to set.
1637:Drivers/CMSIS/Include/core_cm3.h ****   \note    The priority cannot be set for every processor exception.
1638:Drivers/CMSIS/Include/core_cm3.h ****  */
1639:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1640:Drivers/CMSIS/Include/core_cm3.h **** {
1641:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1642:Drivers/CMSIS/Include/core_cm3.h ****   {
1643:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1644:Drivers/CMSIS/Include/core_cm3.h ****   }
1645:Drivers/CMSIS/Include/core_cm3.h ****   else
1646:Drivers/CMSIS/Include/core_cm3.h ****   {
1647:Drivers/CMSIS/Include/core_cm3.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1648:Drivers/CMSIS/Include/core_cm3.h ****   }
1649:Drivers/CMSIS/Include/core_cm3.h **** }
1650:Drivers/CMSIS/Include/core_cm3.h **** 
1651:Drivers/CMSIS/Include/core_cm3.h **** 
1652:Drivers/CMSIS/Include/core_cm3.h **** /**
1653:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Priority
1654:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1655:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify a device specific interrupt,
1656:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify a processor exception.
1657:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1658:Drivers/CMSIS/Include/core_cm3.h ****   \return             Interrupt Priority.
1659:Drivers/CMSIS/Include/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1660:Drivers/CMSIS/Include/core_cm3.h ****  */
1661:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1662:Drivers/CMSIS/Include/core_cm3.h **** {
1663:Drivers/CMSIS/Include/core_cm3.h **** 
1664:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1665:Drivers/CMSIS/Include/core_cm3.h ****   {
1666:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1667:Drivers/CMSIS/Include/core_cm3.h ****   }
1668:Drivers/CMSIS/Include/core_cm3.h ****   else
1669:Drivers/CMSIS/Include/core_cm3.h ****   {
1670:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1671:Drivers/CMSIS/Include/core_cm3.h ****   }
1672:Drivers/CMSIS/Include/core_cm3.h **** }
1673:Drivers/CMSIS/Include/core_cm3.h **** 
1674:Drivers/CMSIS/Include/core_cm3.h **** 
1675:Drivers/CMSIS/Include/core_cm3.h **** /**
1676:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Encode Priority
1677:Drivers/CMSIS/Include/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1678:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value, and subpriority value.
1679:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1680:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1681:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1682:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1683:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1684:Drivers/CMSIS/Include/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 31


1685:Drivers/CMSIS/Include/core_cm3.h ****  */
1686:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1687:Drivers/CMSIS/Include/core_cm3.h **** {
1688:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1689:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1690:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1691:Drivers/CMSIS/Include/core_cm3.h **** 
1692:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1693:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1694:Drivers/CMSIS/Include/core_cm3.h **** 
1695:Drivers/CMSIS/Include/core_cm3.h ****   return (
1696:Drivers/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1697:Drivers/CMSIS/Include/core_cm3.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1698:Drivers/CMSIS/Include/core_cm3.h ****          );
1699:Drivers/CMSIS/Include/core_cm3.h **** }
1700:Drivers/CMSIS/Include/core_cm3.h **** 
1701:Drivers/CMSIS/Include/core_cm3.h **** 
1702:Drivers/CMSIS/Include/core_cm3.h **** /**
1703:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Decode Priority
1704:Drivers/CMSIS/Include/core_cm3.h ****   \details Decodes an interrupt priority value with a given priority group to
1705:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value and subpriority value.
1706:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1707:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1708:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1709:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1710:Drivers/CMSIS/Include/core_cm3.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1711:Drivers/CMSIS/Include/core_cm3.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1712:Drivers/CMSIS/Include/core_cm3.h ****  */
1713:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1714:Drivers/CMSIS/Include/core_cm3.h **** {
1715:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1716:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1717:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1718:Drivers/CMSIS/Include/core_cm3.h **** 
1719:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1720:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1721:Drivers/CMSIS/Include/core_cm3.h **** 
1722:Drivers/CMSIS/Include/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1723:Drivers/CMSIS/Include/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1724:Drivers/CMSIS/Include/core_cm3.h **** }
1725:Drivers/CMSIS/Include/core_cm3.h **** 
1726:Drivers/CMSIS/Include/core_cm3.h **** 
1727:Drivers/CMSIS/Include/core_cm3.h **** /**
1728:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Vector
1729:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1730:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify a device specific interrupt,
1731:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify a processor exception.
1732:Drivers/CMSIS/Include/core_cm3.h ****            VTOR must been relocated to SRAM before.
1733:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn      Interrupt number
1734:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   vector    Address of interrupt handler function
1735:Drivers/CMSIS/Include/core_cm3.h ****  */
1736:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1737:Drivers/CMSIS/Include/core_cm3.h **** {
1738:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1739:Drivers/CMSIS/Include/core_cm3.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1740:Drivers/CMSIS/Include/core_cm3.h **** }
1741:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 32


1742:Drivers/CMSIS/Include/core_cm3.h **** 
1743:Drivers/CMSIS/Include/core_cm3.h **** /**
1744:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Vector
1745:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads an interrupt vector from interrupt vector table.
1746:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify a device specific interrupt,
1747:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify a processor exception.
1748:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn      Interrupt number.
1749:Drivers/CMSIS/Include/core_cm3.h ****   \return                 Address of interrupt handler function
1750:Drivers/CMSIS/Include/core_cm3.h ****  */
1751:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1752:Drivers/CMSIS/Include/core_cm3.h **** {
1753:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1754:Drivers/CMSIS/Include/core_cm3.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1755:Drivers/CMSIS/Include/core_cm3.h **** }
1756:Drivers/CMSIS/Include/core_cm3.h **** 
1757:Drivers/CMSIS/Include/core_cm3.h **** 
1758:Drivers/CMSIS/Include/core_cm3.h **** /**
1759:Drivers/CMSIS/Include/core_cm3.h ****   \brief   System Reset
1760:Drivers/CMSIS/Include/core_cm3.h ****   \details Initiates a system reset request to reset the MCU.
1761:Drivers/CMSIS/Include/core_cm3.h ****  */
1762:Drivers/CMSIS/Include/core_cm3.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1763:Drivers/CMSIS/Include/core_cm3.h **** {
1764:Drivers/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure all outstanding memor
1765:Drivers/CMSIS/Include/core_cm3.h ****                                                                        buffered write are completed
1766:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1767:Drivers/CMSIS/Include/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1768:Drivers/CMSIS/Include/core_cm3.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1769:Drivers/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure completion of memory 
1770:Drivers/CMSIS/Include/core_cm3.h **** 
1771:Drivers/CMSIS/Include/core_cm3.h ****   for(;;)                                                           /* wait until reset */
1772:Drivers/CMSIS/Include/core_cm3.h ****   {
1773:Drivers/CMSIS/Include/core_cm3.h ****     __NOP();
1774:Drivers/CMSIS/Include/core_cm3.h ****   }
1775:Drivers/CMSIS/Include/core_cm3.h **** }
1776:Drivers/CMSIS/Include/core_cm3.h **** 
1777:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of CMSIS_Core_NVICFunctions */
1778:Drivers/CMSIS/Include/core_cm3.h **** 
1779:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################  MPU functions  #################################### */
1780:Drivers/CMSIS/Include/core_cm3.h **** 
1781:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1782:Drivers/CMSIS/Include/core_cm3.h **** 
1783:Drivers/CMSIS/Include/core_cm3.h **** #include "mpu_armv7.h"
1784:Drivers/CMSIS/Include/core_cm3.h **** 
1785:Drivers/CMSIS/Include/core_cm3.h **** #endif
1786:Drivers/CMSIS/Include/core_cm3.h **** 
1787:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################  FPU functions  #################################### */
1788:Drivers/CMSIS/Include/core_cm3.h **** /**
1789:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1790:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1791:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Function that provides FPU type.
1792:Drivers/CMSIS/Include/core_cm3.h ****   @{
1793:Drivers/CMSIS/Include/core_cm3.h ****  */
1794:Drivers/CMSIS/Include/core_cm3.h **** 
1795:Drivers/CMSIS/Include/core_cm3.h **** /**
1796:Drivers/CMSIS/Include/core_cm3.h ****   \brief   get FPU type
1797:Drivers/CMSIS/Include/core_cm3.h ****   \details returns the FPU type
1798:Drivers/CMSIS/Include/core_cm3.h ****   \returns
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 33


1799:Drivers/CMSIS/Include/core_cm3.h ****    - \b  0: No FPU
1800:Drivers/CMSIS/Include/core_cm3.h ****    - \b  1: Single precision FPU
1801:Drivers/CMSIS/Include/core_cm3.h ****    - \b  2: Double + Single precision FPU
1802:Drivers/CMSIS/Include/core_cm3.h ****  */
1803:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1804:Drivers/CMSIS/Include/core_cm3.h **** {
1805:Drivers/CMSIS/Include/core_cm3.h ****     return 0U;           /* No FPU */
1806:Drivers/CMSIS/Include/core_cm3.h **** }
1807:Drivers/CMSIS/Include/core_cm3.h **** 
1808:Drivers/CMSIS/Include/core_cm3.h **** 
1809:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of CMSIS_Core_FpuFunctions */
1810:Drivers/CMSIS/Include/core_cm3.h **** 
1811:Drivers/CMSIS/Include/core_cm3.h **** 
1812:Drivers/CMSIS/Include/core_cm3.h **** 
1813:Drivers/CMSIS/Include/core_cm3.h **** /* ##################################    SysTick function  ########################################
1814:Drivers/CMSIS/Include/core_cm3.h **** /**
1815:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1816:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1817:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that configure the System.
1818:Drivers/CMSIS/Include/core_cm3.h ****   @{
1819:Drivers/CMSIS/Include/core_cm3.h ****  */
1820:Drivers/CMSIS/Include/core_cm3.h **** 
1821:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
1822:Drivers/CMSIS/Include/core_cm3.h **** 
1823:Drivers/CMSIS/Include/core_cm3.h **** /**
1824:Drivers/CMSIS/Include/core_cm3.h ****   \brief   System Tick Configuration
1825:Drivers/CMSIS/Include/core_cm3.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1826:Drivers/CMSIS/Include/core_cm3.h ****            Counter is in free running mode to generate periodic interrupts.
1827:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1828:Drivers/CMSIS/Include/core_cm3.h ****   \return          0  Function succeeded.
1829:Drivers/CMSIS/Include/core_cm3.h ****   \return          1  Function failed.
1830:Drivers/CMSIS/Include/core_cm3.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1831:Drivers/CMSIS/Include/core_cm3.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1832:Drivers/CMSIS/Include/core_cm3.h ****            must contain a vendor-specific implementation of this function.
1833:Drivers/CMSIS/Include/core_cm3.h ****  */
1834:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1835:Drivers/CMSIS/Include/core_cm3.h **** {
1836:Drivers/CMSIS/Include/core_cm3.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
1837:Drivers/CMSIS/Include/core_cm3.h ****   {
1838:Drivers/CMSIS/Include/core_cm3.h ****     return (1UL);                                                   /* Reload value impossible */
1839:Drivers/CMSIS/Include/core_cm3.h ****   }
1840:Drivers/CMSIS/Include/core_cm3.h **** 
1841:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
1842:Drivers/CMSIS/Include/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
1843:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
1844:Drivers/CMSIS/Include/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
1845:Drivers/CMSIS/Include/core_cm3.h ****                    SysTick_CTRL_TICKINT_Msk   |
1846:Drivers/CMSIS/Include/core_cm3.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1847:Drivers/CMSIS/Include/core_cm3.h ****   return (0UL);                                                     /* Function successful */
1848:Drivers/CMSIS/Include/core_cm3.h **** }
1849:Drivers/CMSIS/Include/core_cm3.h **** 
1850:Drivers/CMSIS/Include/core_cm3.h **** #endif
1851:Drivers/CMSIS/Include/core_cm3.h **** 
1852:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of CMSIS_Core_SysTickFunctions */
1853:Drivers/CMSIS/Include/core_cm3.h **** 
1854:Drivers/CMSIS/Include/core_cm3.h **** 
1855:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 34


1856:Drivers/CMSIS/Include/core_cm3.h **** /* ##################################### Debug In/Output function #################################
1857:Drivers/CMSIS/Include/core_cm3.h **** /**
1858:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1859:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_DebugFunctions ITM Functions
1860:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that access the ITM debug interface.
1861:Drivers/CMSIS/Include/core_cm3.h ****   @{
1862:Drivers/CMSIS/Include/core_cm3.h ****  */
1863:Drivers/CMSIS/Include/core_cm3.h **** 
1864:Drivers/CMSIS/Include/core_cm3.h **** extern volatile int32_t ITM_RxBuffer;                              /*!< External variable to receiv
1865:Drivers/CMSIS/Include/core_cm3.h **** #define                 ITM_RXBUFFER_EMPTY  ((int32_t)0x5AA55AA5U) /*!< Value identifying \ref ITM_
1866:Drivers/CMSIS/Include/core_cm3.h **** 
1867:Drivers/CMSIS/Include/core_cm3.h **** 
1868:Drivers/CMSIS/Include/core_cm3.h **** /**
1869:Drivers/CMSIS/Include/core_cm3.h ****   \brief   ITM Send Character
1870:Drivers/CMSIS/Include/core_cm3.h ****   \details Transmits a character via the ITM channel 0, and
1871:Drivers/CMSIS/Include/core_cm3.h ****            \li Just returns when no debugger is connected that has booked the output.
1872:Drivers/CMSIS/Include/core_cm3.h ****            \li Is blocking when a debugger is connected, but the previous character sent has not be
1873:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     ch  Character to transmit.
1874:Drivers/CMSIS/Include/core_cm3.h ****   \returns            Character to transmit.
1875:Drivers/CMSIS/Include/core_cm3.h ****  */
1876:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
1877:Drivers/CMSIS/Include/core_cm3.h **** {
  28              		.loc 2 1877 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
1878:Drivers/CMSIS/Include/core_cm3.h ****   if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
  33              		.loc 2 1878 3 view .LVU1
  34              		.loc 2 1878 12 is_stmt 0 view .LVU2
  35 0000 4FF06043 		mov	r3, #-536870912
  36 0004 D3F8803E 		ldr	r3, [r3, #3712]
  37              		.loc 2 1878 6 view .LVU3
  38 0008 13F0010F 		tst	r3, #1
  39 000c 11D0     		beq	.L2
1879:Drivers/CMSIS/Include/core_cm3.h ****       ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
  40              		.loc 2 1879 12 view .LVU4
  41 000e 4FF06043 		mov	r3, #-536870912
  42 0012 D3F8003E 		ldr	r3, [r3, #3584]
1878:Drivers/CMSIS/Include/core_cm3.h ****   if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
  43              		.loc 2 1878 48 discriminator 1 view .LVU5
  44 0016 13F0010F 		tst	r3, #1
  45 001a 01D1     		bne	.L3
  46 001c 7047     		bx	lr
  47              	.L4:
1880:Drivers/CMSIS/Include/core_cm3.h ****   {
1881:Drivers/CMSIS/Include/core_cm3.h ****     while (ITM->PORT[0U].u32 == 0UL)
1882:Drivers/CMSIS/Include/core_cm3.h ****     {
1883:Drivers/CMSIS/Include/core_cm3.h ****       __NOP();
  48              		.loc 2 1883 7 is_stmt 1 view .LVU6
  49              		.syntax unified
  50              	@ 1883 "Drivers/CMSIS/Include/core_cm3.h" 1
  51 001e 00BF     		nop
  52              	@ 0 "" 2
  53              		.thumb
  54              		.syntax unified
  55              	.L3:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 35


1881:Drivers/CMSIS/Include/core_cm3.h ****     {
  56              		.loc 2 1881 30 view .LVU7
1881:Drivers/CMSIS/Include/core_cm3.h ****     {
  57              		.loc 2 1881 25 is_stmt 0 view .LVU8
  58 0020 4FF06043 		mov	r3, #-536870912
  59 0024 1B68     		ldr	r3, [r3]
1881:Drivers/CMSIS/Include/core_cm3.h ****     {
  60              		.loc 2 1881 30 view .LVU9
  61 0026 002B     		cmp	r3, #0
  62 0028 F9D0     		beq	.L4
1884:Drivers/CMSIS/Include/core_cm3.h ****     }
1885:Drivers/CMSIS/Include/core_cm3.h ****     ITM->PORT[0U].u8 = (uint8_t)ch;
  63              		.loc 2 1885 5 is_stmt 1 view .LVU10
  64              		.loc 2 1885 24 is_stmt 0 view .LVU11
  65 002a C3B2     		uxtb	r3, r0
  66              		.loc 2 1885 22 view .LVU12
  67 002c 4FF06042 		mov	r2, #-536870912
  68 0030 1370     		strb	r3, [r2]
  69              	.L2:
1886:Drivers/CMSIS/Include/core_cm3.h ****   }
1887:Drivers/CMSIS/Include/core_cm3.h ****   return (ch);
  70              		.loc 2 1887 3 is_stmt 1 view .LVU13
1888:Drivers/CMSIS/Include/core_cm3.h **** }
  71              		.loc 2 1888 1 is_stmt 0 view .LVU14
  72 0032 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE69:
  76              		.section	.text.MX_GPIO_Init,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	MX_GPIO_Init:
  83              	.LFB87:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 36


  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include <stdbool.h>
  26:Core/Src/main.c **** #include <math.h>
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** #define SPI_TIMEOUT 1000
  37:Core/Src/main.c **** #define TIME_GAME 60 // Temps pour defuser la bombe
  38:Core/Src/main.c **** #define BUFFER_SIZE 10
  39:Core/Src/main.c **** #define PI 3 // valeur exacte de pi
  40:Core/Src/main.c **** #define DELAY_DEBOUNCE 300
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** // Define pour le MP3 - a utilise avec la fonction void play_track(uint8_t track_nb);
  43:Core/Src/main.c **** // Corresponds à la position de la bande sons dans la mémoire de l'interface haut parleur
  44:Core/Src/main.c **** #define BIP 1
  45:Core/Src/main.c **** #define SOUND_START_BOMB 2
  46:Core/Src/main.c **** #define BOMB_DEFUSED 3
  47:Core/Src/main.c **** #define BOMB_EXPLODED 4
  48:Core/Src/main.c **** #define SOUND_PUSH_BUTTON 5
  49:Core/Src/main.c **** #define BOMB_HAS_BEEN_PLANTED 6
  50:Core/Src/main.c **** /* USER CODE END PD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  53:Core/Src/main.c **** /* USER CODE BEGIN PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  59:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  64:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  65:Core/Src/main.c **** TIM_HandleTypeDef htim9;
  66:Core/Src/main.c **** TIM_HandleTypeDef htim10;
  67:Core/Src/main.c **** TIM_HandleTypeDef htim11;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** UART_HandleTypeDef huart4;
  70:Core/Src/main.c **** UART_HandleTypeDef huart2;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE BEGIN PV */
  73:Core/Src/main.c **** // region[rgba(1, 70, 70, 0.15)]  <= colore la région (Colored Region extension for vscode)
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** uint32_t seed;
  76:Core/Src/main.c **** uint16_t adcData[2];
  77:Core/Src/main.c **** volatile bool adcOk = false;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** uint8_t time_in_second = TIME_GAME;
  80:Core/Src/main.c **** uint8_t flag_bipbip = 0;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 37


  81:Core/Src/main.c **** uint8_t freqence_bipbip = 0;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** bool bombPlanted = false;
  84:Core/Src/main.c **** uint8_t buttonPlantCurrentIndex = 0;
  85:Core/Src/main.c **** uint8_t buttonOrderPlant[4] = {1, 2, 3, 4}; // Séquence de boutons pour planter la bombe
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** volatile bool buttonOk = false;
  88:Core/Src/main.c **** uint8_t buttonCurrentIndex = 0;
  89:Core/Src/main.c **** uint8_t buttonOrderDefuse[4];
  90:Core/Src/main.c **** uint32_t buttonElapsed[4] = {0, 0, 0, 0}; // Tableau pour le debounce des boutons
  91:Core/Src/main.c **** typedef enum                              // Enumération des états du jeu
  92:Core/Src/main.c **** {
  93:Core/Src/main.c ****   ETAT_INITIALISATION,
  94:Core/Src/main.c ****   ETAT_JEU,
  95:Core/Src/main.c ****   ETAT_VICTOIRE,
  96:Core/Src/main.c ****   ETAT_DEFAITE
  97:Core/Src/main.c **** } EtatJeu;
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** EtatJeu etat = ETAT_INITIALISATION;
 100:Core/Src/main.c **** // endregion
 101:Core/Src/main.c **** /* USER CODE END PV */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 104:Core/Src/main.c **** void SystemClock_Config(void);
 105:Core/Src/main.c **** static void MX_GPIO_Init(void);
 106:Core/Src/main.c **** static void MX_DMA_Init(void);
 107:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 108:Core/Src/main.c **** static void MX_ADC_Init(void);
 109:Core/Src/main.c **** static void MX_SPI1_Init(void);
 110:Core/Src/main.c **** static void MX_TIM10_Init(void);
 111:Core/Src/main.c **** static void MX_UART4_Init(void);
 112:Core/Src/main.c **** static void MX_TIM2_Init(void);
 113:Core/Src/main.c **** static void MX_TIM9_Init(void);
 114:Core/Src/main.c **** static void MX_TIM11_Init(void);
 115:Core/Src/main.c **** static void MX_TIM3_Init(void);
 116:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 117:Core/Src/main.c **** void ledUpdate(uint16_t adcValue, TIM_HandleTypeDef *htim, uint32_t Channel);
 118:Core/Src/main.c **** void BCD_SendCommand(uint8_t addr, uint8_t data);
 119:Core/Src/main.c **** void BCD_Init(uint16_t time_in_second);
 120:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim);
 121:Core/Src/main.c **** int BCD_updateClock(uint16_t time_in_second);
 122:Core/Src/main.c **** void secondToClockDisplay(uint16_t time_in_second);
 123:Core/Src/main.c **** void play();
 124:Core/Src/main.c **** void play_track(uint8_t track_nb);
 125:Core/Src/main.c **** void randomButtonSequence();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /* USER CODE END PFP */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 130:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /* USER CODE END 0 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****  * @brief  The application entry point.
 136:Core/Src/main.c ****  * @retval int
 137:Core/Src/main.c ****  */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 38


 138:Core/Src/main.c **** int main(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE END 1 */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 147:Core/Src/main.c ****   HAL_Init();
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* USER CODE END Init */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* Configure the system clock */
 154:Core/Src/main.c ****   SystemClock_Config();
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE END SysInit */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* Initialize all configured peripherals */
 161:Core/Src/main.c ****   MX_GPIO_Init();
 162:Core/Src/main.c ****   MX_DMA_Init();
 163:Core/Src/main.c ****   MX_USART2_UART_Init();
 164:Core/Src/main.c ****   MX_ADC_Init();
 165:Core/Src/main.c ****   MX_SPI1_Init();
 166:Core/Src/main.c ****   MX_TIM10_Init();
 167:Core/Src/main.c ****   MX_UART4_Init();
 168:Core/Src/main.c ****   MX_TIM2_Init();
 169:Core/Src/main.c ****   MX_TIM9_Init();
 170:Core/Src/main.c ****   MX_TIM11_Init();
 171:Core/Src/main.c ****   MX_TIM3_Init();
 172:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 173:Core/Src/main.c ****   printf("Starting\r\n");
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 176:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 177:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_2);
 178:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim3); // Timer bipbip
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   BCD_Init(0);
 181:Core/Src/main.c ****   play_track(SOUND_START_BOMB);
 182:Core/Src/main.c ****   /* USER CODE END 2 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* Infinite loop */
 185:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 186:Core/Src/main.c ****   // region[rgba(52, 73, 94, 0.1)]
 187:Core/Src/main.c ****   while (1)
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****     switch (etat)
 190:Core/Src/main.c ****     {
 191:Core/Src/main.c ****       // Initialisation
 192:Core/Src/main.c ****     case ETAT_INITIALISATION:
 193:Core/Src/main.c ****     {
 194:Core/Src/main.c ****       printf("ETAT_INITIALISATION\r\n");
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 39


 195:Core/Src/main.c ****       if (bombPlanted == true)
 196:Core/Src/main.c ****       {
 197:Core/Src/main.c ****         play_track(BOMB_HAS_BEEN_PLANTED);
 198:Core/Src/main.c ****         HAL_Delay(1500);          // Délai pour jouer le son de la bombe plantée
 199:Core/Src/main.c ****         BCD_Init(time_in_second); // Clignotement de l'afficheur et préparation à l'affichage
 200:Core/Src/main.c ****         randomButtonSequence();   // Générer une nouvelle séquence si nécessaire
 201:Core/Src/main.c ****         bombPlanted = false;
 202:Core/Src/main.c ****         etat = ETAT_JEU;
 203:Core/Src/main.c ****       }
 204:Core/Src/main.c ****       break;
 205:Core/Src/main.c ****     }
 206:Core/Src/main.c ****       // Jeu
 207:Core/Src/main.c ****     case ETAT_JEU:
 208:Core/Src/main.c ****     {
 209:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim10); // Timer décompteur
 210:Core/Src/main.c ****       if (etat == ETAT_JEU)
 211:Core/Src/main.c ****       {
 212:Core/Src/main.c ****         printf("ETAT_JEU\r\n");
 213:Core/Src/main.c ****         if (time_in_second == 0)
 214:Core/Src/main.c ****         {
 215:Core/Src/main.c ****           etat = ETAT_DEFAITE;
 216:Core/Src/main.c ****         }
 217:Core/Src/main.c ****         if (buttonOk)
 218:Core/Src/main.c ****         {
 219:Core/Src/main.c ****           HAL_GPIO_TogglePin(LED_5_GPIO_Port, LED_5_Pin);
 220:Core/Src/main.c ****           HAL_Delay(200);
 221:Core/Src/main.c ****           if (adcOk)
 222:Core/Src/main.c ****           {
 223:Core/Src/main.c ****             etat = ETAT_VICTOIRE;
 224:Core/Src/main.c ****           }
 225:Core/Src/main.c ****         }
 226:Core/Src/main.c ****         // Gestion fréquence des bip bip
 227:Core/Src/main.c ****         if (time_in_second > 15)  {freqence_bipbip = 200;}
 228:Core/Src/main.c ****         if (time_in_second <= 15) {freqence_bipbip = 100;}
 229:Core/Src/main.c ****         if (time_in_second <= 10) {freqence_bipbip = 50;}
 230:Core/Src/main.c ****         if (time_in_second <= 5)   {freqence_bipbip = 30;}
 231:Core/Src/main.c ****         if (flag_bipbip > freqence_bipbip)
 232:Core/Src/main.c ****         {
 233:Core/Src/main.c ****           play_track(BIP);
 234:Core/Src/main.c ****           flag_bipbip = 0;
 235:Core/Src/main.c ****         }
 236:Core/Src/main.c ****       }
 237:Core/Src/main.c ****       break;
 238:Core/Src/main.c ****     }
 239:Core/Src/main.c ****     // Victoire
 240:Core/Src/main.c ****     case ETAT_VICTOIRE:
 241:Core/Src/main.c ****     {
 242:Core/Src/main.c ****       if (etat == ETAT_VICTOIRE)
 243:Core/Src/main.c ****       {
 244:Core/Src/main.c ****         printf("ETAT_VICTOIRE\r\n");
 245:Core/Src/main.c ****         HAL_TIM_Base_Stop_IT(&htim10);
 246:Core/Src/main.c ****         play_track(BOMB_DEFUSED);
 247:Core/Src/main.c ****         etat = ETAT_INITIALISATION;
 248:Core/Src/main.c ****       }
 249:Core/Src/main.c ****       break;
 250:Core/Src/main.c ****     }
 251:Core/Src/main.c ****     // Défaite
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 40


 252:Core/Src/main.c ****     case ETAT_DEFAITE:
 253:Core/Src/main.c ****     {
 254:Core/Src/main.c ****       if (etat == ETAT_DEFAITE)
 255:Core/Src/main.c ****       {
 256:Core/Src/main.c ****         printf("ETAT_DEFAITE\r\n");
 257:Core/Src/main.c ****         HAL_TIM_Base_Stop_IT(&htim10);
 258:Core/Src/main.c ****         play_track(BOMB_EXPLODED);
 259:Core/Src/main.c ****         etat = ETAT_INITIALISATION;
 260:Core/Src/main.c ****       }
 261:Core/Src/main.c ****     }
 262:Core/Src/main.c ****     default:
 263:Core/Src/main.c ****       break;
 264:Core/Src/main.c ****     }
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c ****   // endregion
 267:Core/Src/main.c ****   /* USER CODE END WHILE */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE BEGIN 3 */
 270:Core/Src/main.c ****   /* USER CODE END 3 */
 271:Core/Src/main.c **** }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****  * @brief System Clock Configuration
 275:Core/Src/main.c ****  * @retval None
 276:Core/Src/main.c ****  */
 277:Core/Src/main.c **** void SystemClock_Config(void)
 278:Core/Src/main.c **** {
 279:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 280:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 283:Core/Src/main.c ****    */
 284:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 287:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 288:Core/Src/main.c ****    */
 289:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 290:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 291:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 292:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 293:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 294:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 295:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 296:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 297:Core/Src/main.c ****   {
 298:Core/Src/main.c ****     Error_Handler();
 299:Core/Src/main.c ****   }
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 302:Core/Src/main.c ****    */
 303:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 304:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 305:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 306:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 307:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 308:Core/Src/main.c **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 41


 309:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 310:Core/Src/main.c ****   {
 311:Core/Src/main.c ****     Error_Handler();
 312:Core/Src/main.c ****   }
 313:Core/Src/main.c **** }
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /**
 316:Core/Src/main.c ****  * @brief ADC Initialization Function
 317:Core/Src/main.c ****  * @param None
 318:Core/Src/main.c ****  * @retval None
 319:Core/Src/main.c ****  */
 320:Core/Src/main.c **** static void MX_ADC_Init(void)
 321:Core/Src/main.c **** {
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 334:Core/Src/main.c ****    */
 335:Core/Src/main.c ****   hadc.Instance = ADC1;
 336:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 337:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 338:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 339:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_ENABLE;
 340:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 341:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = ADC_AUTOWAIT_DISABLE;
 342:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = ADC_AUTOPOWEROFF_DISABLE;
 343:Core/Src/main.c ****   hadc.Init.ChannelsBank = ADC_CHANNELS_BANK_A;
 344:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 345:Core/Src/main.c ****   hadc.Init.NbrOfConversion = 2;
 346:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 347:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 348:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 349:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
 350:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 351:Core/Src/main.c ****   {
 352:Core/Src/main.c ****     Error_Handler();
 353:Core/Src/main.c ****   }
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 356:Core/Src/main.c ****    */
 357:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 358:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 359:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_4CYCLES;
 360:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 361:Core/Src/main.c ****   {
 362:Core/Src/main.c ****     Error_Handler();
 363:Core/Src/main.c ****   }
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 42


 366:Core/Src/main.c ****    */
 367:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 368:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 369:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 370:Core/Src/main.c ****   {
 371:Core/Src/main.c ****     Error_Handler();
 372:Core/Src/main.c ****   }
 373:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 376:Core/Src/main.c **** }
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** /**
 379:Core/Src/main.c ****  * @brief SPI1 Initialization Function
 380:Core/Src/main.c ****  * @param None
 381:Core/Src/main.c ****  * @retval None
 382:Core/Src/main.c ****  */
 383:Core/Src/main.c **** static void MX_SPI1_Init(void)
 384:Core/Src/main.c **** {
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 393:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 394:Core/Src/main.c ****   hspi1.Instance = SPI1;
 395:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 396:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 397:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 398:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 399:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 400:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 401:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 402:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 403:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 404:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 405:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 406:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 407:Core/Src/main.c ****   {
 408:Core/Src/main.c ****     Error_Handler();
 409:Core/Src/main.c ****   }
 410:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 413:Core/Src/main.c **** }
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** /**
 416:Core/Src/main.c ****  * @brief TIM2 Initialization Function
 417:Core/Src/main.c ****  * @param None
 418:Core/Src/main.c ****  * @retval None
 419:Core/Src/main.c ****  */
 420:Core/Src/main.c **** static void MX_TIM2_Init(void)
 421:Core/Src/main.c **** {
 422:Core/Src/main.c **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 43


 423:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 428:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 433:Core/Src/main.c ****   htim2.Instance = TIM2;
 434:Core/Src/main.c ****   htim2.Init.Prescaler = 3199;
 435:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 436:Core/Src/main.c ****   htim2.Init.Period = 49;
 437:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 438:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 439:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 440:Core/Src/main.c ****   {
 441:Core/Src/main.c ****     Error_Handler();
 442:Core/Src/main.c ****   }
 443:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 444:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 445:Core/Src/main.c ****   {
 446:Core/Src/main.c ****     Error_Handler();
 447:Core/Src/main.c ****   }
 448:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 449:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 450:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 451:Core/Src/main.c ****   {
 452:Core/Src/main.c ****     Error_Handler();
 453:Core/Src/main.c ****   }
 454:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 457:Core/Src/main.c **** }
 458:Core/Src/main.c **** 
 459:Core/Src/main.c **** /**
 460:Core/Src/main.c ****  * @brief TIM3 Initialization Function
 461:Core/Src/main.c ****  * @param None
 462:Core/Src/main.c ****  * @retval None
 463:Core/Src/main.c ****  */
 464:Core/Src/main.c **** static void MX_TIM3_Init(void)
 465:Core/Src/main.c **** {
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 472:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 477:Core/Src/main.c ****   htim3.Instance = TIM3;
 478:Core/Src/main.c ****   htim3.Init.Prescaler = 499;
 479:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 44


 480:Core/Src/main.c ****   htim3.Init.Period = 15999;
 481:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 482:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 483:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 484:Core/Src/main.c ****   {
 485:Core/Src/main.c ****     Error_Handler();
 486:Core/Src/main.c ****   }
 487:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 488:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 489:Core/Src/main.c ****   {
 490:Core/Src/main.c ****     Error_Handler();
 491:Core/Src/main.c ****   }
 492:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 493:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 494:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 495:Core/Src/main.c ****   {
 496:Core/Src/main.c ****     Error_Handler();
 497:Core/Src/main.c ****   }
 498:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 501:Core/Src/main.c **** }
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** /**
 504:Core/Src/main.c ****  * @brief TIM9 Initialization Function
 505:Core/Src/main.c ****  * @param None
 506:Core/Src/main.c ****  * @retval None
 507:Core/Src/main.c ****  */
 508:Core/Src/main.c **** static void MX_TIM9_Init(void)
 509:Core/Src/main.c **** {
 510:Core/Src/main.c **** 
 511:Core/Src/main.c ****   /* USER CODE BEGIN TIM9_Init 0 */
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****   /* USER CODE END TIM9_Init 0 */
 514:Core/Src/main.c **** 
 515:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 516:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE BEGIN TIM9_Init 1 */
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /* USER CODE END TIM9_Init 1 */
 521:Core/Src/main.c ****   htim9.Instance = TIM9;
 522:Core/Src/main.c ****   htim9.Init.Prescaler = 0;
 523:Core/Src/main.c ****   htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 524:Core/Src/main.c ****   htim9.Init.Period = 65535;
 525:Core/Src/main.c ****   htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 526:Core/Src/main.c ****   htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 527:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 528:Core/Src/main.c ****   {
 529:Core/Src/main.c ****     Error_Handler();
 530:Core/Src/main.c ****   }
 531:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 532:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 533:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim9, &sMasterConfig) != HAL_OK)
 534:Core/Src/main.c ****   {
 535:Core/Src/main.c ****     Error_Handler();
 536:Core/Src/main.c ****   }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 45


 537:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 538:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 539:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 540:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 541:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 542:Core/Src/main.c ****   {
 543:Core/Src/main.c ****     Error_Handler();
 544:Core/Src/main.c ****   }
 545:Core/Src/main.c ****   /* USER CODE BEGIN TIM9_Init 2 */
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****   /* USER CODE END TIM9_Init 2 */
 548:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim9);
 549:Core/Src/main.c **** }
 550:Core/Src/main.c **** 
 551:Core/Src/main.c **** /**
 552:Core/Src/main.c ****  * @brief TIM10 Initialization Function
 553:Core/Src/main.c ****  * @param None
 554:Core/Src/main.c ****  * @retval None
 555:Core/Src/main.c ****  */
 556:Core/Src/main.c **** static void MX_TIM10_Init(void)
 557:Core/Src/main.c **** {
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 0 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /* USER CODE END TIM10_Init 0 */
 562:Core/Src/main.c **** 
 563:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 1 */
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /* USER CODE END TIM10_Init 1 */
 568:Core/Src/main.c ****   htim10.Instance = TIM10;
 569:Core/Src/main.c ****   htim10.Init.Prescaler = 999;
 570:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 571:Core/Src/main.c ****   htim10.Init.Period = 31999;
 572:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 573:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 574:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 575:Core/Src/main.c ****   {
 576:Core/Src/main.c ****     Error_Handler();
 577:Core/Src/main.c ****   }
 578:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 579:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim10, &sClockSourceConfig) != HAL_OK)
 580:Core/Src/main.c ****   {
 581:Core/Src/main.c ****     Error_Handler();
 582:Core/Src/main.c ****   }
 583:Core/Src/main.c ****   /* USER CODE BEGIN TIM10_Init 2 */
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /* USER CODE END TIM10_Init 2 */
 586:Core/Src/main.c **** }
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** /**
 589:Core/Src/main.c ****  * @brief TIM11 Initialization Function
 590:Core/Src/main.c ****  * @param None
 591:Core/Src/main.c ****  * @retval None
 592:Core/Src/main.c ****  */
 593:Core/Src/main.c **** static void MX_TIM11_Init(void)
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 46


 594:Core/Src/main.c **** {
 595:Core/Src/main.c **** 
 596:Core/Src/main.c ****   /* USER CODE BEGIN TIM11_Init 0 */
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /* USER CODE END TIM11_Init 0 */
 599:Core/Src/main.c **** 
 600:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****   /* USER CODE BEGIN TIM11_Init 1 */
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****   /* USER CODE END TIM11_Init 1 */
 605:Core/Src/main.c ****   htim11.Instance = TIM11;
 606:Core/Src/main.c ****   htim11.Init.Prescaler = 0;
 607:Core/Src/main.c ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 608:Core/Src/main.c ****   htim11.Init.Period = 65535;
 609:Core/Src/main.c ****   htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 610:Core/Src/main.c ****   htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 611:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim11) != HAL_OK)
 612:Core/Src/main.c ****   {
 613:Core/Src/main.c ****     Error_Handler();
 614:Core/Src/main.c ****   }
 615:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 616:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 617:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 618:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 619:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 620:Core/Src/main.c ****   {
 621:Core/Src/main.c ****     Error_Handler();
 622:Core/Src/main.c ****   }
 623:Core/Src/main.c ****   /* USER CODE BEGIN TIM11_Init 2 */
 624:Core/Src/main.c **** 
 625:Core/Src/main.c ****   /* USER CODE END TIM11_Init 2 */
 626:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim11);
 627:Core/Src/main.c **** }
 628:Core/Src/main.c **** 
 629:Core/Src/main.c **** /**
 630:Core/Src/main.c ****  * @brief UART4 Initialization Function
 631:Core/Src/main.c ****  * @param None
 632:Core/Src/main.c ****  * @retval None
 633:Core/Src/main.c ****  */
 634:Core/Src/main.c **** static void MX_UART4_Init(void)
 635:Core/Src/main.c **** {
 636:Core/Src/main.c **** 
 637:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 638:Core/Src/main.c **** 
 639:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 640:Core/Src/main.c **** 
 641:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 644:Core/Src/main.c ****   huart4.Instance = UART4;
 645:Core/Src/main.c ****   huart4.Init.BaudRate = 9600;
 646:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 647:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 648:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 649:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 650:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 47


 651:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 652:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 653:Core/Src/main.c ****   {
 654:Core/Src/main.c ****     Error_Handler();
 655:Core/Src/main.c ****   }
 656:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 657:Core/Src/main.c **** 
 658:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 659:Core/Src/main.c **** }
 660:Core/Src/main.c **** 
 661:Core/Src/main.c **** /**
 662:Core/Src/main.c ****  * @brief USART2 Initialization Function
 663:Core/Src/main.c ****  * @param None
 664:Core/Src/main.c ****  * @retval None
 665:Core/Src/main.c ****  */
 666:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 667:Core/Src/main.c **** {
 668:Core/Src/main.c **** 
 669:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 670:Core/Src/main.c **** 
 671:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 672:Core/Src/main.c **** 
 673:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 676:Core/Src/main.c ****   huart2.Instance = USART2;
 677:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 678:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 679:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 680:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 681:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 682:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 683:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 684:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 685:Core/Src/main.c ****   {
 686:Core/Src/main.c ****     Error_Handler();
 687:Core/Src/main.c ****   }
 688:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 691:Core/Src/main.c **** }
 692:Core/Src/main.c **** 
 693:Core/Src/main.c **** /**
 694:Core/Src/main.c ****  * Enable DMA controller clock
 695:Core/Src/main.c ****  */
 696:Core/Src/main.c **** static void MX_DMA_Init(void)
 697:Core/Src/main.c **** {
 698:Core/Src/main.c **** 
 699:Core/Src/main.c ****   /* DMA controller clock enable */
 700:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 701:Core/Src/main.c **** 
 702:Core/Src/main.c ****   /* DMA interrupt init */
 703:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 704:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 705:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 706:Core/Src/main.c **** }
 707:Core/Src/main.c **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 48


 708:Core/Src/main.c **** /**
 709:Core/Src/main.c ****  * @brief GPIO Initialization Function
 710:Core/Src/main.c ****  * @param None
 711:Core/Src/main.c ****  * @retval None
 712:Core/Src/main.c ****  */
 713:Core/Src/main.c **** static void MX_GPIO_Init(void)
 714:Core/Src/main.c **** {
  84              		.loc 1 714 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 40
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  89              	.LCFI0:
  90              		.cfi_def_cfa_offset 24
  91              		.cfi_offset 4, -24
  92              		.cfi_offset 5, -20
  93              		.cfi_offset 6, -16
  94              		.cfi_offset 7, -12
  95              		.cfi_offset 8, -8
  96              		.cfi_offset 14, -4
  97 0004 8AB0     		sub	sp, sp, #40
  98              	.LCFI1:
  99              		.cfi_def_cfa_offset 64
 715:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 100              		.loc 1 715 3 view .LVU16
 101              		.loc 1 715 20 is_stmt 0 view .LVU17
 102 0006 0024     		movs	r4, #0
 103 0008 0594     		str	r4, [sp, #20]
 104 000a 0694     		str	r4, [sp, #24]
 105 000c 0794     		str	r4, [sp, #28]
 106 000e 0894     		str	r4, [sp, #32]
 107 0010 0994     		str	r4, [sp, #36]
 716:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 717:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 718:Core/Src/main.c **** 
 719:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 720:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 108              		.loc 1 720 3 is_stmt 1 view .LVU18
 109              	.LBB4:
 110              		.loc 1 720 3 view .LVU19
 111              		.loc 1 720 3 view .LVU20
 112 0012 374B     		ldr	r3, .L7
 113 0014 DA69     		ldr	r2, [r3, #28]
 114 0016 42F00402 		orr	r2, r2, #4
 115 001a DA61     		str	r2, [r3, #28]
 116              		.loc 1 720 3 view .LVU21
 117 001c DA69     		ldr	r2, [r3, #28]
 118 001e 02F00402 		and	r2, r2, #4
 119 0022 0192     		str	r2, [sp, #4]
 120              		.loc 1 720 3 view .LVU22
 121 0024 019A     		ldr	r2, [sp, #4]
 122              	.LBE4:
 123              		.loc 1 720 3 view .LVU23
 721:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 124              		.loc 1 721 3 view .LVU24
 125              	.LBB5:
 126              		.loc 1 721 3 view .LVU25
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 49


 127              		.loc 1 721 3 view .LVU26
 128 0026 DA69     		ldr	r2, [r3, #28]
 129 0028 42F02002 		orr	r2, r2, #32
 130 002c DA61     		str	r2, [r3, #28]
 131              		.loc 1 721 3 view .LVU27
 132 002e DA69     		ldr	r2, [r3, #28]
 133 0030 02F02002 		and	r2, r2, #32
 134 0034 0292     		str	r2, [sp, #8]
 135              		.loc 1 721 3 view .LVU28
 136 0036 029A     		ldr	r2, [sp, #8]
 137              	.LBE5:
 138              		.loc 1 721 3 view .LVU29
 722:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 139              		.loc 1 722 3 view .LVU30
 140              	.LBB6:
 141              		.loc 1 722 3 view .LVU31
 142              		.loc 1 722 3 view .LVU32
 143 0038 DA69     		ldr	r2, [r3, #28]
 144 003a 42F00102 		orr	r2, r2, #1
 145 003e DA61     		str	r2, [r3, #28]
 146              		.loc 1 722 3 view .LVU33
 147 0040 DA69     		ldr	r2, [r3, #28]
 148 0042 02F00102 		and	r2, r2, #1
 149 0046 0392     		str	r2, [sp, #12]
 150              		.loc 1 722 3 view .LVU34
 151 0048 039A     		ldr	r2, [sp, #12]
 152              	.LBE6:
 153              		.loc 1 722 3 view .LVU35
 723:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 154              		.loc 1 723 3 view .LVU36
 155              	.LBB7:
 156              		.loc 1 723 3 view .LVU37
 157              		.loc 1 723 3 view .LVU38
 158 004a DA69     		ldr	r2, [r3, #28]
 159 004c 42F00202 		orr	r2, r2, #2
 160 0050 DA61     		str	r2, [r3, #28]
 161              		.loc 1 723 3 view .LVU39
 162 0052 DB69     		ldr	r3, [r3, #28]
 163 0054 03F00203 		and	r3, r3, #2
 164 0058 0493     		str	r3, [sp, #16]
 165              		.loc 1 723 3 view .LVU40
 166 005a 049B     		ldr	r3, [sp, #16]
 167              	.LBE7:
 168              		.loc 1 723 3 view .LVU41
 724:Core/Src/main.c **** 
 725:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 726:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_RESET);
 169              		.loc 1 726 3 view .LVU42
 170 005c DFF89480 		ldr	r8, .L7+4
 171 0060 2246     		mov	r2, r4
 172 0062 4FF40051 		mov	r1, #8192
 173 0066 4046     		mov	r0, r8
 174 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL1:
 727:Core/Src/main.c **** 
 728:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 729:Core/Src/main.c ****   HAL_GPIO_WritePin(SPI1_NSS_GPIO_Port, SPI1_NSS_Pin, GPIO_PIN_RESET);
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 50


 176              		.loc 1 729 3 view .LVU43
 177 006c 224D     		ldr	r5, .L7+8
 178 006e 2246     		mov	r2, r4
 179 0070 4FF48071 		mov	r1, #256
 180 0074 2846     		mov	r0, r5
 181 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 182              	.LVL2:
 730:Core/Src/main.c **** 
 731:Core/Src/main.c ****   /*Configure GPIO pins : BTN_4_Pin BTN_3_Pin */
 732:Core/Src/main.c ****   GPIO_InitStruct.Pin = BTN_4_Pin | BTN_3_Pin;
 183              		.loc 1 732 3 view .LVU44
 184              		.loc 1 732 23 is_stmt 0 view .LVU45
 185 007a 6023     		movs	r3, #96
 186 007c 0593     		str	r3, [sp, #20]
 733:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 187              		.loc 1 733 3 is_stmt 1 view .LVU46
 188              		.loc 1 733 24 is_stmt 0 view .LVU47
 189 007e 4FF48816 		mov	r6, #1114112
 190 0082 0696     		str	r6, [sp, #24]
 734:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 191              		.loc 1 734 3 is_stmt 1 view .LVU48
 192              		.loc 1 734 24 is_stmt 0 view .LVU49
 193 0084 0794     		str	r4, [sp, #28]
 735:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 194              		.loc 1 735 3 is_stmt 1 view .LVU50
 195 0086 05A9     		add	r1, sp, #20
 196 0088 1C48     		ldr	r0, .L7+12
 197 008a FFF7FEFF 		bl	HAL_GPIO_Init
 198              	.LVL3:
 736:Core/Src/main.c **** 
 737:Core/Src/main.c ****   /*Configure GPIO pin : LED_5_Pin */
 738:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_5_Pin;
 199              		.loc 1 738 3 view .LVU51
 200              		.loc 1 738 23 is_stmt 0 view .LVU52
 201 008e 4FF40053 		mov	r3, #8192
 202 0092 0593     		str	r3, [sp, #20]
 739:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 203              		.loc 1 739 3 is_stmt 1 view .LVU53
 204              		.loc 1 739 24 is_stmt 0 view .LVU54
 205 0094 0127     		movs	r7, #1
 206 0096 0697     		str	r7, [sp, #24]
 740:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 207              		.loc 1 740 3 is_stmt 1 view .LVU55
 208              		.loc 1 740 24 is_stmt 0 view .LVU56
 209 0098 0794     		str	r4, [sp, #28]
 741:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 210              		.loc 1 741 3 is_stmt 1 view .LVU57
 211              		.loc 1 741 25 is_stmt 0 view .LVU58
 212 009a 0894     		str	r4, [sp, #32]
 742:Core/Src/main.c ****   HAL_GPIO_Init(LED_5_GPIO_Port, &GPIO_InitStruct);
 213              		.loc 1 742 3 is_stmt 1 view .LVU59
 214 009c 05A9     		add	r1, sp, #20
 215 009e 4046     		mov	r0, r8
 216 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 217              	.LVL4:
 743:Core/Src/main.c **** 
 744:Core/Src/main.c ****   /*Configure GPIO pin : SPI1_NSS_Pin */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 51


 745:Core/Src/main.c ****   GPIO_InitStruct.Pin = SPI1_NSS_Pin;
 218              		.loc 1 745 3 view .LVU60
 219              		.loc 1 745 23 is_stmt 0 view .LVU61
 220 00a4 4FF48073 		mov	r3, #256
 221 00a8 0593     		str	r3, [sp, #20]
 746:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 222              		.loc 1 746 3 is_stmt 1 view .LVU62
 223              		.loc 1 746 24 is_stmt 0 view .LVU63
 224 00aa 0697     		str	r7, [sp, #24]
 747:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 225              		.loc 1 747 3 is_stmt 1 view .LVU64
 226              		.loc 1 747 24 is_stmt 0 view .LVU65
 227 00ac 0794     		str	r4, [sp, #28]
 748:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 228              		.loc 1 748 3 is_stmt 1 view .LVU66
 229              		.loc 1 748 25 is_stmt 0 view .LVU67
 230 00ae 0894     		str	r4, [sp, #32]
 749:Core/Src/main.c ****   HAL_GPIO_Init(SPI1_NSS_GPIO_Port, &GPIO_InitStruct);
 231              		.loc 1 749 3 is_stmt 1 view .LVU68
 232 00b0 05A9     		add	r1, sp, #20
 233 00b2 2846     		mov	r0, r5
 234 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 235              	.LVL5:
 750:Core/Src/main.c **** 
 751:Core/Src/main.c ****   /*Configure GPIO pins : BTN_1_Pin BTN_2_Pin */
 752:Core/Src/main.c ****   GPIO_InitStruct.Pin = BTN_1_Pin | BTN_2_Pin;
 236              		.loc 1 752 3 view .LVU69
 237              		.loc 1 752 23 is_stmt 0 view .LVU70
 238 00b8 4FF4C053 		mov	r3, #6144
 239 00bc 0593     		str	r3, [sp, #20]
 753:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 240              		.loc 1 753 3 is_stmt 1 view .LVU71
 241              		.loc 1 753 24 is_stmt 0 view .LVU72
 242 00be 0696     		str	r6, [sp, #24]
 754:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 243              		.loc 1 754 3 is_stmt 1 view .LVU73
 244              		.loc 1 754 24 is_stmt 0 view .LVU74
 245 00c0 0794     		str	r4, [sp, #28]
 755:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 246              		.loc 1 755 3 is_stmt 1 view .LVU75
 247 00c2 05A9     		add	r1, sp, #20
 248 00c4 2846     		mov	r0, r5
 249 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 250              	.LVL6:
 756:Core/Src/main.c **** 
 757:Core/Src/main.c ****   /* EXTI interrupt init*/
 758:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 251              		.loc 1 758 3 view .LVU76
 252 00ca 2246     		mov	r2, r4
 253 00cc 2146     		mov	r1, r4
 254 00ce 1720     		movs	r0, #23
 255 00d0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 256              	.LVL7:
 759:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 257              		.loc 1 759 3 view .LVU77
 258 00d4 1720     		movs	r0, #23
 259 00d6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 52


 260              	.LVL8:
 760:Core/Src/main.c **** 
 761:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 261              		.loc 1 761 3 view .LVU78
 262 00da 2246     		mov	r2, r4
 263 00dc 2146     		mov	r1, r4
 264 00de 2820     		movs	r0, #40
 265 00e0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 266              	.LVL9:
 762:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 267              		.loc 1 762 3 view .LVU79
 268 00e4 2820     		movs	r0, #40
 269 00e6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 270              	.LVL10:
 763:Core/Src/main.c **** 
 764:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 765:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 766:Core/Src/main.c **** }
 271              		.loc 1 766 1 is_stmt 0 view .LVU80
 272 00ea 0AB0     		add	sp, sp, #40
 273              	.LCFI2:
 274              		.cfi_def_cfa_offset 24
 275              		@ sp needed
 276 00ec BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 277              	.L8:
 278              		.align	2
 279              	.L7:
 280 00f0 00380240 		.word	1073887232
 281 00f4 00040240 		.word	1073873920
 282 00f8 00000240 		.word	1073872896
 283 00fc 00080240 		.word	1073874944
 284              		.cfi_endproc
 285              	.LFE87:
 287              		.section	.text.MX_DMA_Init,"ax",%progbits
 288              		.align	1
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 293              	MX_DMA_Init:
 294              	.LFB86:
 697:Core/Src/main.c **** 
 295              		.loc 1 697 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 8
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299 0000 00B5     		push	{lr}
 300              	.LCFI3:
 301              		.cfi_def_cfa_offset 4
 302              		.cfi_offset 14, -4
 303 0002 83B0     		sub	sp, sp, #12
 304              	.LCFI4:
 305              		.cfi_def_cfa_offset 16
 700:Core/Src/main.c **** 
 306              		.loc 1 700 3 view .LVU82
 307              	.LBB8:
 700:Core/Src/main.c **** 
 308              		.loc 1 700 3 view .LVU83
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 53


 700:Core/Src/main.c **** 
 309              		.loc 1 700 3 view .LVU84
 310 0004 0A4B     		ldr	r3, .L11
 311 0006 DA69     		ldr	r2, [r3, #28]
 312 0008 42F08072 		orr	r2, r2, #16777216
 313 000c DA61     		str	r2, [r3, #28]
 700:Core/Src/main.c **** 
 314              		.loc 1 700 3 view .LVU85
 315 000e DB69     		ldr	r3, [r3, #28]
 316 0010 03F08073 		and	r3, r3, #16777216
 317 0014 0193     		str	r3, [sp, #4]
 700:Core/Src/main.c **** 
 318              		.loc 1 700 3 view .LVU86
 319 0016 019B     		ldr	r3, [sp, #4]
 320              	.LBE8:
 700:Core/Src/main.c **** 
 321              		.loc 1 700 3 view .LVU87
 704:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 322              		.loc 1 704 3 view .LVU88
 323 0018 0022     		movs	r2, #0
 324 001a 1146     		mov	r1, r2
 325 001c 0B20     		movs	r0, #11
 326 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 327              	.LVL11:
 705:Core/Src/main.c **** }
 328              		.loc 1 705 3 view .LVU89
 329 0022 0B20     		movs	r0, #11
 330 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 331              	.LVL12:
 706:Core/Src/main.c **** 
 332              		.loc 1 706 1 is_stmt 0 view .LVU90
 333 0028 03B0     		add	sp, sp, #12
 334              	.LCFI5:
 335              		.cfi_def_cfa_offset 4
 336              		@ sp needed
 337 002a 5DF804FB 		ldr	pc, [sp], #4
 338              	.L12:
 339 002e 00BF     		.align	2
 340              	.L11:
 341 0030 00380240 		.word	1073887232
 342              		.cfi_endproc
 343              	.LFE86:
 345              		.section	.text.__io_putchar,"ax",%progbits
 346              		.align	1
 347              		.global	__io_putchar
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	__io_putchar:
 353              	.LVL13:
 354              	.LFB88:
 767:Core/Src/main.c **** 
 768:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 769:Core/Src/main.c **** int __io_putchar(int ch)
 770:Core/Src/main.c **** {
 355              		.loc 1 770 1 is_stmt 1 view -0
 356              		.cfi_startproc
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 54


 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		.loc 1 770 1 is_stmt 0 view .LVU92
 360 0000 10B5     		push	{r4, lr}
 361              	.LCFI6:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 365 0002 0446     		mov	r4, r0
 771:Core/Src/main.c ****   ITM_SendChar(ch);
 366              		.loc 1 771 3 is_stmt 1 view .LVU93
 367 0004 FFF7FEFF 		bl	ITM_SendChar
 368              	.LVL14:
 772:Core/Src/main.c ****   return ch;
 369              		.loc 1 772 3 view .LVU94
 773:Core/Src/main.c **** }
 370              		.loc 1 773 1 is_stmt 0 view .LVU95
 371 0008 2046     		mov	r0, r4
 372 000a 10BD     		pop	{r4, pc}
 373              		.loc 1 773 1 view .LVU96
 374              		.cfi_endproc
 375              	.LFE88:
 377              		.section	.text.randomGLC,"ax",%progbits
 378              		.align	1
 379              		.global	randomGLC
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 384              	randomGLC:
 385              	.LFB89:
 774:Core/Src/main.c **** 
 775:Core/Src/main.c **** // Fonction random
 776:Core/Src/main.c **** // region[rgba(49, 120, 80, 0.12)]
 777:Core/Src/main.c **** // Générateur linéaire congruentiel aléatoire
 778:Core/Src/main.c **** void randomGLC()
 779:Core/Src/main.c **** {
 386              		.loc 1 779 1 is_stmt 1 view -0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 780:Core/Src/main.c ****   const uint32_t a = 1664525;
 391              		.loc 1 780 3 view .LVU98
 392              	.LVL15:
 781:Core/Src/main.c ****   const uint32_t c = 1013904223;
 393              		.loc 1 781 3 view .LVU99
 782:Core/Src/main.c ****   const uint32_t m = 0xFFFF;
 394              		.loc 1 782 3 view .LVU100
 783:Core/Src/main.c **** 
 784:Core/Src/main.c ****   seed = (a * (seed) + c) % m;
 395              		.loc 1 784 3 view .LVU101
 396              		.loc 1 784 13 is_stmt 0 view .LVU102
 397 0000 0749     		ldr	r1, .L16
 398 0002 0B68     		ldr	r3, [r1]
 399              		.loc 1 784 22 view .LVU103
 400 0004 0748     		ldr	r0, .L16+4
 401 0006 084A     		ldr	r2, .L16+8
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 55


 402 0008 00FB0322 		mla	r2, r0, r3, r2
 403              		.loc 1 784 27 view .LVU104
 404 000c 074B     		ldr	r3, .L16+12
 405 000e A3FB0203 		umull	r0, r3, r3, r2
 406 0012 DB0B     		lsrs	r3, r3, #15
 407 0014 C3EB0343 		rsb	r3, r3, r3, lsl #16
 408 0018 D31A     		subs	r3, r2, r3
 409              		.loc 1 784 8 view .LVU105
 410 001a 0B60     		str	r3, [r1]
 785:Core/Src/main.c **** }
 411              		.loc 1 785 1 view .LVU106
 412 001c 7047     		bx	lr
 413              	.L17:
 414 001e 00BF     		.align	2
 415              	.L16:
 416 0020 00000000 		.word	seed
 417 0024 0D661900 		.word	1664525
 418 0028 5FF36E3C 		.word	1013904223
 419 002c 01800080 		.word	-2147450879
 420              		.cfi_endproc
 421              	.LFE89:
 423              		.section	.text.randomButtonSequence,"ax",%progbits
 424              		.align	1
 425              		.global	randomButtonSequence
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 430              	randomButtonSequence:
 431              	.LFB90:
 786:Core/Src/main.c **** 
 787:Core/Src/main.c **** /**
 788:Core/Src/main.c ****  * Mélange les valeurs de buttonOrderDefuse
 789:Core/Src/main.c ****  */
 790:Core/Src/main.c **** void randomButtonSequence()
 791:Core/Src/main.c **** {
 432              		.loc 1 791 1 is_stmt 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 8
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437 0000 82B0     		sub	sp, sp, #8
 438              	.LCFI7:
 439              		.cfi_def_cfa_offset 8
 792:Core/Src/main.c ****   uint8_t numbers[] = {1, 2, 3, 4};
 440              		.loc 1 792 3 view .LVU108
 441              		.loc 1 792 11 is_stmt 0 view .LVU109
 442 0002 144B     		ldr	r3, .L24
 443 0004 0193     		str	r3, [sp, #4]
 793:Core/Src/main.c **** 
 794:Core/Src/main.c ****   for (uint8_t i = 1; i < 4; i++)
 444              		.loc 1 794 3 is_stmt 1 view .LVU110
 445              	.LBB9:
 446              		.loc 1 794 8 view .LVU111
 447              	.LVL16:
 448              		.loc 1 794 16 is_stmt 0 view .LVU112
 449 0006 0122     		movs	r2, #1
 450              		.loc 1 794 3 view .LVU113
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 56


 451 0008 13E0     		b	.L19
 452              	.LVL17:
 453              	.L20:
 454              	.LBB10:
 795:Core/Src/main.c ****   {
 796:Core/Src/main.c ****     int j = (seed % (i + 1));
 455              		.loc 1 796 5 is_stmt 1 view .LVU114
 456              		.loc 1 796 24 is_stmt 0 view .LVU115
 457 000a 511C     		adds	r1, r2, #1
 458              		.loc 1 796 19 view .LVU116
 459 000c 124B     		ldr	r3, .L24+4
 460 000e 1B68     		ldr	r3, [r3]
 461 0010 B3FBF1F0 		udiv	r0, r3, r1
 462 0014 01FB1033 		mls	r3, r1, r0, r3
 463              	.LVL18:
 797:Core/Src/main.c ****     uint8_t temp = numbers[i];
 464              		.loc 1 797 5 is_stmt 1 view .LVU117
 465              		.loc 1 797 13 is_stmt 0 view .LVU118
 466 0018 0832     		adds	r2, r2, #8
 467              	.LVL19:
 468              		.loc 1 797 13 view .LVU119
 469 001a 6A44     		add	r2, sp, r2
 470              	.LVL20:
 471              		.loc 1 797 13 view .LVU120
 472 001c 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 473              	.LVL21:
 798:Core/Src/main.c ****     numbers[i] = numbers[j];
 474              		.loc 1 798 5 is_stmt 1 view .LVU121
 475              		.loc 1 798 25 is_stmt 0 view .LVU122
 476 0020 0833     		adds	r3, r3, #8
 477              	.LVL22:
 478              		.loc 1 798 25 view .LVU123
 479 0022 6B44     		add	r3, sp, r3
 480              	.LVL23:
 481              		.loc 1 798 25 view .LVU124
 482 0024 13F804CC 		ldrb	ip, [r3, #-4]	@ zero_extendqisi2
 483              		.loc 1 798 16 view .LVU125
 484 0028 02F804CC 		strb	ip, [r2, #-4]
 799:Core/Src/main.c ****     numbers[j] = temp;
 485              		.loc 1 799 5 is_stmt 1 view .LVU126
 486              		.loc 1 799 16 is_stmt 0 view .LVU127
 487 002c 03F8040C 		strb	r0, [r3, #-4]
 488              	.LBE10:
 794:Core/Src/main.c ****   {
 489              		.loc 1 794 31 is_stmt 1 discriminator 3 view .LVU128
 490 0030 CAB2     		uxtb	r2, r1
 491              	.LVL24:
 492              	.L19:
 794:Core/Src/main.c ****   {
 493              		.loc 1 794 25 discriminator 1 view .LVU129
 494 0032 032A     		cmp	r2, #3
 495 0034 E9D9     		bls	.L20
 496              	.LBE9:
 497              	.LBB11:
 800:Core/Src/main.c ****   }
 801:Core/Src/main.c **** 
 802:Core/Src/main.c ****   // Copiez les valeurs mélangées dans buttonOrderDefuse
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 57


 803:Core/Src/main.c ****   for (uint8_t i = 0; i < 4; i++)
 498              		.loc 1 803 16 is_stmt 0 view .LVU130
 499 0036 0023     		movs	r3, #0
 500 0038 08E0     		b	.L21
 501              	.LVL25:
 502              	.L22:
 804:Core/Src/main.c ****   {
 805:Core/Src/main.c ****     buttonOrderDefuse[i] = numbers[i];
 503              		.loc 1 805 5 is_stmt 1 view .LVU131
 504              		.loc 1 805 35 is_stmt 0 view .LVU132
 505 003a 03F10802 		add	r2, r3, #8
 506 003e 6A44     		add	r2, sp, r2
 507 0040 12F8041C 		ldrb	r1, [r2, #-4]	@ zero_extendqisi2
 508              		.loc 1 805 26 view .LVU133
 509 0044 054A     		ldr	r2, .L24+8
 510 0046 D154     		strb	r1, [r2, r3]
 803:Core/Src/main.c ****   {
 511              		.loc 1 803 31 is_stmt 1 discriminator 3 view .LVU134
 512 0048 0133     		adds	r3, r3, #1
 513              	.LVL26:
 803:Core/Src/main.c ****   {
 514              		.loc 1 803 31 is_stmt 0 discriminator 3 view .LVU135
 515 004a DBB2     		uxtb	r3, r3
 516              	.LVL27:
 517              	.L21:
 803:Core/Src/main.c ****   {
 518              		.loc 1 803 25 is_stmt 1 discriminator 1 view .LVU136
 519 004c 032B     		cmp	r3, #3
 520 004e F4D9     		bls	.L22
 521              	.LBE11:
 806:Core/Src/main.c ****   }
 807:Core/Src/main.c **** }
 522              		.loc 1 807 1 is_stmt 0 view .LVU137
 523 0050 02B0     		add	sp, sp, #8
 524              	.LCFI8:
 525              		.cfi_def_cfa_offset 0
 526              		@ sp needed
 527 0052 7047     		bx	lr
 528              	.L25:
 529              		.align	2
 530              	.L24:
 531 0054 01020304 		.word	67305985
 532 0058 00000000 		.word	seed
 533 005c 00000000 		.word	buttonOrderDefuse
 534              		.cfi_endproc
 535              	.LFE90:
 537              		.global	__aeabi_ui2d
 538              		.global	__aeabi_ddiv
 539              		.global	__aeabi_dmul
 540              		.global	__aeabi_d2uiz
 541              		.section	.text.ledUpdate,"ax",%progbits
 542              		.align	1
 543              		.global	ledUpdate
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 548              	ledUpdate:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 58


 549              	.LVL28:
 550              	.LFB91:
 808:Core/Src/main.c **** // endregion
 809:Core/Src/main.c **** 
 810:Core/Src/main.c **** // Gestion de l'ADC
 811:Core/Src/main.c **** // region[rgba(90, 130, 0, 0.1)]
 812:Core/Src/main.c **** void ledUpdate(uint16_t data, TIM_HandleTypeDef *Timer, uint32_t Channel)
 813:Core/Src/main.c **** {
 551              		.loc 1 813 1 is_stmt 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		.loc 1 813 1 is_stmt 0 view .LVU139
 556 0000 38B5     		push	{r3, r4, r5, lr}
 557              	.LCFI9:
 558              		.cfi_def_cfa_offset 16
 559              		.cfi_offset 3, -16
 560              		.cfi_offset 4, -12
 561              		.cfi_offset 5, -8
 562              		.cfi_offset 14, -4
 563 0002 0D46     		mov	r5, r1
 564 0004 1446     		mov	r4, r2
 814:Core/Src/main.c ****   // normaliser la valeur de l'ADC pour qu'elle varie de 0.0 à 1.0
 815:Core/Src/main.c ****   double dataNorm = (double)data / 0xFFF;
 565              		.loc 1 815 3 is_stmt 1 view .LVU140
 566              		.loc 1 815 21 is_stmt 0 view .LVU141
 567 0006 FFF7FEFF 		bl	__aeabi_ui2d
 568              	.LVL29:
 569              		.loc 1 815 10 view .LVU142
 570 000a 15A3     		adr	r3, .L34
 571 000c D3E90023 		ldrd	r2, [r3]
 572 0010 FFF7FEFF 		bl	__aeabi_ddiv
 573              	.LVL30:
 816:Core/Src/main.c **** 
 817:Core/Src/main.c ****   double radian_part = 2 * PI * dataNorm;
 574              		.loc 1 817 3 is_stmt 1 view .LVU143
 575              		.loc 1 817 10 is_stmt 0 view .LVU144
 576 0014 0022     		movs	r2, #0
 577 0016 164B     		ldr	r3, .L34+16
 578 0018 FFF7FEFF 		bl	__aeabi_dmul
 579              	.LVL31:
 818:Core/Src/main.c **** 
 819:Core/Src/main.c ****   // Calculer la valeur de la sinusoïde, ajustée pour varier de 0 à 1
 820:Core/Src/main.c ****   double sinusValue = (sin(radian_part / 2));
 580              		.loc 1 820 3 is_stmt 1 view .LVU145
 581              		.loc 1 820 24 is_stmt 0 view .LVU146
 582 001c 0022     		movs	r2, #0
 583 001e 154B     		ldr	r3, .L34+20
 584 0020 FFF7FEFF 		bl	__aeabi_dmul
 585              	.LVL32:
 586              		.loc 1 820 24 view .LVU147
 587 0024 FFF7FEFF 		bl	sin
 588              	.LVL33:
 821:Core/Src/main.c **** 
 822:Core/Src/main.c ****   // Ajuster pour la plage PWM complète
 823:Core/Src/main.c ****   uint16_t pwmValue = 0xFFFF * sinusValue;
 589              		.loc 1 823 3 is_stmt 1 view .LVU148
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 59


 590              		.loc 1 823 30 is_stmt 0 view .LVU149
 591 0028 0FA3     		adr	r3, .L34+8
 592 002a D3E90023 		ldrd	r2, [r3]
 593 002e FFF7FEFF 		bl	__aeabi_dmul
 594              	.LVL34:
 595              		.loc 1 823 12 view .LVU150
 596 0032 FFF7FEFF 		bl	__aeabi_d2uiz
 597              	.LVL35:
 598 0036 80B2     		uxth	r0, r0
 599              	.LVL36:
 824:Core/Src/main.c **** 
 825:Core/Src/main.c ****   // Définir la valeur PWM
 826:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(Timer, Channel, pwmValue);
 600              		.loc 1 826 3 is_stmt 1 view .LVU151
 601 0038 14B9     		cbnz	r4, .L27
 602              		.loc 1 826 3 is_stmt 0 discriminator 1 view .LVU152
 603 003a 2B68     		ldr	r3, [r5]
 604 003c 5863     		str	r0, [r3, #52]
 605              	.L26:
 827:Core/Src/main.c **** }
 606              		.loc 1 827 1 view .LVU153
 607 003e 38BD     		pop	{r3, r4, r5, pc}
 608              	.LVL37:
 609              	.L27:
 826:Core/Src/main.c **** }
 610              		.loc 1 826 3 discriminator 2 view .LVU154
 611 0040 042C     		cmp	r4, #4
 612 0042 04D0     		beq	.L32
 826:Core/Src/main.c **** }
 613              		.loc 1 826 3 discriminator 4 view .LVU155
 614 0044 082C     		cmp	r4, #8
 615 0046 05D0     		beq	.L33
 826:Core/Src/main.c **** }
 616              		.loc 1 826 3 discriminator 7 view .LVU156
 617 0048 2B68     		ldr	r3, [r5]
 618 004a 1864     		str	r0, [r3, #64]
 619              		.loc 1 827 1 view .LVU157
 620 004c F7E7     		b	.L26
 621              	.L32:
 826:Core/Src/main.c **** }
 622              		.loc 1 826 3 discriminator 3 view .LVU158
 623 004e 2B68     		ldr	r3, [r5]
 624 0050 9863     		str	r0, [r3, #56]
 625 0052 F4E7     		b	.L26
 626              	.L33:
 826:Core/Src/main.c **** }
 627              		.loc 1 826 3 discriminator 6 view .LVU159
 628 0054 2B68     		ldr	r3, [r5]
 629 0056 D863     		str	r0, [r3, #60]
 630 0058 F1E7     		b	.L26
 631              	.L35:
 632 005a 00BFAFF3 		.align	3
 632      0080
 633              	.L34:
 634 0060 00000000 		.word	0
 635 0064 00FEAF40 		.word	1085275648
 636 0068 00000000 		.word	0
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 60


 637 006c E0FFEF40 		.word	1089470432
 638 0070 00001840 		.word	1075314688
 639 0074 0000E03F 		.word	1071644672
 640              		.cfi_endproc
 641              	.LFE91:
 643              		.section	.text.checkUserInput,"ax",%progbits
 644              		.align	1
 645              		.global	checkUserInput
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 650              	checkUserInput:
 651              	.LVL38:
 652              	.LFB92:
 828:Core/Src/main.c **** 
 829:Core/Src/main.c **** // endregion
 830:Core/Src/main.c **** 
 831:Core/Src/main.c **** // Gestion des boutons
 832:Core/Src/main.c **** // region[rgba(0, 0, 255, 0.1)]
 833:Core/Src/main.c **** 
 834:Core/Src/main.c **** // Vérifie si le bouton appuyé est dans la séquence de boutons pour désamorcer la bombe
 835:Core/Src/main.c **** void checkUserInput(uint8_t userInput)
 836:Core/Src/main.c **** {
 653              		.loc 1 836 1 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		.loc 1 836 1 is_stmt 0 view .LVU161
 658 0000 10B5     		push	{r4, lr}
 659              	.LCFI10:
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 4, -8
 662              		.cfi_offset 14, -4
 837:Core/Src/main.c ****   if (userInput == buttonOrderDefuse[buttonCurrentIndex]) // Vérifier si le bouton appuyé corresp
 663              		.loc 1 837 3 is_stmt 1 view .LVU162
 664              		.loc 1 837 37 is_stmt 0 view .LVU163
 665 0002 0F4B     		ldr	r3, .L41
 666 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 667 0006 0F4A     		ldr	r2, .L41+4
 668 0008 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 669              		.loc 1 837 6 view .LVU164
 670 000a 8242     		cmp	r2, r0
 671 000c 08D0     		beq	.L40
 838:Core/Src/main.c ****   {
 839:Core/Src/main.c ****     buttonCurrentIndex++;
 840:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_SET);
 841:Core/Src/main.c **** 
 842:Core/Src/main.c ****     if (buttonCurrentIndex == 4) // 4 itérations correctes = met le flag à true
 843:Core/Src/main.c ****     {
 844:Core/Src/main.c ****       buttonOk = true;
 845:Core/Src/main.c ****     }
 846:Core/Src/main.c ****   }
 847:Core/Src/main.c ****   else // reset le compteur si le bouton appuyé ne correspond pas
 848:Core/Src/main.c ****   {
 849:Core/Src/main.c ****     buttonCurrentIndex = 0;
 672              		.loc 1 849 5 is_stmt 1 view .LVU165
 673              		.loc 1 849 24 is_stmt 0 view .LVU166
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 61


 674 000e 0022     		movs	r2, #0
 675 0010 0B4B     		ldr	r3, .L41
 676 0012 1A70     		strb	r2, [r3]
 850:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_RESET);
 677              		.loc 1 850 5 is_stmt 1 view .LVU167
 678 0014 4FF40051 		mov	r1, #8192
 679 0018 0B48     		ldr	r0, .L41+8
 680              	.LVL39:
 681              		.loc 1 850 5 is_stmt 0 view .LVU168
 682 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 683              	.LVL40:
 684              	.L36:
 851:Core/Src/main.c ****   }
 852:Core/Src/main.c **** }
 685              		.loc 1 852 1 view .LVU169
 686 001e 10BD     		pop	{r4, pc}
 687              	.LVL41:
 688              	.L40:
 839:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_SET);
 689              		.loc 1 839 5 is_stmt 1 view .LVU170
 839:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_SET);
 690              		.loc 1 839 23 is_stmt 0 view .LVU171
 691 0020 074C     		ldr	r4, .L41
 692 0022 0133     		adds	r3, r3, #1
 693 0024 2370     		strb	r3, [r4]
 840:Core/Src/main.c **** 
 694              		.loc 1 840 5 is_stmt 1 view .LVU172
 695 0026 0122     		movs	r2, #1
 696 0028 4FF40051 		mov	r1, #8192
 697 002c 0648     		ldr	r0, .L41+8
 698              	.LVL42:
 840:Core/Src/main.c **** 
 699              		.loc 1 840 5 is_stmt 0 view .LVU173
 700 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 701              	.LVL43:
 842:Core/Src/main.c ****     {
 702              		.loc 1 842 5 is_stmt 1 view .LVU174
 842:Core/Src/main.c ****     {
 703              		.loc 1 842 28 is_stmt 0 view .LVU175
 704 0032 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 842:Core/Src/main.c ****     {
 705              		.loc 1 842 8 view .LVU176
 706 0034 042B     		cmp	r3, #4
 707 0036 F2D1     		bne	.L36
 844:Core/Src/main.c ****     }
 708              		.loc 1 844 7 is_stmt 1 view .LVU177
 844:Core/Src/main.c ****     }
 709              		.loc 1 844 16 is_stmt 0 view .LVU178
 710 0038 044B     		ldr	r3, .L41+12
 711 003a 0122     		movs	r2, #1
 712 003c 1A70     		strb	r2, [r3]
 713 003e EEE7     		b	.L36
 714              	.L42:
 715              		.align	2
 716              	.L41:
 717 0040 00000000 		.word	buttonCurrentIndex
 718 0044 00000000 		.word	buttonOrderDefuse
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 62


 719 0048 00040240 		.word	1073873920
 720 004c 00000000 		.word	buttonOk
 721              		.cfi_endproc
 722              	.LFE92:
 724              		.section	.text.BCD_SendCommand,"ax",%progbits
 725              		.align	1
 726              		.global	BCD_SendCommand
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 731              	BCD_SendCommand:
 732              	.LVL44:
 733              	.LFB95:
 853:Core/Src/main.c **** 
 854:Core/Src/main.c **** // Vérifie si le bouton appuyé est dans la séquence de boutons pour planter la bombe
 855:Core/Src/main.c **** void checkButtonOrderPlant(uint8_t pressedButton)
 856:Core/Src/main.c **** {
 857:Core/Src/main.c ****   if (pressedButton == buttonOrderPlant[buttonPlantCurrentIndex])
 858:Core/Src/main.c ****   {
 859:Core/Src/main.c ****     buttonPlantCurrentIndex++;
 860:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_SET);
 861:Core/Src/main.c **** 
 862:Core/Src/main.c ****     if (buttonPlantCurrentIndex == 1)
 863:Core/Src/main.c ****     {
 864:Core/Src/main.c ****       BCD_SendCommand(0x04, 0x01);
 865:Core/Src/main.c ****     }
 866:Core/Src/main.c ****     if (buttonPlantCurrentIndex == 2)
 867:Core/Src/main.c ****     {
 868:Core/Src/main.c ****       BCD_SendCommand(0x04, 0x02);
 869:Core/Src/main.c ****       BCD_SendCommand(0x03, 0x01);
 870:Core/Src/main.c ****     }
 871:Core/Src/main.c ****     if (buttonPlantCurrentIndex == 3)
 872:Core/Src/main.c ****     {
 873:Core/Src/main.c ****       BCD_SendCommand(0x04, 0x03);
 874:Core/Src/main.c ****       BCD_SendCommand(0x03, 0x02);
 875:Core/Src/main.c ****       BCD_SendCommand(0x02, 0x01);
 876:Core/Src/main.c ****     }
 877:Core/Src/main.c **** 
 878:Core/Src/main.c ****     if (buttonPlantCurrentIndex == 4)
 879:Core/Src/main.c ****     {
 880:Core/Src/main.c ****       BCD_SendCommand(0x04, 0x04);
 881:Core/Src/main.c ****       BCD_SendCommand(0x03, 0x03);
 882:Core/Src/main.c ****       BCD_SendCommand(0x02, 0x02);
 883:Core/Src/main.c ****       BCD_SendCommand(0x01, 0x01);
 884:Core/Src/main.c **** 
 885:Core/Src/main.c ****       bombPlanted = true; // Flag indiquant que la bombe a été plantée
 886:Core/Src/main.c **** 
 887:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_RESET);
 888:Core/Src/main.c ****       buttonPlantCurrentIndex = 0; // Réinitialiser pour la prochaine utilisation
 889:Core/Src/main.c ****     }
 890:Core/Src/main.c ****   }
 891:Core/Src/main.c ****   else
 892:Core/Src/main.c ****   {
 893:Core/Src/main.c ****     buttonPlantCurrentIndex = 0;
 894:Core/Src/main.c **** 
 895:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_RESET);
 896:Core/Src/main.c ****   }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 63


 897:Core/Src/main.c **** }
 898:Core/Src/main.c **** 
 899:Core/Src/main.c **** // interruption pour les boutons
 900:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 901:Core/Src/main.c **** {
 902:Core/Src/main.c ****   switch (GPIO_Pin)
 903:Core/Src/main.c ****   {
 904:Core/Src/main.c ****   case BTN_1_Pin:
 905:Core/Src/main.c ****     if (HAL_GetTick() > (buttonElapsed[0] + DELAY_DEBOUNCE))
 906:Core/Src/main.c ****     {
 907:Core/Src/main.c ****       printf("btn 1\r\n");
 908:Core/Src/main.c ****       buttonElapsed[0] = HAL_GetTick();
 909:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 910:Core/Src/main.c ****       if (etat == ETAT_INITIALISATION)
 911:Core/Src/main.c ****       {
 912:Core/Src/main.c ****         checkButtonOrderPlant(1);
 913:Core/Src/main.c ****       }
 914:Core/Src/main.c ****       else
 915:Core/Src/main.c ****       {
 916:Core/Src/main.c ****         checkUserInput(1);
 917:Core/Src/main.c ****       }
 918:Core/Src/main.c ****     }
 919:Core/Src/main.c ****     break;
 920:Core/Src/main.c ****   case BTN_2_Pin:
 921:Core/Src/main.c ****     if (HAL_GetTick() > (buttonElapsed[1] + DELAY_DEBOUNCE))
 922:Core/Src/main.c ****     {
 923:Core/Src/main.c ****       printf("btn 2\r\n");
 924:Core/Src/main.c ****       buttonElapsed[1] = HAL_GetTick();
 925:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 926:Core/Src/main.c ****       if (etat == ETAT_INITIALISATION)
 927:Core/Src/main.c ****       {
 928:Core/Src/main.c ****         checkButtonOrderPlant(2);
 929:Core/Src/main.c ****       }
 930:Core/Src/main.c ****       else
 931:Core/Src/main.c ****       {
 932:Core/Src/main.c ****         checkUserInput(2);
 933:Core/Src/main.c ****       }
 934:Core/Src/main.c ****     }
 935:Core/Src/main.c ****     break;
 936:Core/Src/main.c ****   case BTN_3_Pin:
 937:Core/Src/main.c ****     if (HAL_GetTick() > (buttonElapsed[2] + DELAY_DEBOUNCE))
 938:Core/Src/main.c ****     {
 939:Core/Src/main.c ****       printf("btn 3\r\n");
 940:Core/Src/main.c ****       buttonElapsed[2] = HAL_GetTick();
 941:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 942:Core/Src/main.c ****       if (etat == ETAT_INITIALISATION)
 943:Core/Src/main.c ****       {
 944:Core/Src/main.c ****         checkButtonOrderPlant(3);
 945:Core/Src/main.c ****       }
 946:Core/Src/main.c ****       else
 947:Core/Src/main.c ****       {
 948:Core/Src/main.c ****         checkUserInput(3);
 949:Core/Src/main.c ****       }
 950:Core/Src/main.c ****     }
 951:Core/Src/main.c ****     break;
 952:Core/Src/main.c ****   case BTN_4_Pin:
 953:Core/Src/main.c ****     if (HAL_GetTick() > (buttonElapsed[3] + DELAY_DEBOUNCE))
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 64


 954:Core/Src/main.c ****     {
 955:Core/Src/main.c ****       printf("btn 4\r\n");
 956:Core/Src/main.c ****       buttonElapsed[3] = HAL_GetTick();
 957:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 958:Core/Src/main.c ****       if (etat == ETAT_INITIALISATION)
 959:Core/Src/main.c ****       {
 960:Core/Src/main.c ****         checkButtonOrderPlant(4);
 961:Core/Src/main.c ****       }
 962:Core/Src/main.c ****       else
 963:Core/Src/main.c ****       {
 964:Core/Src/main.c ****         checkUserInput(4);
 965:Core/Src/main.c ****       }
 966:Core/Src/main.c ****     }
 967:Core/Src/main.c ****     break;
 968:Core/Src/main.c ****   default:
 969:Core/Src/main.c ****     break;
 970:Core/Src/main.c ****   }
 971:Core/Src/main.c **** }
 972:Core/Src/main.c **** // endregion
 973:Core/Src/main.c **** 
 974:Core/Src/main.c **** // Fonction BCD
 975:Core/Src/main.c **** // region[rgba(150, 30, 200, 0.08)]
 976:Core/Src/main.c **** // Envoi de la commande à l'afficheur
 977:Core/Src/main.c **** void BCD_SendCommand(uint8_t addr, uint8_t data)
 978:Core/Src/main.c **** {
 734              		.loc 1 978 1 is_stmt 1 view -0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 8
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              		.loc 1 978 1 is_stmt 0 view .LVU180
 739 0000 10B5     		push	{r4, lr}
 740              	.LCFI11:
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 4, -8
 743              		.cfi_offset 14, -4
 744 0002 82B0     		sub	sp, sp, #8
 745              	.LCFI12:
 746              		.cfi_def_cfa_offset 16
 979:Core/Src/main.c ****   uint8_t mot[2] = {addr, data};
 747              		.loc 1 979 3 is_stmt 1 view .LVU181
 748              		.loc 1 979 11 is_stmt 0 view .LVU182
 749 0004 8DF80400 		strb	r0, [sp, #4]
 750 0008 8DF80510 		strb	r1, [sp, #5]
 980:Core/Src/main.c **** 
 981:Core/Src/main.c ****   HAL_GPIO_WritePin(SPI1_NSS_GPIO_Port, SPI1_NSS_Pin, GPIO_PIN_RESET);
 751              		.loc 1 981 3 is_stmt 1 view .LVU183
 752 000c 0A4C     		ldr	r4, .L45
 753 000e 0022     		movs	r2, #0
 754 0010 4FF48071 		mov	r1, #256
 755              	.LVL45:
 756              		.loc 1 981 3 is_stmt 0 view .LVU184
 757 0014 2046     		mov	r0, r4
 758              	.LVL46:
 759              		.loc 1 981 3 view .LVU185
 760 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 761              	.LVL47:
 982:Core/Src/main.c ****   HAL_SPI_Transmit(&hspi1, mot, 2, SPI_TIMEOUT);
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 65


 762              		.loc 1 982 3 is_stmt 1 view .LVU186
 763 001a 4FF47A73 		mov	r3, #1000
 764 001e 0222     		movs	r2, #2
 765 0020 01A9     		add	r1, sp, #4
 766 0022 0648     		ldr	r0, .L45+4
 767 0024 FFF7FEFF 		bl	HAL_SPI_Transmit
 768              	.LVL48:
 983:Core/Src/main.c ****   HAL_GPIO_WritePin(SPI1_NSS_GPIO_Port, SPI1_NSS_Pin, GPIO_PIN_SET);
 769              		.loc 1 983 3 view .LVU187
 770 0028 0122     		movs	r2, #1
 771 002a 4FF48071 		mov	r1, #256
 772 002e 2046     		mov	r0, r4
 773 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 774              	.LVL49:
 984:Core/Src/main.c **** }
 775              		.loc 1 984 1 is_stmt 0 view .LVU188
 776 0034 02B0     		add	sp, sp, #8
 777              	.LCFI13:
 778              		.cfi_def_cfa_offset 8
 779              		@ sp needed
 780 0036 10BD     		pop	{r4, pc}
 781              	.L46:
 782              		.align	2
 783              	.L45:
 784 0038 00000240 		.word	1073872896
 785 003c 00000000 		.word	hspi1
 786              		.cfi_endproc
 787              	.LFE95:
 789              		.section	.text.checkButtonOrderPlant,"ax",%progbits
 790              		.align	1
 791              		.global	checkButtonOrderPlant
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	checkButtonOrderPlant:
 797              	.LVL50:
 798              	.LFB93:
 856:Core/Src/main.c ****   if (pressedButton == buttonOrderPlant[buttonPlantCurrentIndex])
 799              		.loc 1 856 1 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 856:Core/Src/main.c ****   if (pressedButton == buttonOrderPlant[buttonPlantCurrentIndex])
 803              		.loc 1 856 1 is_stmt 0 view .LVU190
 804 0000 10B5     		push	{r4, lr}
 805              	.LCFI14:
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 857:Core/Src/main.c ****   {
 809              		.loc 1 857 3 is_stmt 1 view .LVU191
 857:Core/Src/main.c ****   {
 810              		.loc 1 857 40 is_stmt 0 view .LVU192
 811 0002 2F4B     		ldr	r3, .L58
 812 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 813 0006 2F4A     		ldr	r2, .L58+4
 814 0008 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 66


 857:Core/Src/main.c ****   {
 815              		.loc 1 857 6 view .LVU193
 816 000a 8242     		cmp	r2, r0
 817 000c 08D0     		beq	.L54
 893:Core/Src/main.c **** 
 818              		.loc 1 893 5 is_stmt 1 view .LVU194
 893:Core/Src/main.c **** 
 819              		.loc 1 893 29 is_stmt 0 view .LVU195
 820 000e 0022     		movs	r2, #0
 821 0010 2B4B     		ldr	r3, .L58
 822 0012 1A70     		strb	r2, [r3]
 895:Core/Src/main.c ****   }
 823              		.loc 1 895 5 is_stmt 1 view .LVU196
 824 0014 4FF40051 		mov	r1, #8192
 825 0018 2B48     		ldr	r0, .L58+8
 826              	.LVL51:
 895:Core/Src/main.c ****   }
 827              		.loc 1 895 5 is_stmt 0 view .LVU197
 828 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 829              	.LVL52:
 830              	.L47:
 897:Core/Src/main.c **** 
 831              		.loc 1 897 1 view .LVU198
 832 001e 10BD     		pop	{r4, pc}
 833              	.LVL53:
 834              	.L54:
 859:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_SET);
 835              		.loc 1 859 5 is_stmt 1 view .LVU199
 859:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_5_GPIO_Port, LED_5_Pin, GPIO_PIN_SET);
 836              		.loc 1 859 28 is_stmt 0 view .LVU200
 837 0020 274C     		ldr	r4, .L58
 838 0022 0133     		adds	r3, r3, #1
 839 0024 2370     		strb	r3, [r4]
 860:Core/Src/main.c **** 
 840              		.loc 1 860 5 is_stmt 1 view .LVU201
 841 0026 0122     		movs	r2, #1
 842 0028 4FF40051 		mov	r1, #8192
 843 002c 2648     		ldr	r0, .L58+8
 844              	.LVL54:
 860:Core/Src/main.c **** 
 845              		.loc 1 860 5 is_stmt 0 view .LVU202
 846 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 847              	.LVL55:
 862:Core/Src/main.c ****     {
 848              		.loc 1 862 5 is_stmt 1 view .LVU203
 862:Core/Src/main.c ****     {
 849              		.loc 1 862 33 is_stmt 0 view .LVU204
 850 0032 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 862:Core/Src/main.c ****     {
 851              		.loc 1 862 8 view .LVU205
 852 0034 012B     		cmp	r3, #1
 853 0036 28D0     		beq	.L55
 854              	.L49:
 866:Core/Src/main.c ****     {
 855              		.loc 1 866 5 is_stmt 1 view .LVU206
 866:Core/Src/main.c ****     {
 856              		.loc 1 866 33 is_stmt 0 view .LVU207
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 67


 857 0038 214B     		ldr	r3, .L58
 858 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 866:Core/Src/main.c ****     {
 859              		.loc 1 866 8 view .LVU208
 860 003c 022B     		cmp	r3, #2
 861 003e 29D0     		beq	.L56
 862              	.L50:
 871:Core/Src/main.c ****     {
 863              		.loc 1 871 5 is_stmt 1 view .LVU209
 871:Core/Src/main.c ****     {
 864              		.loc 1 871 33 is_stmt 0 view .LVU210
 865 0040 1F4B     		ldr	r3, .L58
 866 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 871:Core/Src/main.c ****     {
 867              		.loc 1 871 8 view .LVU211
 868 0044 032B     		cmp	r3, #3
 869 0046 2ED0     		beq	.L57
 870              	.L51:
 878:Core/Src/main.c ****     {
 871              		.loc 1 878 5 is_stmt 1 view .LVU212
 878:Core/Src/main.c ****     {
 872              		.loc 1 878 33 is_stmt 0 view .LVU213
 873 0048 1D4B     		ldr	r3, .L58
 874 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 878:Core/Src/main.c ****     {
 875              		.loc 1 878 8 view .LVU214
 876 004c 042B     		cmp	r3, #4
 877 004e E6D1     		bne	.L47
 880:Core/Src/main.c ****       BCD_SendCommand(0x03, 0x03);
 878              		.loc 1 880 7 is_stmt 1 view .LVU215
 879 0050 0421     		movs	r1, #4
 880 0052 0846     		mov	r0, r1
 881 0054 FFF7FEFF 		bl	BCD_SendCommand
 882              	.LVL56:
 881:Core/Src/main.c ****       BCD_SendCommand(0x02, 0x02);
 883              		.loc 1 881 7 view .LVU216
 884 0058 0321     		movs	r1, #3
 885 005a 0846     		mov	r0, r1
 886 005c FFF7FEFF 		bl	BCD_SendCommand
 887              	.LVL57:
 882:Core/Src/main.c ****       BCD_SendCommand(0x01, 0x01);
 888              		.loc 1 882 7 view .LVU217
 889 0060 0221     		movs	r1, #2
 890 0062 0846     		mov	r0, r1
 891 0064 FFF7FEFF 		bl	BCD_SendCommand
 892              	.LVL58:
 883:Core/Src/main.c **** 
 893              		.loc 1 883 7 view .LVU218
 894 0068 0121     		movs	r1, #1
 895 006a 0846     		mov	r0, r1
 896 006c FFF7FEFF 		bl	BCD_SendCommand
 897              	.LVL59:
 885:Core/Src/main.c **** 
 898              		.loc 1 885 7 view .LVU219
 885:Core/Src/main.c **** 
 899              		.loc 1 885 19 is_stmt 0 view .LVU220
 900 0070 164B     		ldr	r3, .L58+12
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 68


 901 0072 0122     		movs	r2, #1
 902 0074 1A70     		strb	r2, [r3]
 887:Core/Src/main.c ****       buttonPlantCurrentIndex = 0; // Réinitialiser pour la prochaine utilisation
 903              		.loc 1 887 7 is_stmt 1 view .LVU221
 904 0076 0022     		movs	r2, #0
 905 0078 4FF40051 		mov	r1, #8192
 906 007c 1248     		ldr	r0, .L58+8
 907 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 908              	.LVL60:
 888:Core/Src/main.c ****     }
 909              		.loc 1 888 7 view .LVU222
 888:Core/Src/main.c ****     }
 910              		.loc 1 888 31 is_stmt 0 view .LVU223
 911 0082 0F4B     		ldr	r3, .L58
 912 0084 0022     		movs	r2, #0
 913 0086 1A70     		strb	r2, [r3]
 914 0088 C9E7     		b	.L47
 915              	.L55:
 864:Core/Src/main.c ****     }
 916              		.loc 1 864 7 is_stmt 1 view .LVU224
 917 008a 0121     		movs	r1, #1
 918 008c 0420     		movs	r0, #4
 919 008e FFF7FEFF 		bl	BCD_SendCommand
 920              	.LVL61:
 921 0092 D1E7     		b	.L49
 922              	.L56:
 868:Core/Src/main.c ****       BCD_SendCommand(0x03, 0x01);
 923              		.loc 1 868 7 view .LVU225
 924 0094 0221     		movs	r1, #2
 925 0096 0420     		movs	r0, #4
 926 0098 FFF7FEFF 		bl	BCD_SendCommand
 927              	.LVL62:
 869:Core/Src/main.c ****     }
 928              		.loc 1 869 7 view .LVU226
 929 009c 0121     		movs	r1, #1
 930 009e 0320     		movs	r0, #3
 931 00a0 FFF7FEFF 		bl	BCD_SendCommand
 932              	.LVL63:
 933 00a4 CCE7     		b	.L50
 934              	.L57:
 873:Core/Src/main.c ****       BCD_SendCommand(0x03, 0x02);
 935              		.loc 1 873 7 view .LVU227
 936 00a6 0321     		movs	r1, #3
 937 00a8 0420     		movs	r0, #4
 938 00aa FFF7FEFF 		bl	BCD_SendCommand
 939              	.LVL64:
 874:Core/Src/main.c ****       BCD_SendCommand(0x02, 0x01);
 940              		.loc 1 874 7 view .LVU228
 941 00ae 0221     		movs	r1, #2
 942 00b0 0320     		movs	r0, #3
 943 00b2 FFF7FEFF 		bl	BCD_SendCommand
 944              	.LVL65:
 875:Core/Src/main.c ****     }
 945              		.loc 1 875 7 view .LVU229
 946 00b6 0121     		movs	r1, #1
 947 00b8 0220     		movs	r0, #2
 948 00ba FFF7FEFF 		bl	BCD_SendCommand
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 69


 949              	.LVL66:
 950 00be C3E7     		b	.L51
 951              	.L59:
 952              		.align	2
 953              	.L58:
 954 00c0 00000000 		.word	buttonPlantCurrentIndex
 955 00c4 00000000 		.word	buttonOrderPlant
 956 00c8 00040240 		.word	1073873920
 957 00cc 00000000 		.word	bombPlanted
 958              		.cfi_endproc
 959              	.LFE93:
 961              		.section	.text.BCD_Init,"ax",%progbits
 962              		.align	1
 963              		.global	BCD_Init
 964              		.syntax unified
 965              		.thumb
 966              		.thumb_func
 968              	BCD_Init:
 969              	.LVL67:
 970              	.LFB96:
 985:Core/Src/main.c **** 
 986:Core/Src/main.c **** // Initialisation de l'affichage de l'horloge
 987:Core/Src/main.c **** void BCD_Init(uint16_t time_in_second)
 988:Core/Src/main.c **** {
 971              		.loc 1 988 1 view -0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              		.loc 1 988 1 is_stmt 0 view .LVU231
 976 0000 70B5     		push	{r4, r5, r6, lr}
 977              	.LCFI15:
 978              		.cfi_def_cfa_offset 16
 979              		.cfi_offset 4, -16
 980              		.cfi_offset 5, -12
 981              		.cfi_offset 6, -8
 982              		.cfi_offset 14, -4
 983 0002 0546     		mov	r5, r0
 989:Core/Src/main.c **** 
 990:Core/Src/main.c ****   BCD_SendCommand(0x0C, 0x01); // shutdown pour reset/economie energie
 984              		.loc 1 990 3 is_stmt 1 view .LVU232
 985 0004 0121     		movs	r1, #1
 986 0006 0C20     		movs	r0, #12
 987              	.LVL68:
 988              		.loc 1 990 3 is_stmt 0 view .LVU233
 989 0008 FFF7FEFF 		bl	BCD_SendCommand
 990              	.LVL69:
 991:Core/Src/main.c ****   BCD_SendCommand(0x09, 0x0F); // decode permet utiliser tab predefinie au lieu seg/seg
 991              		.loc 1 991 3 is_stmt 1 view .LVU234
 992 000c 0F21     		movs	r1, #15
 993 000e 0920     		movs	r0, #9
 994 0010 FFF7FEFF 		bl	BCD_SendCommand
 995              	.LVL70:
 992:Core/Src/main.c ****   BCD_SendCommand(0x0B, 0x03); // scanlimit
 996              		.loc 1 992 3 view .LVU235
 997 0014 0321     		movs	r1, #3
 998 0016 0B20     		movs	r0, #11
 999 0018 FFF7FEFF 		bl	BCD_SendCommand
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 70


 1000              	.LVL71:
 993:Core/Src/main.c ****   BCD_SendCommand(0x0A, 0x01); // regle intensité lumineuse
 1001              		.loc 1 993 3 view .LVU236
 1002 001c 0121     		movs	r1, #1
 1003 001e 0A20     		movs	r0, #10
 1004 0020 FFF7FEFF 		bl	BCD_SendCommand
 1005              	.LVL72:
 994:Core/Src/main.c **** 
 995:Core/Src/main.c ****   // flash de l'afficheur
 996:Core/Src/main.c ****   for (int i = 0; i < 3; i++)
 1006              		.loc 1 996 3 view .LVU237
 1007              	.LBB12:
 1008              		.loc 1 996 8 view .LVU238
 1009              		.loc 1 996 12 is_stmt 0 view .LVU239
 1010 0024 0024     		movs	r4, #0
 1011              		.loc 1 996 3 view .LVU240
 1012 0026 0EE0     		b	.L61
 1013              	.LVL73:
 1014              	.L62:
 997:Core/Src/main.c ****   {
 998:Core/Src/main.c ****     BCD_SendCommand(0xFF, 0xFF);
 1015              		.loc 1 998 5 is_stmt 1 view .LVU241
 1016 0028 FF21     		movs	r1, #255
 1017 002a 0846     		mov	r0, r1
 1018 002c FFF7FEFF 		bl	BCD_SendCommand
 1019              	.LVL74:
 999:Core/Src/main.c ****     HAL_Delay(50);
 1020              		.loc 1 999 5 view .LVU242
 1021 0030 3220     		movs	r0, #50
 1022 0032 FFF7FEFF 		bl	HAL_Delay
 1023              	.LVL75:
1000:Core/Src/main.c ****     BCD_SendCommand(0xFF, 0x00);
 1024              		.loc 1 1000 5 view .LVU243
 1025 0036 0021     		movs	r1, #0
 1026 0038 FF20     		movs	r0, #255
 1027 003a FFF7FEFF 		bl	BCD_SendCommand
 1028              	.LVL76:
1001:Core/Src/main.c ****     HAL_Delay(50);
 1029              		.loc 1 1001 5 view .LVU244
 1030 003e 3220     		movs	r0, #50
 1031 0040 FFF7FEFF 		bl	HAL_Delay
 1032              	.LVL77:
 996:Core/Src/main.c ****   {
 1033              		.loc 1 996 27 discriminator 3 view .LVU245
 1034 0044 0134     		adds	r4, r4, #1
 1035              	.LVL78:
 1036              	.L61:
 996:Core/Src/main.c ****   {
 1037              		.loc 1 996 21 discriminator 1 view .LVU246
 1038 0046 022C     		cmp	r4, #2
 1039 0048 EEDD     		ble	.L62
 1040              	.LBE12:
1002:Core/Src/main.c ****   }
1003:Core/Src/main.c **** 
1004:Core/Src/main.c ****   uint8_t seconds = 0;
 1041              		.loc 1 1004 3 view .LVU247
 1042              	.LVL79:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 71


1005:Core/Src/main.c ****   uint8_t diz_seconds = 0;
 1043              		.loc 1 1005 3 view .LVU248
1006:Core/Src/main.c ****   uint8_t minutes = 0;
 1044              		.loc 1 1006 3 view .LVU249
1007:Core/Src/main.c ****   uint8_t diz_minutes = 0;
 1045              		.loc 1 1007 3 view .LVU250
1008:Core/Src/main.c **** 
1009:Core/Src/main.c ****   minutes = time_in_second / 60;
 1046              		.loc 1 1009 3 view .LVU251
 1047              		.loc 1 1009 11 is_stmt 0 view .LVU252
 1048 004a 1B4E     		ldr	r6, .L68
 1049 004c A6FB0536 		umull	r3, r6, r6, r5
 1050 0050 7309     		lsrs	r3, r6, #5
 1051 0052 C6F34716 		ubfx	r6, r6, #5, #8
 1052              	.LVL80:
1010:Core/Src/main.c ****   seconds = time_in_second % 60;
 1053              		.loc 1 1010 3 is_stmt 1 view .LVU253
 1054              		.loc 1 1010 11 is_stmt 0 view .LVU254
 1055 0056 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1056 005a A5EB8304 		sub	r4, r5, r3, lsl #2
 1057              	.LVL81:
 1058              		.loc 1 1010 11 view .LVU255
 1059 005e E4B2     		uxtb	r4, r4
 1060              	.LVL82:
1011:Core/Src/main.c **** 
1012:Core/Src/main.c ****   if (minutes >= 10)
 1061              		.loc 1 1012 3 is_stmt 1 view .LVU256
 1062              		.loc 1 1012 6 is_stmt 0 view .LVU257
 1063 0060 092E     		cmp	r6, #9
 1064 0062 25D9     		bls	.L65
1013:Core/Src/main.c ****   {
1014:Core/Src/main.c ****     diz_minutes = minutes / 10;
 1065              		.loc 1 1014 5 is_stmt 1 view .LVU258
 1066              		.loc 1 1014 17 is_stmt 0 view .LVU259
 1067 0064 1549     		ldr	r1, .L68+4
 1068 0066 A1FB0631 		umull	r3, r1, r1, r6
 1069 006a CB08     		lsrs	r3, r1, #3
 1070 006c 1946     		mov	r1, r3
 1071              	.LVL83:
1015:Core/Src/main.c ****     minutes = minutes % 10;
 1072              		.loc 1 1015 5 is_stmt 1 view .LVU260
 1073              		.loc 1 1015 13 is_stmt 0 view .LVU261
 1074 006e 03EB8303 		add	r3, r3, r3, lsl #2
 1075              	.LVL84:
 1076              		.loc 1 1015 13 view .LVU262
 1077 0072 A6EB4303 		sub	r3, r6, r3, lsl #1
 1078 0076 DEB2     		uxtb	r6, r3
 1079              	.LVL85:
 1080              	.L63:
1016:Core/Src/main.c ****   }
1017:Core/Src/main.c ****   if (seconds >= 10)
 1081              		.loc 1 1017 3 is_stmt 1 view .LVU263
 1082              		.loc 1 1017 6 is_stmt 0 view .LVU264
 1083 0078 092C     		cmp	r4, #9
 1084 007a 1BD9     		bls	.L66
1018:Core/Src/main.c ****   {
1019:Core/Src/main.c ****     diz_seconds = seconds / 10;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 72


 1085              		.loc 1 1019 5 is_stmt 1 view .LVU265
 1086              		.loc 1 1019 17 is_stmt 0 view .LVU266
 1087 007c 0F4D     		ldr	r5, .L68+4
 1088              	.LVL86:
 1089              		.loc 1 1019 17 view .LVU267
 1090 007e A5FB0435 		umull	r3, r5, r5, r4
 1091 0082 EB08     		lsrs	r3, r5, #3
 1092 0084 1D46     		mov	r5, r3
 1093              	.LVL87:
1020:Core/Src/main.c ****     seconds = seconds % 10;
 1094              		.loc 1 1020 5 is_stmt 1 view .LVU268
 1095              		.loc 1 1020 13 is_stmt 0 view .LVU269
 1096 0086 03EB8303 		add	r3, r3, r3, lsl #2
 1097              	.LVL88:
 1098              		.loc 1 1020 13 view .LVU270
 1099 008a A4EB4303 		sub	r3, r4, r3, lsl #1
 1100 008e DCB2     		uxtb	r4, r3
 1101              	.LVL89:
 1102              	.L64:
1021:Core/Src/main.c ****   }
1022:Core/Src/main.c **** 
1023:Core/Src/main.c ****   BCD_SendCommand(0x01, diz_minutes);
 1103              		.loc 1 1023 3 is_stmt 1 view .LVU271
 1104 0090 0120     		movs	r0, #1
 1105 0092 FFF7FEFF 		bl	BCD_SendCommand
 1106              	.LVL90:
1024:Core/Src/main.c ****   BCD_SendCommand(0x02, minutes);
 1107              		.loc 1 1024 3 view .LVU272
 1108 0096 3146     		mov	r1, r6
 1109 0098 0220     		movs	r0, #2
 1110 009a FFF7FEFF 		bl	BCD_SendCommand
 1111              	.LVL91:
1025:Core/Src/main.c ****   BCD_SendCommand(0x03, diz_seconds);
 1112              		.loc 1 1025 3 view .LVU273
 1113 009e 2946     		mov	r1, r5
 1114 00a0 0320     		movs	r0, #3
 1115 00a2 FFF7FEFF 		bl	BCD_SendCommand
 1116              	.LVL92:
1026:Core/Src/main.c ****   BCD_SendCommand(0x04, seconds);
 1117              		.loc 1 1026 3 view .LVU274
 1118 00a6 2146     		mov	r1, r4
 1119 00a8 0420     		movs	r0, #4
 1120 00aa FFF7FEFF 		bl	BCD_SendCommand
 1121              	.LVL93:
1027:Core/Src/main.c **** }
 1122              		.loc 1 1027 1 is_stmt 0 view .LVU275
 1123 00ae 70BD     		pop	{r4, r5, r6, pc}
 1124              	.LVL94:
 1125              	.L65:
1007:Core/Src/main.c **** 
 1126              		.loc 1 1007 11 view .LVU276
 1127 00b0 0021     		movs	r1, #0
 1128 00b2 E1E7     		b	.L63
 1129              	.LVL95:
 1130              	.L66:
1005:Core/Src/main.c ****   uint8_t minutes = 0;
 1131              		.loc 1 1005 11 view .LVU277
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 73


 1132 00b4 0025     		movs	r5, #0
 1133 00b6 EBE7     		b	.L64
 1134              	.L69:
 1135              		.align	2
 1136              	.L68:
 1137 00b8 89888888 		.word	-2004318071
 1138 00bc CDCCCCCC 		.word	-858993459
 1139              		.cfi_endproc
 1140              	.LFE96:
 1142              		.section	.text.BCD_updateClock,"ax",%progbits
 1143              		.align	1
 1144              		.global	BCD_updateClock
 1145              		.syntax unified
 1146              		.thumb
 1147              		.thumb_func
 1149              	BCD_updateClock:
 1150              	.LVL96:
 1151              	.LFB97:
1028:Core/Src/main.c **** 
1029:Core/Src/main.c **** // Mise à jour de l'affichage de l'horloge
1030:Core/Src/main.c **** int BCD_updateClock(uint16_t time_in_second)
1031:Core/Src/main.c **** {
 1152              		.loc 1 1031 1 is_stmt 1 view -0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
1032:Core/Src/main.c **** 
1033:Core/Src/main.c ****   if (time_in_second == 0)
 1156              		.loc 1 1033 3 view .LVU279
 1157              		.loc 1 1033 6 is_stmt 0 view .LVU280
 1158 0000 0028     		cmp	r0, #0
 1159 0002 3AD0     		beq	.L74
1031:Core/Src/main.c **** 
 1160              		.loc 1 1031 1 view .LVU281
 1161 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1162              	.LCFI16:
 1163              		.cfi_def_cfa_offset 24
 1164              		.cfi_offset 3, -24
 1165              		.cfi_offset 4, -20
 1166              		.cfi_offset 5, -16
 1167              		.cfi_offset 6, -12
 1168              		.cfi_offset 7, -8
 1169              		.cfi_offset 14, -4
1034:Core/Src/main.c ****   {
1035:Core/Src/main.c ****     return 0;
1036:Core/Src/main.c ****   }
1037:Core/Src/main.c **** 
1038:Core/Src/main.c ****   time_in_second--;
 1170              		.loc 1 1038 3 is_stmt 1 view .LVU282
 1171              		.loc 1 1038 17 is_stmt 0 view .LVU283
 1172 0006 441E     		subs	r4, r0, #1
 1173 0008 A4B2     		uxth	r4, r4
 1174              	.LVL97:
1039:Core/Src/main.c **** 
1040:Core/Src/main.c ****   uint8_t seconds = 0;
 1175              		.loc 1 1040 3 is_stmt 1 view .LVU284
1041:Core/Src/main.c ****   uint8_t diz_seconds = 0;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 74


 1176              		.loc 1 1041 3 view .LVU285
1042:Core/Src/main.c ****   uint8_t minutes = 0;
 1177              		.loc 1 1042 3 view .LVU286
1043:Core/Src/main.c ****   uint8_t diz_minutes = 0;
 1178              		.loc 1 1043 3 view .LVU287
1044:Core/Src/main.c **** 
1045:Core/Src/main.c ****   minutes = time_in_second / 60;
 1179              		.loc 1 1045 3 view .LVU288
 1180              		.loc 1 1045 11 is_stmt 0 view .LVU289
 1181 000a 1D4E     		ldr	r6, .L81
 1182 000c A6FB0436 		umull	r3, r6, r6, r4
 1183 0010 7509     		lsrs	r5, r6, #5
 1184 0012 C6F34716 		ubfx	r6, r6, #5, #8
 1185              	.LVL98:
1046:Core/Src/main.c ****   seconds = time_in_second % 60;
 1186              		.loc 1 1046 3 is_stmt 1 view .LVU290
 1187              		.loc 1 1046 11 is_stmt 0 view .LVU291
 1188 0016 C5EB0515 		rsb	r5, r5, r5, lsl #4
 1189 001a A4EB8505 		sub	r5, r4, r5, lsl #2
 1190 001e EDB2     		uxtb	r5, r5
 1191              	.LVL99:
1047:Core/Src/main.c **** 
1048:Core/Src/main.c ****   if (seconds >= 10)
 1192              		.loc 1 1048 3 is_stmt 1 view .LVU292
 1193              		.loc 1 1048 6 is_stmt 0 view .LVU293
 1194 0020 092D     		cmp	r5, #9
 1195 0022 0AD9     		bls	.L75
1049:Core/Src/main.c ****   {
1050:Core/Src/main.c ****     diz_seconds = seconds / 10;
 1196              		.loc 1 1050 5 is_stmt 1 view .LVU294
 1197              		.loc 1 1050 17 is_stmt 0 view .LVU295
 1198 0024 174F     		ldr	r7, .L81+4
 1199 0026 A7FB0537 		umull	r3, r7, r7, r5
 1200 002a FB08     		lsrs	r3, r7, #3
 1201 002c 1F46     		mov	r7, r3
 1202              	.LVL100:
1051:Core/Src/main.c ****     seconds = seconds % 10;
 1203              		.loc 1 1051 5 is_stmt 1 view .LVU296
 1204              		.loc 1 1051 13 is_stmt 0 view .LVU297
 1205 002e 03EB8303 		add	r3, r3, r3, lsl #2
 1206              	.LVL101:
 1207              		.loc 1 1051 13 view .LVU298
 1208 0032 A5EB4303 		sub	r3, r5, r3, lsl #1
 1209 0036 DDB2     		uxtb	r5, r3
 1210              	.LVL102:
 1211              		.loc 1 1051 13 view .LVU299
 1212 0038 00E0     		b	.L72
 1213              	.LVL103:
 1214              	.L75:
1041:Core/Src/main.c ****   uint8_t minutes = 0;
 1215              		.loc 1 1041 11 view .LVU300
 1216 003a 0027     		movs	r7, #0
 1217              	.LVL104:
 1218              	.L72:
1052:Core/Src/main.c ****   }
1053:Core/Src/main.c ****   if (minutes >= 10)
 1219              		.loc 1 1053 3 is_stmt 1 view .LVU301
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 75


 1220              		.loc 1 1053 6 is_stmt 0 view .LVU302
 1221 003c 092E     		cmp	r6, #9
 1222 003e 0AD9     		bls	.L76
1054:Core/Src/main.c ****   {
1055:Core/Src/main.c ****     diz_minutes = minutes / 10;
 1223              		.loc 1 1055 5 is_stmt 1 view .LVU303
 1224              		.loc 1 1055 17 is_stmt 0 view .LVU304
 1225 0040 1049     		ldr	r1, .L81+4
 1226 0042 A1FB0631 		umull	r3, r1, r1, r6
 1227 0046 CB08     		lsrs	r3, r1, #3
 1228 0048 1946     		mov	r1, r3
 1229              	.LVL105:
1056:Core/Src/main.c ****     minutes = minutes % 10;
 1230              		.loc 1 1056 5 is_stmt 1 view .LVU305
 1231              		.loc 1 1056 13 is_stmt 0 view .LVU306
 1232 004a 03EB8303 		add	r3, r3, r3, lsl #2
 1233              	.LVL106:
 1234              		.loc 1 1056 13 view .LVU307
 1235 004e A6EB4303 		sub	r3, r6, r3, lsl #1
 1236 0052 DEB2     		uxtb	r6, r3
 1237              	.LVL107:
 1238              		.loc 1 1056 13 view .LVU308
 1239 0054 00E0     		b	.L73
 1240              	.LVL108:
 1241              	.L76:
1043:Core/Src/main.c **** 
 1242              		.loc 1 1043 11 view .LVU309
 1243 0056 0021     		movs	r1, #0
 1244              	.LVL109:
 1245              	.L73:
1057:Core/Src/main.c ****   }
1058:Core/Src/main.c **** 
1059:Core/Src/main.c ****   BCD_SendCommand(0x01, diz_minutes);
 1246              		.loc 1 1059 3 is_stmt 1 view .LVU310
 1247 0058 0120     		movs	r0, #1
 1248 005a FFF7FEFF 		bl	BCD_SendCommand
 1249              	.LVL110:
1060:Core/Src/main.c ****   BCD_SendCommand(0x02, minutes);
 1250              		.loc 1 1060 3 view .LVU311
 1251 005e 3146     		mov	r1, r6
 1252 0060 0220     		movs	r0, #2
 1253 0062 FFF7FEFF 		bl	BCD_SendCommand
 1254              	.LVL111:
1061:Core/Src/main.c ****   BCD_SendCommand(0x03, diz_seconds);
 1255              		.loc 1 1061 3 view .LVU312
 1256 0066 3946     		mov	r1, r7
 1257 0068 0320     		movs	r0, #3
 1258 006a FFF7FEFF 		bl	BCD_SendCommand
 1259              	.LVL112:
1062:Core/Src/main.c ****   BCD_SendCommand(0x04, seconds);
 1260              		.loc 1 1062 3 view .LVU313
 1261 006e 2946     		mov	r1, r5
 1262 0070 0420     		movs	r0, #4
 1263 0072 FFF7FEFF 		bl	BCD_SendCommand
 1264              	.LVL113:
1063:Core/Src/main.c **** 
1064:Core/Src/main.c ****   return time_in_second;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 76


 1265              		.loc 1 1064 3 view .LVU314
 1266              		.loc 1 1064 10 is_stmt 0 view .LVU315
 1267 0076 2046     		mov	r0, r4
1065:Core/Src/main.c **** }
 1268              		.loc 1 1065 1 view .LVU316
 1269 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1270              	.LVL114:
 1271              	.L74:
 1272              	.LCFI17:
 1273              		.cfi_def_cfa_offset 0
 1274              		.cfi_restore 3
 1275              		.cfi_restore 4
 1276              		.cfi_restore 5
 1277              		.cfi_restore 6
 1278              		.cfi_restore 7
 1279              		.cfi_restore 14
1035:Core/Src/main.c ****   }
 1280              		.loc 1 1035 12 view .LVU317
 1281 007a 0020     		movs	r0, #0
 1282              	.LVL115:
 1283              		.loc 1 1065 1 view .LVU318
 1284 007c 7047     		bx	lr
 1285              	.L82:
 1286 007e 00BF     		.align	2
 1287              	.L81:
 1288 0080 89888888 		.word	-2004318071
 1289 0084 CDCCCCCC 		.word	-858993459
 1290              		.cfi_endproc
 1291              	.LFE97:
 1293              		.section	.text.play,"ax",%progbits
 1294              		.align	1
 1295              		.global	play
 1296              		.syntax unified
 1297              		.thumb
 1298              		.thumb_func
 1300              	play:
 1301              	.LFB98:
1066:Core/Src/main.c **** // endregion
1067:Core/Src/main.c **** 
1068:Core/Src/main.c **** // Gestion du son
1069:Core/Src/main.c **** void play(void)
1070:Core/Src/main.c **** {
 1302              		.loc 1 1070 1 is_stmt 1 view -0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 8
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
 1306 0000 00B5     		push	{lr}
 1307              	.LCFI18:
 1308              		.cfi_def_cfa_offset 4
 1309              		.cfi_offset 14, -4
 1310 0002 83B0     		sub	sp, sp, #12
 1311              	.LCFI19:
 1312              		.cfi_def_cfa_offset 16
1071:Core/Src/main.c ****   uint8_t array[4] = {0xAA, 0x02, 0x00, 0xAC};
 1313              		.loc 1 1071 3 view .LVU320
 1314              		.loc 1 1071 11 is_stmt 0 view .LVU321
 1315 0004 064B     		ldr	r3, .L85
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 77


 1316 0006 0193     		str	r3, [sp, #4]
1072:Core/Src/main.c ****   HAL_UART_Transmit(&huart4, array, sizeof(array), 1000);
 1317              		.loc 1 1072 3 is_stmt 1 view .LVU322
 1318 0008 4FF47A73 		mov	r3, #1000
 1319 000c 0422     		movs	r2, #4
 1320 000e 0DEB0201 		add	r1, sp, r2
 1321 0012 0448     		ldr	r0, .L85+4
 1322 0014 FFF7FEFF 		bl	HAL_UART_Transmit
 1323              	.LVL116:
1073:Core/Src/main.c **** }
 1324              		.loc 1 1073 1 is_stmt 0 view .LVU323
 1325 0018 03B0     		add	sp, sp, #12
 1326              	.LCFI20:
 1327              		.cfi_def_cfa_offset 4
 1328              		@ sp needed
 1329 001a 5DF804FB 		ldr	pc, [sp], #4
 1330              	.L86:
 1331 001e 00BF     		.align	2
 1332              	.L85:
 1333 0020 AA0200AC 		.word	-1409285462
 1334 0024 00000000 		.word	huart4
 1335              		.cfi_endproc
 1336              	.LFE98:
 1338              		.section	.text.play_track,"ax",%progbits
 1339              		.align	1
 1340              		.global	play_track
 1341              		.syntax unified
 1342              		.thumb
 1343              		.thumb_func
 1345              	play_track:
 1346              	.LVL117:
 1347              	.LFB99:
1074:Core/Src/main.c **** 
1075:Core/Src/main.c **** // Gestion des sons pré-enregistrés
1076:Core/Src/main.c **** void play_track(uint8_t track_nb)
1077:Core/Src/main.c **** {
 1348              		.loc 1 1077 1 is_stmt 1 view -0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 8
 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 1352              		.loc 1 1077 1 is_stmt 0 view .LVU325
 1353 0000 00B5     		push	{lr}
 1354              	.LCFI21:
 1355              		.cfi_def_cfa_offset 4
 1356              		.cfi_offset 14, -4
 1357 0002 83B0     		sub	sp, sp, #12
 1358              	.LCFI22:
 1359              		.cfi_def_cfa_offset 16
1078:Core/Src/main.c ****   uint8_t array[6] = {0xAA, 0x07, 0x02, 0x00, track_nb, 0xB3 + track_nb};
 1360              		.loc 1 1078 3 is_stmt 1 view .LVU326
 1361              		.loc 1 1078 11 is_stmt 0 view .LVU327
 1362 0004 AA23     		movs	r3, #170
 1363 0006 8DF80030 		strb	r3, [sp]
 1364 000a 0723     		movs	r3, #7
 1365 000c 8DF80130 		strb	r3, [sp, #1]
 1366 0010 0223     		movs	r3, #2
 1367 0012 8DF80230 		strb	r3, [sp, #2]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 78


 1368 0016 0023     		movs	r3, #0
 1369 0018 8DF80330 		strb	r3, [sp, #3]
 1370 001c 8DF80400 		strb	r0, [sp, #4]
 1371              		.loc 1 1078 62 view .LVU328
 1372 0020 4D38     		subs	r0, r0, #77
 1373              	.LVL118:
 1374              		.loc 1 1078 11 view .LVU329
 1375 0022 8DF80500 		strb	r0, [sp, #5]
1079:Core/Src/main.c ****   HAL_UART_Transmit(&huart4, array, sizeof(array), 1000);
 1376              		.loc 1 1079 3 is_stmt 1 view .LVU330
 1377 0026 4FF47A73 		mov	r3, #1000
 1378 002a 0622     		movs	r2, #6
 1379 002c 6946     		mov	r1, sp
 1380 002e 0348     		ldr	r0, .L89
 1381 0030 FFF7FEFF 		bl	HAL_UART_Transmit
 1382              	.LVL119:
1080:Core/Src/main.c **** }
 1383              		.loc 1 1080 1 is_stmt 0 view .LVU331
 1384 0034 03B0     		add	sp, sp, #12
 1385              	.LCFI23:
 1386              		.cfi_def_cfa_offset 4
 1387              		@ sp needed
 1388 0036 5DF804FB 		ldr	pc, [sp], #4
 1389              	.L90:
 1390 003a 00BF     		.align	2
 1391              	.L89:
 1392 003c 00000000 		.word	huart4
 1393              		.cfi_endproc
 1394              	.LFE99:
 1396              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 1397              		.align	2
 1398              	.LC0:
 1399 0000 62746E20 		.ascii	"btn 1\015\000"
 1399      310D00
 1400 0007 00       		.align	2
 1401              	.LC1:
 1402 0008 62746E20 		.ascii	"btn 2\015\000"
 1402      320D00
 1403 000f 00       		.align	2
 1404              	.LC2:
 1405 0010 62746E20 		.ascii	"btn 3\015\000"
 1405      330D00
 1406 0017 00       		.align	2
 1407              	.LC3:
 1408 0018 62746E20 		.ascii	"btn 4\015\000"
 1408      340D00
 1409              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1410              		.align	1
 1411              		.global	HAL_GPIO_EXTI_Callback
 1412              		.syntax unified
 1413              		.thumb
 1414              		.thumb_func
 1416              	HAL_GPIO_EXTI_Callback:
 1417              	.LVL120:
 1418              	.LFB94:
 901:Core/Src/main.c ****   switch (GPIO_Pin)
 1419              		.loc 1 901 1 is_stmt 1 view -0
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 79


 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 0
 1422              		@ frame_needed = 0, uses_anonymous_args = 0
 901:Core/Src/main.c ****   switch (GPIO_Pin)
 1423              		.loc 1 901 1 is_stmt 0 view .LVU333
 1424 0000 08B5     		push	{r3, lr}
 1425              	.LCFI24:
 1426              		.cfi_def_cfa_offset 8
 1427              		.cfi_offset 3, -8
 1428              		.cfi_offset 14, -4
 902:Core/Src/main.c ****   {
 1429              		.loc 1 902 3 is_stmt 1 view .LVU334
 1430 0002 B0F5006F 		cmp	r0, #2048
 1431 0006 3AD0     		beq	.L92
 1432 0008 1DD8     		bhi	.L93
 1433 000a 2028     		cmp	r0, #32
 1434 000c 5DD0     		beq	.L94
 1435 000e 4028     		cmp	r0, #64
 1436 0010 3DD1     		bne	.L91
 937:Core/Src/main.c ****     {
 1437              		.loc 1 937 5 view .LVU335
 937:Core/Src/main.c ****     {
 1438              		.loc 1 937 9 is_stmt 0 view .LVU336
 1439 0012 FFF7FEFF 		bl	HAL_GetTick
 1440              	.LVL121:
 937:Core/Src/main.c ****     {
 1441              		.loc 1 937 39 discriminator 1 view .LVU337
 1442 0016 3B4B     		ldr	r3, .L104
 1443 0018 9B68     		ldr	r3, [r3, #8]
 937:Core/Src/main.c ****     {
 1444              		.loc 1 937 43 discriminator 1 view .LVU338
 1445 001a 03F59673 		add	r3, r3, #300
 937:Core/Src/main.c ****     {
 1446              		.loc 1 937 8 discriminator 1 view .LVU339
 1447 001e 9842     		cmp	r0, r3
 1448 0020 35D9     		bls	.L91
 939:Core/Src/main.c ****       buttonElapsed[2] = HAL_GetTick();
 1449              		.loc 1 939 7 is_stmt 1 view .LVU340
 1450 0022 3948     		ldr	r0, .L104+4
 1451 0024 FFF7FEFF 		bl	puts
 1452              	.LVL122:
 940:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1453              		.loc 1 940 7 view .LVU341
 940:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1454              		.loc 1 940 26 is_stmt 0 view .LVU342
 1455 0028 FFF7FEFF 		bl	HAL_GetTick
 1456              	.LVL123:
 940:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1457              		.loc 1 940 24 discriminator 1 view .LVU343
 1458 002c 354B     		ldr	r3, .L104
 1459 002e 9860     		str	r0, [r3, #8]
 941:Core/Src/main.c ****       if (etat == ETAT_INITIALISATION)
 1460              		.loc 1 941 7 is_stmt 1 view .LVU344
 1461 0030 0520     		movs	r0, #5
 1462 0032 FFF7FEFF 		bl	play_track
 1463              	.LVL124:
 942:Core/Src/main.c ****       {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 80


 1464              		.loc 1 942 7 view .LVU345
 942:Core/Src/main.c ****       {
 1465              		.loc 1 942 16 is_stmt 0 view .LVU346
 1466 0036 354B     		ldr	r3, .L104+8
 1467 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 942:Core/Src/main.c ****       {
 1468              		.loc 1 942 10 view .LVU347
 1469 003a 002B     		cmp	r3, #0
 1470 003c 41D1     		bne	.L100
 944:Core/Src/main.c ****       }
 1471              		.loc 1 944 9 is_stmt 1 view .LVU348
 1472 003e 0320     		movs	r0, #3
 1473 0040 FFF7FEFF 		bl	checkButtonOrderPlant
 1474              	.LVL125:
 1475 0044 23E0     		b	.L91
 1476              	.LVL126:
 1477              	.L93:
 902:Core/Src/main.c ****   {
 1478              		.loc 1 902 3 is_stmt 0 view .LVU349
 1479 0046 B0F5805F 		cmp	r0, #4096
 1480 004a 20D1     		bne	.L91
 921:Core/Src/main.c ****     {
 1481              		.loc 1 921 5 is_stmt 1 view .LVU350
 921:Core/Src/main.c ****     {
 1482              		.loc 1 921 9 is_stmt 0 view .LVU351
 1483 004c FFF7FEFF 		bl	HAL_GetTick
 1484              	.LVL127:
 921:Core/Src/main.c ****     {
 1485              		.loc 1 921 39 discriminator 1 view .LVU352
 1486 0050 2C4B     		ldr	r3, .L104
 1487 0052 5B68     		ldr	r3, [r3, #4]
 921:Core/Src/main.c ****     {
 1488              		.loc 1 921 43 discriminator 1 view .LVU353
 1489 0054 03F59673 		add	r3, r3, #300
 921:Core/Src/main.c ****     {
 1490              		.loc 1 921 8 discriminator 1 view .LVU354
 1491 0058 9842     		cmp	r0, r3
 1492 005a 18D9     		bls	.L91
 923:Core/Src/main.c ****       buttonElapsed[1] = HAL_GetTick();
 1493              		.loc 1 923 7 is_stmt 1 view .LVU355
 1494 005c 2C48     		ldr	r0, .L104+12
 1495 005e FFF7FEFF 		bl	puts
 1496              	.LVL128:
 924:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1497              		.loc 1 924 7 view .LVU356
 924:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1498              		.loc 1 924 26 is_stmt 0 view .LVU357
 1499 0062 FFF7FEFF 		bl	HAL_GetTick
 1500              	.LVL129:
 924:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1501              		.loc 1 924 24 discriminator 1 view .LVU358
 1502 0066 274B     		ldr	r3, .L104
 1503 0068 5860     		str	r0, [r3, #4]
 925:Core/Src/main.c ****       if (etat == ETAT_INITIALISATION)
 1504              		.loc 1 925 7 is_stmt 1 view .LVU359
 1505 006a 0520     		movs	r0, #5
 1506 006c FFF7FEFF 		bl	play_track
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 81


 1507              	.LVL130:
 926:Core/Src/main.c ****       {
 1508              		.loc 1 926 7 view .LVU360
 926:Core/Src/main.c ****       {
 1509              		.loc 1 926 16 is_stmt 0 view .LVU361
 1510 0070 264B     		ldr	r3, .L104+8
 1511 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 926:Core/Src/main.c ****       {
 1512              		.loc 1 926 10 view .LVU362
 1513 0074 0BBB     		cbnz	r3, .L99
 928:Core/Src/main.c ****       }
 1514              		.loc 1 928 9 is_stmt 1 view .LVU363
 1515 0076 0220     		movs	r0, #2
 1516 0078 FFF7FEFF 		bl	checkButtonOrderPlant
 1517              	.LVL131:
 1518 007c 07E0     		b	.L91
 1519              	.LVL132:
 1520              	.L92:
 905:Core/Src/main.c ****     {
 1521              		.loc 1 905 5 view .LVU364
 905:Core/Src/main.c ****     {
 1522              		.loc 1 905 9 is_stmt 0 view .LVU365
 1523 007e FFF7FEFF 		bl	HAL_GetTick
 1524              	.LVL133:
 905:Core/Src/main.c ****     {
 1525              		.loc 1 905 39 discriminator 1 view .LVU366
 1526 0082 204B     		ldr	r3, .L104
 1527 0084 1B68     		ldr	r3, [r3]
 905:Core/Src/main.c ****     {
 1528              		.loc 1 905 43 discriminator 1 view .LVU367
 1529 0086 03F59673 		add	r3, r3, #300
 905:Core/Src/main.c ****     {
 1530              		.loc 1 905 8 discriminator 1 view .LVU368
 1531 008a 9842     		cmp	r0, r3
 1532 008c 00D8     		bhi	.L103
 1533              	.L91:
 971:Core/Src/main.c **** // endregion
 1534              		.loc 1 971 1 view .LVU369
 1535 008e 08BD     		pop	{r3, pc}
 1536              	.L103:
 907:Core/Src/main.c ****       buttonElapsed[0] = HAL_GetTick();
 1537              		.loc 1 907 7 is_stmt 1 view .LVU370
 1538 0090 2048     		ldr	r0, .L104+16
 1539 0092 FFF7FEFF 		bl	puts
 1540              	.LVL134:
 908:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1541              		.loc 1 908 7 view .LVU371
 908:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1542              		.loc 1 908 26 is_stmt 0 view .LVU372
 1543 0096 FFF7FEFF 		bl	HAL_GetTick
 1544              	.LVL135:
 908:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1545              		.loc 1 908 24 discriminator 1 view .LVU373
 1546 009a 1A4B     		ldr	r3, .L104
 1547 009c 1860     		str	r0, [r3]
 909:Core/Src/main.c ****       if (etat == ETAT_INITIALISATION)
 1548              		.loc 1 909 7 is_stmt 1 view .LVU374
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 82


 1549 009e 0520     		movs	r0, #5
 1550 00a0 FFF7FEFF 		bl	play_track
 1551              	.LVL136:
 910:Core/Src/main.c ****       {
 1552              		.loc 1 910 7 view .LVU375
 910:Core/Src/main.c ****       {
 1553              		.loc 1 910 16 is_stmt 0 view .LVU376
 1554 00a4 194B     		ldr	r3, .L104+8
 1555 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 910:Core/Src/main.c ****       {
 1556              		.loc 1 910 10 view .LVU377
 1557 00a8 1BB9     		cbnz	r3, .L98
 912:Core/Src/main.c ****       }
 1558              		.loc 1 912 9 is_stmt 1 view .LVU378
 1559 00aa 0120     		movs	r0, #1
 1560 00ac FFF7FEFF 		bl	checkButtonOrderPlant
 1561              	.LVL137:
 1562 00b0 EDE7     		b	.L91
 1563              	.L98:
 916:Core/Src/main.c ****       }
 1564              		.loc 1 916 9 view .LVU379
 1565 00b2 0120     		movs	r0, #1
 1566 00b4 FFF7FEFF 		bl	checkUserInput
 1567              	.LVL138:
 1568 00b8 E9E7     		b	.L91
 1569              	.L99:
 932:Core/Src/main.c ****       }
 1570              		.loc 1 932 9 view .LVU380
 1571 00ba 0220     		movs	r0, #2
 1572 00bc FFF7FEFF 		bl	checkUserInput
 1573              	.LVL139:
 1574 00c0 E5E7     		b	.L91
 1575              	.L100:
 948:Core/Src/main.c ****       }
 1576              		.loc 1 948 9 view .LVU381
 1577 00c2 0320     		movs	r0, #3
 1578 00c4 FFF7FEFF 		bl	checkUserInput
 1579              	.LVL140:
 1580 00c8 E1E7     		b	.L91
 1581              	.LVL141:
 1582              	.L94:
 953:Core/Src/main.c ****     {
 1583              		.loc 1 953 5 view .LVU382
 953:Core/Src/main.c ****     {
 1584              		.loc 1 953 9 is_stmt 0 view .LVU383
 1585 00ca FFF7FEFF 		bl	HAL_GetTick
 1586              	.LVL142:
 953:Core/Src/main.c ****     {
 1587              		.loc 1 953 39 discriminator 1 view .LVU384
 1588 00ce 0D4B     		ldr	r3, .L104
 1589 00d0 DB68     		ldr	r3, [r3, #12]
 953:Core/Src/main.c ****     {
 1590              		.loc 1 953 43 discriminator 1 view .LVU385
 1591 00d2 03F59673 		add	r3, r3, #300
 953:Core/Src/main.c ****     {
 1592              		.loc 1 953 8 discriminator 1 view .LVU386
 1593 00d6 9842     		cmp	r0, r3
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 83


 1594 00d8 D9D9     		bls	.L91
 955:Core/Src/main.c ****       buttonElapsed[3] = HAL_GetTick();
 1595              		.loc 1 955 7 is_stmt 1 view .LVU387
 1596 00da 0F48     		ldr	r0, .L104+20
 1597 00dc FFF7FEFF 		bl	puts
 1598              	.LVL143:
 956:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1599              		.loc 1 956 7 view .LVU388
 956:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1600              		.loc 1 956 26 is_stmt 0 view .LVU389
 1601 00e0 FFF7FEFF 		bl	HAL_GetTick
 1602              	.LVL144:
 956:Core/Src/main.c ****       play_track(SOUND_PUSH_BUTTON);
 1603              		.loc 1 956 24 discriminator 1 view .LVU390
 1604 00e4 074B     		ldr	r3, .L104
 1605 00e6 D860     		str	r0, [r3, #12]
 957:Core/Src/main.c ****       if (etat == ETAT_INITIALISATION)
 1606              		.loc 1 957 7 is_stmt 1 view .LVU391
 1607 00e8 0520     		movs	r0, #5
 1608 00ea FFF7FEFF 		bl	play_track
 1609              	.LVL145:
 958:Core/Src/main.c ****       {
 1610              		.loc 1 958 7 view .LVU392
 958:Core/Src/main.c ****       {
 1611              		.loc 1 958 16 is_stmt 0 view .LVU393
 1612 00ee 074B     		ldr	r3, .L104+8
 1613 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 958:Core/Src/main.c ****       {
 1614              		.loc 1 958 10 view .LVU394
 1615 00f2 1BB9     		cbnz	r3, .L101
 960:Core/Src/main.c ****       }
 1616              		.loc 1 960 9 is_stmt 1 view .LVU395
 1617 00f4 0420     		movs	r0, #4
 1618 00f6 FFF7FEFF 		bl	checkButtonOrderPlant
 1619              	.LVL146:
 1620 00fa C8E7     		b	.L91
 1621              	.L101:
 964:Core/Src/main.c ****       }
 1622              		.loc 1 964 9 view .LVU396
 1623 00fc 0420     		movs	r0, #4
 1624 00fe FFF7FEFF 		bl	checkUserInput
 1625              	.LVL147:
 971:Core/Src/main.c **** // endregion
 1626              		.loc 1 971 1 is_stmt 0 view .LVU397
 1627 0102 C4E7     		b	.L91
 1628              	.L105:
 1629              		.align	2
 1630              	.L104:
 1631 0104 00000000 		.word	buttonElapsed
 1632 0108 10000000 		.word	.LC2
 1633 010c 00000000 		.word	etat
 1634 0110 08000000 		.word	.LC1
 1635 0114 00000000 		.word	.LC0
 1636 0118 18000000 		.word	.LC3
 1637              		.cfi_endproc
 1638              	.LFE94:
 1640              		.section	.text.secondToClockDisplay,"ax",%progbits
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 84


 1641              		.align	1
 1642              		.global	secondToClockDisplay
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1647              	secondToClockDisplay:
 1648              	.LVL148:
 1649              	.LFB100:
1081:Core/Src/main.c **** 
1082:Core/Src/main.c **** // Gestion du temps
1083:Core/Src/main.c **** //  region[rgba(180, 100, 0, 0.1)]
1084:Core/Src/main.c **** void secondToClockDisplay(uint16_t time_in_second)
1085:Core/Src/main.c **** {
 1650              		.loc 1 1085 1 is_stmt 1 view -0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 0, uses_anonymous_args = 0
 1654              		@ link register save eliminated.
1086:Core/Src/main.c **** }
 1655              		.loc 1 1086 1 view .LVU399
 1656 0000 7047     		bx	lr
 1657              		.cfi_endproc
 1658              	.LFE100:
 1660              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 1661              		.align	2
 1662              	.LC4:
 1663 0000 6164634F 		.ascii	"adcOk\015\000"
 1663      6B0D00
 1664              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1665              		.align	1
 1666              		.global	HAL_TIM_PeriodElapsedCallback
 1667              		.syntax unified
 1668              		.thumb
 1669              		.thumb_func
 1671              	HAL_TIM_PeriodElapsedCallback:
 1672              	.LVL149:
 1673              	.LFB101:
1087:Core/Src/main.c **** 
1088:Core/Src/main.c **** // interruption timer
1089:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1090:Core/Src/main.c **** {
 1674              		.loc 1 1090 1 view -0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 0
 1677              		@ frame_needed = 0, uses_anonymous_args = 0
 1678              		.loc 1 1090 1 is_stmt 0 view .LVU401
 1679 0000 38B5     		push	{r3, r4, r5, lr}
 1680              	.LCFI25:
 1681              		.cfi_def_cfa_offset 16
 1682              		.cfi_offset 3, -16
 1683              		.cfi_offset 4, -12
 1684              		.cfi_offset 5, -8
 1685              		.cfi_offset 14, -4
 1686 0002 0446     		mov	r4, r0
1091:Core/Src/main.c ****   if (htim->Instance == TIM2) // Timer de 5ms
 1687              		.loc 1 1091 3 is_stmt 1 view .LVU402
 1688              		.loc 1 1091 11 is_stmt 0 view .LVU403
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 85


 1689 0004 0368     		ldr	r3, [r0]
 1690              		.loc 1 1091 6 view .LVU404
 1691 0006 B3F1804F 		cmp	r3, #1073741824
 1692 000a 04D0     		beq	.L111
 1693              	.LVL150:
 1694              	.L108:
1092:Core/Src/main.c ****   {
1093:Core/Src/main.c ****     // Démarrer la conversion ADC
1094:Core/Src/main.c ****     HAL_ADC_Start_DMA(&hadc, (uint32_t *)adcData, 2);
1095:Core/Src/main.c ****     // update PWM des leds
1096:Core/Src/main.c ****     ledUpdate(adcData[0], &htim9, TIM_CHANNEL_2);
1097:Core/Src/main.c ****     ledUpdate(adcData[1], &htim11, TIM_CHANNEL_1);
1098:Core/Src/main.c **** 
1099:Core/Src/main.c ****     // génération de la seed
1100:Core/Src/main.c ****     randomGLC();
1101:Core/Src/main.c **** 
1102:Core/Src/main.c ****     // Gestion du bipbip
1103:Core/Src/main.c ****     flag_bipbip++;
1104:Core/Src/main.c **** 
1105:Core/Src/main.c ****     // vérification valeur ADC
1106:Core/Src/main.c ****     if ((adcData[0] > 0xF100) && (adcData[1] > 0xF100))
1107:Core/Src/main.c ****     {
1108:Core/Src/main.c ****       adcOk = true;
1109:Core/Src/main.c ****       printf("adcOk\r\n");
1110:Core/Src/main.c ****     }
1111:Core/Src/main.c ****   }
1112:Core/Src/main.c **** 
1113:Core/Src/main.c ****   if (htim->Instance == TIM10) // Timer de 1s
 1695              		.loc 1 1113 3 is_stmt 1 view .LVU405
 1696              		.loc 1 1113 11 is_stmt 0 view .LVU406
 1697 000c 2268     		ldr	r2, [r4]
 1698              		.loc 1 1113 6 view .LVU407
 1699 000e 174B     		ldr	r3, .L113
 1700 0010 9A42     		cmp	r2, r3
 1701 0012 25D0     		beq	.L112
 1702              	.LVL151:
 1703              	.L107:
1114:Core/Src/main.c ****   {
1115:Core/Src/main.c ****     time_in_second = BCD_updateClock(time_in_second);
1116:Core/Src/main.c ****   }
1117:Core/Src/main.c **** 
1118:Core/Src/main.c ****   if (htim->Instance == TIM3)
1119:Core/Src/main.c ****   {
1120:Core/Src/main.c ****   }
1121:Core/Src/main.c **** }
 1704              		.loc 1 1121 1 view .LVU408
 1705 0014 38BD     		pop	{r3, r4, r5, pc}
 1706              	.LVL152:
 1707              	.L111:
1094:Core/Src/main.c ****     // update PWM des leds
 1708              		.loc 1 1094 5 is_stmt 1 view .LVU409
 1709 0016 164D     		ldr	r5, .L113+4
 1710 0018 0222     		movs	r2, #2
 1711 001a 2946     		mov	r1, r5
 1712 001c 1548     		ldr	r0, .L113+8
 1713              	.LVL153:
1094:Core/Src/main.c ****     // update PWM des leds
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 86


 1714              		.loc 1 1094 5 is_stmt 0 view .LVU410
 1715 001e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1716              	.LVL154:
1096:Core/Src/main.c ****     ledUpdate(adcData[1], &htim11, TIM_CHANNEL_1);
 1717              		.loc 1 1096 5 is_stmt 1 view .LVU411
 1718 0022 0422     		movs	r2, #4
 1719 0024 1449     		ldr	r1, .L113+12
 1720 0026 2888     		ldrh	r0, [r5]
 1721 0028 FFF7FEFF 		bl	ledUpdate
 1722              	.LVL155:
1097:Core/Src/main.c **** 
 1723              		.loc 1 1097 5 view .LVU412
 1724 002c 0022     		movs	r2, #0
 1725 002e 1349     		ldr	r1, .L113+16
 1726 0030 6888     		ldrh	r0, [r5, #2]
 1727 0032 FFF7FEFF 		bl	ledUpdate
 1728              	.LVL156:
1100:Core/Src/main.c **** 
 1729              		.loc 1 1100 5 view .LVU413
 1730 0036 FFF7FEFF 		bl	randomGLC
 1731              	.LVL157:
1103:Core/Src/main.c **** 
 1732              		.loc 1 1103 5 view .LVU414
1103:Core/Src/main.c **** 
 1733              		.loc 1 1103 16 is_stmt 0 view .LVU415
 1734 003a 114A     		ldr	r2, .L113+20
 1735 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1736 003e 0133     		adds	r3, r3, #1
 1737 0040 1370     		strb	r3, [r2]
1106:Core/Src/main.c ****     {
 1738              		.loc 1 1106 5 is_stmt 1 view .LVU416
1106:Core/Src/main.c ****     {
 1739              		.loc 1 1106 17 is_stmt 0 view .LVU417
 1740 0042 2B88     		ldrh	r3, [r5]
1106:Core/Src/main.c ****     {
 1741              		.loc 1 1106 8 view .LVU418
 1742 0044 B3F5714F 		cmp	r3, #61696
 1743 0048 E0D9     		bls	.L108
1106:Core/Src/main.c ****     {
 1744              		.loc 1 1106 42 discriminator 1 view .LVU419
 1745 004a 6B88     		ldrh	r3, [r5, #2]
1106:Core/Src/main.c ****     {
 1746              		.loc 1 1106 31 discriminator 1 view .LVU420
 1747 004c B3F5714F 		cmp	r3, #61696
 1748 0050 DCD9     		bls	.L108
1108:Core/Src/main.c ****       printf("adcOk\r\n");
 1749              		.loc 1 1108 7 is_stmt 1 view .LVU421
1108:Core/Src/main.c ****       printf("adcOk\r\n");
 1750              		.loc 1 1108 13 is_stmt 0 view .LVU422
 1751 0052 0C4B     		ldr	r3, .L113+24
 1752 0054 0122     		movs	r2, #1
 1753 0056 1A70     		strb	r2, [r3]
1109:Core/Src/main.c ****     }
 1754              		.loc 1 1109 7 is_stmt 1 view .LVU423
 1755 0058 0B48     		ldr	r0, .L113+28
 1756 005a FFF7FEFF 		bl	puts
 1757              	.LVL158:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 87


 1758 005e D5E7     		b	.L108
 1759              	.L112:
1115:Core/Src/main.c ****   }
 1760              		.loc 1 1115 5 view .LVU424
1115:Core/Src/main.c ****   }
 1761              		.loc 1 1115 22 is_stmt 0 view .LVU425
 1762 0060 0A4C     		ldr	r4, .L113+32
 1763              	.LVL159:
1115:Core/Src/main.c ****   }
 1764              		.loc 1 1115 22 view .LVU426
 1765 0062 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1766 0064 FFF7FEFF 		bl	BCD_updateClock
 1767              	.LVL160:
1115:Core/Src/main.c ****   }
 1768              		.loc 1 1115 20 discriminator 1 view .LVU427
 1769 0068 2070     		strb	r0, [r4]
1118:Core/Src/main.c ****   {
 1770              		.loc 1 1118 3 is_stmt 1 view .LVU428
1120:Core/Src/main.c **** }
 1771              		.loc 1 1120 3 view .LVU429
 1772              		.loc 1 1121 1 is_stmt 0 view .LVU430
 1773 006a D3E7     		b	.L107
 1774              	.L114:
 1775              		.align	2
 1776              	.L113:
 1777 006c 000C0140 		.word	1073810432
 1778 0070 00000000 		.word	adcData
 1779 0074 00000000 		.word	hadc
 1780 0078 00000000 		.word	htim9
 1781 007c 00000000 		.word	htim11
 1782 0080 00000000 		.word	flag_bipbip
 1783 0084 00000000 		.word	adcOk
 1784 0088 00000000 		.word	.LC4
 1785 008c 00000000 		.word	time_in_second
 1786              		.cfi_endproc
 1787              	.LFE101:
 1789              		.section	.text.Error_Handler,"ax",%progbits
 1790              		.align	1
 1791              		.global	Error_Handler
 1792              		.syntax unified
 1793              		.thumb
 1794              		.thumb_func
 1796              	Error_Handler:
 1797              	.LFB102:
1122:Core/Src/main.c **** // endregion
1123:Core/Src/main.c **** /* USER CODE END 4 */
1124:Core/Src/main.c **** 
1125:Core/Src/main.c **** /**
1126:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
1127:Core/Src/main.c ****  * @retval None
1128:Core/Src/main.c ****  */
1129:Core/Src/main.c **** void Error_Handler(void)
1130:Core/Src/main.c **** {
 1798              		.loc 1 1130 1 is_stmt 1 view -0
 1799              		.cfi_startproc
 1800              		@ Volatile: function does not return.
 1801              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 88


 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
1131:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1132:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1133:Core/Src/main.c ****   __disable_irq();
 1804              		.loc 1 1133 3 view .LVU432
 1805              	.LBB13:
 1806              	.LBI13:
 1807              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 89


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 90


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1808              		.loc 3 140 27 view .LVU433
 1809              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1810              		.loc 3 142 3 view .LVU434
 1811              		.syntax unified
 1812              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1813 0000 72B6     		cpsid i
 1814              	@ 0 "" 2
 1815              		.thumb
 1816              		.syntax unified
 1817              	.L116:
 1818              	.LBE14:
 1819              	.LBE13:
1134:Core/Src/main.c ****   while (1)
 1820              		.loc 1 1134 3 view .LVU435
1135:Core/Src/main.c ****   {
1136:Core/Src/main.c ****   }
 1821              		.loc 1 1136 3 view .LVU436
1134:Core/Src/main.c ****   while (1)
 1822              		.loc 1 1134 9 view .LVU437
 1823 0002 FEE7     		b	.L116
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 91


 1824              		.cfi_endproc
 1825              	.LFE102:
 1827              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1828              		.align	1
 1829              		.syntax unified
 1830              		.thumb
 1831              		.thumb_func
 1833              	MX_USART2_UART_Init:
 1834              	.LFB85:
 667:Core/Src/main.c **** 
 1835              		.loc 1 667 1 view -0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 0
 1838              		@ frame_needed = 0, uses_anonymous_args = 0
 1839 0000 08B5     		push	{r3, lr}
 1840              	.LCFI26:
 1841              		.cfi_def_cfa_offset 8
 1842              		.cfi_offset 3, -8
 1843              		.cfi_offset 14, -4
 676:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1844              		.loc 1 676 3 view .LVU439
 676:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1845              		.loc 1 676 19 is_stmt 0 view .LVU440
 1846 0002 0A48     		ldr	r0, .L121
 1847 0004 0A4B     		ldr	r3, .L121+4
 1848 0006 0360     		str	r3, [r0]
 677:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1849              		.loc 1 677 3 is_stmt 1 view .LVU441
 677:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1850              		.loc 1 677 24 is_stmt 0 view .LVU442
 1851 0008 4FF4E133 		mov	r3, #115200
 1852 000c 4360     		str	r3, [r0, #4]
 678:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1853              		.loc 1 678 3 is_stmt 1 view .LVU443
 678:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1854              		.loc 1 678 26 is_stmt 0 view .LVU444
 1855 000e 0023     		movs	r3, #0
 1856 0010 8360     		str	r3, [r0, #8]
 679:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1857              		.loc 1 679 3 is_stmt 1 view .LVU445
 679:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1858              		.loc 1 679 24 is_stmt 0 view .LVU446
 1859 0012 C360     		str	r3, [r0, #12]
 680:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1860              		.loc 1 680 3 is_stmt 1 view .LVU447
 680:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1861              		.loc 1 680 22 is_stmt 0 view .LVU448
 1862 0014 0361     		str	r3, [r0, #16]
 681:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1863              		.loc 1 681 3 is_stmt 1 view .LVU449
 681:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1864              		.loc 1 681 20 is_stmt 0 view .LVU450
 1865 0016 0C22     		movs	r2, #12
 1866 0018 4261     		str	r2, [r0, #20]
 682:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1867              		.loc 1 682 3 is_stmt 1 view .LVU451
 682:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 92


 1868              		.loc 1 682 25 is_stmt 0 view .LVU452
 1869 001a 8361     		str	r3, [r0, #24]
 683:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1870              		.loc 1 683 3 is_stmt 1 view .LVU453
 683:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1871              		.loc 1 683 28 is_stmt 0 view .LVU454
 1872 001c C361     		str	r3, [r0, #28]
 684:Core/Src/main.c ****   {
 1873              		.loc 1 684 3 is_stmt 1 view .LVU455
 684:Core/Src/main.c ****   {
 1874              		.loc 1 684 7 is_stmt 0 view .LVU456
 1875 001e FFF7FEFF 		bl	HAL_UART_Init
 1876              	.LVL161:
 684:Core/Src/main.c ****   {
 1877              		.loc 1 684 6 discriminator 1 view .LVU457
 1878 0022 00B9     		cbnz	r0, .L120
 691:Core/Src/main.c **** 
 1879              		.loc 1 691 1 view .LVU458
 1880 0024 08BD     		pop	{r3, pc}
 1881              	.L120:
 686:Core/Src/main.c ****   }
 1882              		.loc 1 686 5 is_stmt 1 view .LVU459
 1883 0026 FFF7FEFF 		bl	Error_Handler
 1884              	.LVL162:
 1885              	.L122:
 1886 002a 00BF     		.align	2
 1887              	.L121:
 1888 002c 00000000 		.word	huart2
 1889 0030 00440040 		.word	1073759232
 1890              		.cfi_endproc
 1891              	.LFE85:
 1893              		.section	.text.MX_ADC_Init,"ax",%progbits
 1894              		.align	1
 1895              		.syntax unified
 1896              		.thumb
 1897              		.thumb_func
 1899              	MX_ADC_Init:
 1900              	.LFB77:
 321:Core/Src/main.c **** 
 1901              		.loc 1 321 1 view -0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 16
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 1905 0000 00B5     		push	{lr}
 1906              	.LCFI27:
 1907              		.cfi_def_cfa_offset 4
 1908              		.cfi_offset 14, -4
 1909 0002 85B0     		sub	sp, sp, #20
 1910              	.LCFI28:
 1911              		.cfi_def_cfa_offset 24
 327:Core/Src/main.c **** 
 1912              		.loc 1 327 3 view .LVU461
 327:Core/Src/main.c **** 
 1913              		.loc 1 327 26 is_stmt 0 view .LVU462
 1914 0004 0023     		movs	r3, #0
 1915 0006 0193     		str	r3, [sp, #4]
 1916 0008 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 93


 1917 000a 0393     		str	r3, [sp, #12]
 335:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 1918              		.loc 1 335 3 is_stmt 1 view .LVU463
 335:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 1919              		.loc 1 335 17 is_stmt 0 view .LVU464
 1920 000c 1B48     		ldr	r0, .L131
 1921 000e 1C4A     		ldr	r2, .L131+4
 1922 0010 0260     		str	r2, [r0]
 336:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 1923              		.loc 1 336 3 is_stmt 1 view .LVU465
 336:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 1924              		.loc 1 336 28 is_stmt 0 view .LVU466
 1925 0012 4360     		str	r3, [r0, #4]
 337:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1926              		.loc 1 337 3 is_stmt 1 view .LVU467
 337:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1927              		.loc 1 337 24 is_stmt 0 view .LVU468
 1928 0014 8360     		str	r3, [r0, #8]
 338:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_ENABLE;
 1929              		.loc 1 338 3 is_stmt 1 view .LVU469
 338:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_ENABLE;
 1930              		.loc 1 338 23 is_stmt 0 view .LVU470
 1931 0016 C360     		str	r3, [r0, #12]
 339:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 1932              		.loc 1 339 3 is_stmt 1 view .LVU471
 339:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 1933              		.loc 1 339 26 is_stmt 0 view .LVU472
 1934 0018 4FF48072 		mov	r2, #256
 1935 001c 0261     		str	r2, [r0, #16]
 340:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = ADC_AUTOWAIT_DISABLE;
 1936              		.loc 1 340 3 is_stmt 1 view .LVU473
 340:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = ADC_AUTOWAIT_DISABLE;
 1937              		.loc 1 340 26 is_stmt 0 view .LVU474
 1938 001e 4361     		str	r3, [r0, #20]
 341:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = ADC_AUTOPOWEROFF_DISABLE;
 1939              		.loc 1 341 3 is_stmt 1 view .LVU475
 341:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = ADC_AUTOPOWEROFF_DISABLE;
 1940              		.loc 1 341 30 is_stmt 0 view .LVU476
 1941 0020 8361     		str	r3, [r0, #24]
 342:Core/Src/main.c ****   hadc.Init.ChannelsBank = ADC_CHANNELS_BANK_A;
 1942              		.loc 1 342 3 is_stmt 1 view .LVU477
 342:Core/Src/main.c ****   hadc.Init.ChannelsBank = ADC_CHANNELS_BANK_A;
 1943              		.loc 1 342 34 is_stmt 0 view .LVU478
 1944 0022 C361     		str	r3, [r0, #28]
 343:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 1945              		.loc 1 343 3 is_stmt 1 view .LVU479
 343:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 1946              		.loc 1 343 26 is_stmt 0 view .LVU480
 1947 0024 0362     		str	r3, [r0, #32]
 344:Core/Src/main.c ****   hadc.Init.NbrOfConversion = 2;
 1948              		.loc 1 344 3 is_stmt 1 view .LVU481
 344:Core/Src/main.c ****   hadc.Init.NbrOfConversion = 2;
 1949              		.loc 1 344 32 is_stmt 0 view .LVU482
 1950 0026 80F82430 		strb	r3, [r0, #36]
 345:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 1951              		.loc 1 345 3 is_stmt 1 view .LVU483
 345:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 94


 1952              		.loc 1 345 29 is_stmt 0 view .LVU484
 1953 002a 0222     		movs	r2, #2
 1954 002c 8262     		str	r2, [r0, #40]
 346:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1955              		.loc 1 346 3 is_stmt 1 view .LVU485
 346:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1956              		.loc 1 346 35 is_stmt 0 view .LVU486
 1957 002e 80F82C30 		strb	r3, [r0, #44]
 347:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1958              		.loc 1 347 3 is_stmt 1 view .LVU487
 347:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1959              		.loc 1 347 30 is_stmt 0 view .LVU488
 1960 0032 1022     		movs	r2, #16
 1961 0034 4263     		str	r2, [r0, #52]
 348:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
 1962              		.loc 1 348 3 is_stmt 1 view .LVU489
 348:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
 1963              		.loc 1 348 34 is_stmt 0 view .LVU490
 1964 0036 8363     		str	r3, [r0, #56]
 349:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 1965              		.loc 1 349 3 is_stmt 1 view .LVU491
 349:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 1966              		.loc 1 349 35 is_stmt 0 view .LVU492
 1967 0038 0123     		movs	r3, #1
 1968 003a 80F83C30 		strb	r3, [r0, #60]
 350:Core/Src/main.c ****   {
 1969              		.loc 1 350 3 is_stmt 1 view .LVU493
 350:Core/Src/main.c ****   {
 1970              		.loc 1 350 7 is_stmt 0 view .LVU494
 1971 003e FFF7FEFF 		bl	HAL_ADC_Init
 1972              	.LVL163:
 350:Core/Src/main.c ****   {
 1973              		.loc 1 350 6 discriminator 1 view .LVU495
 1974 0042 A8B9     		cbnz	r0, .L128
 357:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1975              		.loc 1 357 3 is_stmt 1 view .LVU496
 357:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1976              		.loc 1 357 19 is_stmt 0 view .LVU497
 1977 0044 0023     		movs	r3, #0
 1978 0046 0193     		str	r3, [sp, #4]
 358:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_4CYCLES;
 1979              		.loc 1 358 3 is_stmt 1 view .LVU498
 358:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_4CYCLES;
 1980              		.loc 1 358 16 is_stmt 0 view .LVU499
 1981 0048 0122     		movs	r2, #1
 1982 004a 0292     		str	r2, [sp, #8]
 359:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 1983              		.loc 1 359 3 is_stmt 1 view .LVU500
 359:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 1984              		.loc 1 359 24 is_stmt 0 view .LVU501
 1985 004c 0393     		str	r3, [sp, #12]
 360:Core/Src/main.c ****   {
 1986              		.loc 1 360 3 is_stmt 1 view .LVU502
 360:Core/Src/main.c ****   {
 1987              		.loc 1 360 7 is_stmt 0 view .LVU503
 1988 004e 01A9     		add	r1, sp, #4
 1989 0050 0A48     		ldr	r0, .L131
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 95


 1990 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1991              	.LVL164:
 360:Core/Src/main.c ****   {
 1992              		.loc 1 360 6 discriminator 1 view .LVU504
 1993 0056 68B9     		cbnz	r0, .L129
 367:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1994              		.loc 1 367 3 is_stmt 1 view .LVU505
 367:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1995              		.loc 1 367 19 is_stmt 0 view .LVU506
 1996 0058 0123     		movs	r3, #1
 1997 005a 0193     		str	r3, [sp, #4]
 368:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 1998              		.loc 1 368 3 is_stmt 1 view .LVU507
 368:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 1999              		.loc 1 368 16 is_stmt 0 view .LVU508
 2000 005c 0223     		movs	r3, #2
 2001 005e 0293     		str	r3, [sp, #8]
 369:Core/Src/main.c ****   {
 2002              		.loc 1 369 3 is_stmt 1 view .LVU509
 369:Core/Src/main.c ****   {
 2003              		.loc 1 369 7 is_stmt 0 view .LVU510
 2004 0060 01A9     		add	r1, sp, #4
 2005 0062 0648     		ldr	r0, .L131
 2006 0064 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 2007              	.LVL165:
 369:Core/Src/main.c ****   {
 2008              		.loc 1 369 6 discriminator 1 view .LVU511
 2009 0068 30B9     		cbnz	r0, .L130
 376:Core/Src/main.c **** 
 2010              		.loc 1 376 1 view .LVU512
 2011 006a 05B0     		add	sp, sp, #20
 2012              	.LCFI29:
 2013              		.cfi_remember_state
 2014              		.cfi_def_cfa_offset 4
 2015              		@ sp needed
 2016 006c 5DF804FB 		ldr	pc, [sp], #4
 2017              	.L128:
 2018              	.LCFI30:
 2019              		.cfi_restore_state
 352:Core/Src/main.c ****   }
 2020              		.loc 1 352 5 is_stmt 1 view .LVU513
 2021 0070 FFF7FEFF 		bl	Error_Handler
 2022              	.LVL166:
 2023              	.L129:
 362:Core/Src/main.c ****   }
 2024              		.loc 1 362 5 view .LVU514
 2025 0074 FFF7FEFF 		bl	Error_Handler
 2026              	.LVL167:
 2027              	.L130:
 371:Core/Src/main.c ****   }
 2028              		.loc 1 371 5 view .LVU515
 2029 0078 FFF7FEFF 		bl	Error_Handler
 2030              	.LVL168:
 2031              	.L132:
 2032              		.align	2
 2033              	.L131:
 2034 007c 00000000 		.word	hadc
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 96


 2035 0080 00240140 		.word	1073816576
 2036              		.cfi_endproc
 2037              	.LFE77:
 2039              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2040              		.align	1
 2041              		.syntax unified
 2042              		.thumb
 2043              		.thumb_func
 2045              	MX_SPI1_Init:
 2046              	.LFB78:
 384:Core/Src/main.c **** 
 2047              		.loc 1 384 1 view -0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 0
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 2051 0000 08B5     		push	{r3, lr}
 2052              	.LCFI31:
 2053              		.cfi_def_cfa_offset 8
 2054              		.cfi_offset 3, -8
 2055              		.cfi_offset 14, -4
 394:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2056              		.loc 1 394 3 view .LVU517
 394:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2057              		.loc 1 394 18 is_stmt 0 view .LVU518
 2058 0002 0E48     		ldr	r0, .L137
 2059 0004 0E4B     		ldr	r3, .L137+4
 2060 0006 0360     		str	r3, [r0]
 395:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 2061              		.loc 1 395 3 is_stmt 1 view .LVU519
 395:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 2062              		.loc 1 395 19 is_stmt 0 view .LVU520
 2063 0008 4FF48273 		mov	r3, #260
 2064 000c 4360     		str	r3, [r0, #4]
 396:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2065              		.loc 1 396 3 is_stmt 1 view .LVU521
 396:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2066              		.loc 1 396 24 is_stmt 0 view .LVU522
 2067 000e 4FF40043 		mov	r3, #32768
 2068 0012 8360     		str	r3, [r0, #8]
 397:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2069              		.loc 1 397 3 is_stmt 1 view .LVU523
 397:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2070              		.loc 1 397 23 is_stmt 0 view .LVU524
 2071 0014 0023     		movs	r3, #0
 2072 0016 C360     		str	r3, [r0, #12]
 398:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2073              		.loc 1 398 3 is_stmt 1 view .LVU525
 398:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2074              		.loc 1 398 26 is_stmt 0 view .LVU526
 2075 0018 0361     		str	r3, [r0, #16]
 399:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2076              		.loc 1 399 3 is_stmt 1 view .LVU527
 399:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2077              		.loc 1 399 23 is_stmt 0 view .LVU528
 2078 001a 4361     		str	r3, [r0, #20]
 400:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 2079              		.loc 1 400 3 is_stmt 1 view .LVU529
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 97


 400:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 2080              		.loc 1 400 18 is_stmt 0 view .LVU530
 2081 001c 4FF40072 		mov	r2, #512
 2082 0020 8261     		str	r2, [r0, #24]
 401:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2083              		.loc 1 401 3 is_stmt 1 view .LVU531
 401:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2084              		.loc 1 401 32 is_stmt 0 view .LVU532
 2085 0022 C361     		str	r3, [r0, #28]
 402:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2086              		.loc 1 402 3 is_stmt 1 view .LVU533
 402:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2087              		.loc 1 402 23 is_stmt 0 view .LVU534
 2088 0024 0362     		str	r3, [r0, #32]
 403:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2089              		.loc 1 403 3 is_stmt 1 view .LVU535
 403:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2090              		.loc 1 403 21 is_stmt 0 view .LVU536
 2091 0026 4362     		str	r3, [r0, #36]
 404:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 2092              		.loc 1 404 3 is_stmt 1 view .LVU537
 404:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 2093              		.loc 1 404 29 is_stmt 0 view .LVU538
 2094 0028 8362     		str	r3, [r0, #40]
 405:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2095              		.loc 1 405 3 is_stmt 1 view .LVU539
 405:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2096              		.loc 1 405 28 is_stmt 0 view .LVU540
 2097 002a 0A23     		movs	r3, #10
 2098 002c C362     		str	r3, [r0, #44]
 406:Core/Src/main.c ****   {
 2099              		.loc 1 406 3 is_stmt 1 view .LVU541
 406:Core/Src/main.c ****   {
 2100              		.loc 1 406 7 is_stmt 0 view .LVU542
 2101 002e FFF7FEFF 		bl	HAL_SPI_Init
 2102              	.LVL169:
 406:Core/Src/main.c ****   {
 2103              		.loc 1 406 6 discriminator 1 view .LVU543
 2104 0032 00B9     		cbnz	r0, .L136
 413:Core/Src/main.c **** 
 2105              		.loc 1 413 1 view .LVU544
 2106 0034 08BD     		pop	{r3, pc}
 2107              	.L136:
 408:Core/Src/main.c ****   }
 2108              		.loc 1 408 5 is_stmt 1 view .LVU545
 2109 0036 FFF7FEFF 		bl	Error_Handler
 2110              	.LVL170:
 2111              	.L138:
 2112 003a 00BF     		.align	2
 2113              	.L137:
 2114 003c 00000000 		.word	hspi1
 2115 0040 00300140 		.word	1073819648
 2116              		.cfi_endproc
 2117              	.LFE78:
 2119              		.section	.text.MX_TIM10_Init,"ax",%progbits
 2120              		.align	1
 2121              		.syntax unified
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 98


 2122              		.thumb
 2123              		.thumb_func
 2125              	MX_TIM10_Init:
 2126              	.LFB82:
 557:Core/Src/main.c **** 
 2127              		.loc 1 557 1 view -0
 2128              		.cfi_startproc
 2129              		@ args = 0, pretend = 0, frame = 16
 2130              		@ frame_needed = 0, uses_anonymous_args = 0
 2131 0000 00B5     		push	{lr}
 2132              	.LCFI32:
 2133              		.cfi_def_cfa_offset 4
 2134              		.cfi_offset 14, -4
 2135 0002 85B0     		sub	sp, sp, #20
 2136              	.LCFI33:
 2137              		.cfi_def_cfa_offset 24
 563:Core/Src/main.c **** 
 2138              		.loc 1 563 3 view .LVU547
 563:Core/Src/main.c **** 
 2139              		.loc 1 563 26 is_stmt 0 view .LVU548
 2140 0004 0023     		movs	r3, #0
 2141 0006 0093     		str	r3, [sp]
 2142 0008 0193     		str	r3, [sp, #4]
 2143 000a 0293     		str	r3, [sp, #8]
 2144 000c 0393     		str	r3, [sp, #12]
 568:Core/Src/main.c ****   htim10.Init.Prescaler = 999;
 2145              		.loc 1 568 3 is_stmt 1 view .LVU549
 568:Core/Src/main.c ****   htim10.Init.Prescaler = 999;
 2146              		.loc 1 568 19 is_stmt 0 view .LVU550
 2147 000e 0F48     		ldr	r0, .L145
 2148 0010 0F4A     		ldr	r2, .L145+4
 2149 0012 0260     		str	r2, [r0]
 569:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 2150              		.loc 1 569 3 is_stmt 1 view .LVU551
 569:Core/Src/main.c ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 2151              		.loc 1 569 25 is_stmt 0 view .LVU552
 2152 0014 40F2E732 		movw	r2, #999
 2153 0018 4260     		str	r2, [r0, #4]
 570:Core/Src/main.c ****   htim10.Init.Period = 31999;
 2154              		.loc 1 570 3 is_stmt 1 view .LVU553
 570:Core/Src/main.c ****   htim10.Init.Period = 31999;
 2155              		.loc 1 570 27 is_stmt 0 view .LVU554
 2156 001a 8360     		str	r3, [r0, #8]
 571:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2157              		.loc 1 571 3 is_stmt 1 view .LVU555
 571:Core/Src/main.c ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2158              		.loc 1 571 22 is_stmt 0 view .LVU556
 2159 001c 47F6FF42 		movw	r2, #31999
 2160 0020 C260     		str	r2, [r0, #12]
 572:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2161              		.loc 1 572 3 is_stmt 1 view .LVU557
 572:Core/Src/main.c ****   htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2162              		.loc 1 572 29 is_stmt 0 view .LVU558
 2163 0022 0361     		str	r3, [r0, #16]
 573:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 2164              		.loc 1 573 3 is_stmt 1 view .LVU559
 573:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 99


 2165              		.loc 1 573 33 is_stmt 0 view .LVU560
 2166 0024 4361     		str	r3, [r0, #20]
 574:Core/Src/main.c ****   {
 2167              		.loc 1 574 3 is_stmt 1 view .LVU561
 574:Core/Src/main.c ****   {
 2168              		.loc 1 574 7 is_stmt 0 view .LVU562
 2169 0026 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2170              	.LVL171:
 574:Core/Src/main.c ****   {
 2171              		.loc 1 574 6 discriminator 1 view .LVU563
 2172 002a 50B9     		cbnz	r0, .L143
 578:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim10, &sClockSourceConfig) != HAL_OK)
 2173              		.loc 1 578 3 is_stmt 1 view .LVU564
 578:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim10, &sClockSourceConfig) != HAL_OK)
 2174              		.loc 1 578 34 is_stmt 0 view .LVU565
 2175 002c 4FF48053 		mov	r3, #4096
 2176 0030 0093     		str	r3, [sp]
 579:Core/Src/main.c ****   {
 2177              		.loc 1 579 3 is_stmt 1 view .LVU566
 579:Core/Src/main.c ****   {
 2178              		.loc 1 579 7 is_stmt 0 view .LVU567
 2179 0032 6946     		mov	r1, sp
 2180 0034 0548     		ldr	r0, .L145
 2181 0036 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2182              	.LVL172:
 579:Core/Src/main.c ****   {
 2183              		.loc 1 579 6 discriminator 1 view .LVU568
 2184 003a 20B9     		cbnz	r0, .L144
 586:Core/Src/main.c **** 
 2185              		.loc 1 586 1 view .LVU569
 2186 003c 05B0     		add	sp, sp, #20
 2187              	.LCFI34:
 2188              		.cfi_remember_state
 2189              		.cfi_def_cfa_offset 4
 2190              		@ sp needed
 2191 003e 5DF804FB 		ldr	pc, [sp], #4
 2192              	.L143:
 2193              	.LCFI35:
 2194              		.cfi_restore_state
 576:Core/Src/main.c ****   }
 2195              		.loc 1 576 5 is_stmt 1 view .LVU570
 2196 0042 FFF7FEFF 		bl	Error_Handler
 2197              	.LVL173:
 2198              	.L144:
 581:Core/Src/main.c ****   }
 2199              		.loc 1 581 5 view .LVU571
 2200 0046 FFF7FEFF 		bl	Error_Handler
 2201              	.LVL174:
 2202              	.L146:
 2203 004a 00BF     		.align	2
 2204              	.L145:
 2205 004c 00000000 		.word	htim10
 2206 0050 000C0140 		.word	1073810432
 2207              		.cfi_endproc
 2208              	.LFE82:
 2210              		.section	.text.MX_UART4_Init,"ax",%progbits
 2211              		.align	1
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 100


 2212              		.syntax unified
 2213              		.thumb
 2214              		.thumb_func
 2216              	MX_UART4_Init:
 2217              	.LFB84:
 635:Core/Src/main.c **** 
 2218              		.loc 1 635 1 view -0
 2219              		.cfi_startproc
 2220              		@ args = 0, pretend = 0, frame = 0
 2221              		@ frame_needed = 0, uses_anonymous_args = 0
 2222 0000 08B5     		push	{r3, lr}
 2223              	.LCFI36:
 2224              		.cfi_def_cfa_offset 8
 2225              		.cfi_offset 3, -8
 2226              		.cfi_offset 14, -4
 644:Core/Src/main.c ****   huart4.Init.BaudRate = 9600;
 2227              		.loc 1 644 3 view .LVU573
 644:Core/Src/main.c ****   huart4.Init.BaudRate = 9600;
 2228              		.loc 1 644 19 is_stmt 0 view .LVU574
 2229 0002 0A48     		ldr	r0, .L151
 2230 0004 0A4B     		ldr	r3, .L151+4
 2231 0006 0360     		str	r3, [r0]
 645:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 2232              		.loc 1 645 3 is_stmt 1 view .LVU575
 645:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 2233              		.loc 1 645 24 is_stmt 0 view .LVU576
 2234 0008 4FF41653 		mov	r3, #9600
 2235 000c 4360     		str	r3, [r0, #4]
 646:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 2236              		.loc 1 646 3 is_stmt 1 view .LVU577
 646:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 2237              		.loc 1 646 26 is_stmt 0 view .LVU578
 2238 000e 0023     		movs	r3, #0
 2239 0010 8360     		str	r3, [r0, #8]
 647:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 2240              		.loc 1 647 3 is_stmt 1 view .LVU579
 647:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 2241              		.loc 1 647 24 is_stmt 0 view .LVU580
 2242 0012 C360     		str	r3, [r0, #12]
 648:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 2243              		.loc 1 648 3 is_stmt 1 view .LVU581
 648:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 2244              		.loc 1 648 22 is_stmt 0 view .LVU582
 2245 0014 0361     		str	r3, [r0, #16]
 649:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2246              		.loc 1 649 3 is_stmt 1 view .LVU583
 649:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2247              		.loc 1 649 20 is_stmt 0 view .LVU584
 2248 0016 0C22     		movs	r2, #12
 2249 0018 4261     		str	r2, [r0, #20]
 650:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 2250              		.loc 1 650 3 is_stmt 1 view .LVU585
 650:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 2251              		.loc 1 650 25 is_stmt 0 view .LVU586
 2252 001a 8361     		str	r3, [r0, #24]
 651:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 2253              		.loc 1 651 3 is_stmt 1 view .LVU587
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 101


 651:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 2254              		.loc 1 651 28 is_stmt 0 view .LVU588
 2255 001c C361     		str	r3, [r0, #28]
 652:Core/Src/main.c ****   {
 2256              		.loc 1 652 3 is_stmt 1 view .LVU589
 652:Core/Src/main.c ****   {
 2257              		.loc 1 652 7 is_stmt 0 view .LVU590
 2258 001e FFF7FEFF 		bl	HAL_UART_Init
 2259              	.LVL175:
 652:Core/Src/main.c ****   {
 2260              		.loc 1 652 6 discriminator 1 view .LVU591
 2261 0022 00B9     		cbnz	r0, .L150
 659:Core/Src/main.c **** 
 2262              		.loc 1 659 1 view .LVU592
 2263 0024 08BD     		pop	{r3, pc}
 2264              	.L150:
 654:Core/Src/main.c ****   }
 2265              		.loc 1 654 5 is_stmt 1 view .LVU593
 2266 0026 FFF7FEFF 		bl	Error_Handler
 2267              	.LVL176:
 2268              	.L152:
 2269 002a 00BF     		.align	2
 2270              	.L151:
 2271 002c 00000000 		.word	huart4
 2272 0030 004C0040 		.word	1073761280
 2273              		.cfi_endproc
 2274              	.LFE84:
 2276              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2277              		.align	1
 2278              		.syntax unified
 2279              		.thumb
 2280              		.thumb_func
 2282              	MX_TIM2_Init:
 2283              	.LFB79:
 421:Core/Src/main.c **** 
 2284              		.loc 1 421 1 view -0
 2285              		.cfi_startproc
 2286              		@ args = 0, pretend = 0, frame = 24
 2287              		@ frame_needed = 0, uses_anonymous_args = 0
 2288 0000 00B5     		push	{lr}
 2289              	.LCFI37:
 2290              		.cfi_def_cfa_offset 4
 2291              		.cfi_offset 14, -4
 2292 0002 87B0     		sub	sp, sp, #28
 2293              	.LCFI38:
 2294              		.cfi_def_cfa_offset 32
 427:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2295              		.loc 1 427 3 view .LVU595
 427:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2296              		.loc 1 427 26 is_stmt 0 view .LVU596
 2297 0004 0023     		movs	r3, #0
 2298 0006 0293     		str	r3, [sp, #8]
 2299 0008 0393     		str	r3, [sp, #12]
 2300 000a 0493     		str	r3, [sp, #16]
 2301 000c 0593     		str	r3, [sp, #20]
 428:Core/Src/main.c **** 
 2302              		.loc 1 428 3 is_stmt 1 view .LVU597
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 102


 428:Core/Src/main.c **** 
 2303              		.loc 1 428 27 is_stmt 0 view .LVU598
 2304 000e 0093     		str	r3, [sp]
 2305 0010 0193     		str	r3, [sp, #4]
 433:Core/Src/main.c ****   htim2.Init.Prescaler = 3199;
 2306              		.loc 1 433 3 is_stmt 1 view .LVU599
 433:Core/Src/main.c ****   htim2.Init.Prescaler = 3199;
 2307              		.loc 1 433 18 is_stmt 0 view .LVU600
 2308 0012 1448     		ldr	r0, .L161
 2309 0014 4FF08042 		mov	r2, #1073741824
 2310 0018 0260     		str	r2, [r0]
 434:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2311              		.loc 1 434 3 is_stmt 1 view .LVU601
 434:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2312              		.loc 1 434 24 is_stmt 0 view .LVU602
 2313 001a 40F67F42 		movw	r2, #3199
 2314 001e 4260     		str	r2, [r0, #4]
 435:Core/Src/main.c ****   htim2.Init.Period = 49;
 2315              		.loc 1 435 3 is_stmt 1 view .LVU603
 435:Core/Src/main.c ****   htim2.Init.Period = 49;
 2316              		.loc 1 435 26 is_stmt 0 view .LVU604
 2317 0020 8360     		str	r3, [r0, #8]
 436:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2318              		.loc 1 436 3 is_stmt 1 view .LVU605
 436:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2319              		.loc 1 436 21 is_stmt 0 view .LVU606
 2320 0022 3122     		movs	r2, #49
 2321 0024 C260     		str	r2, [r0, #12]
 437:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2322              		.loc 1 437 3 is_stmt 1 view .LVU607
 437:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2323              		.loc 1 437 28 is_stmt 0 view .LVU608
 2324 0026 0361     		str	r3, [r0, #16]
 438:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 2325              		.loc 1 438 3 is_stmt 1 view .LVU609
 438:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 2326              		.loc 1 438 32 is_stmt 0 view .LVU610
 2327 0028 4361     		str	r3, [r0, #20]
 439:Core/Src/main.c ****   {
 2328              		.loc 1 439 3 is_stmt 1 view .LVU611
 439:Core/Src/main.c ****   {
 2329              		.loc 1 439 7 is_stmt 0 view .LVU612
 2330 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2331              	.LVL177:
 439:Core/Src/main.c ****   {
 2332              		.loc 1 439 6 discriminator 1 view .LVU613
 2333 002e 90B9     		cbnz	r0, .L158
 443:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 2334              		.loc 1 443 3 is_stmt 1 view .LVU614
 443:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 2335              		.loc 1 443 34 is_stmt 0 view .LVU615
 2336 0030 4FF48053 		mov	r3, #4096
 2337 0034 0293     		str	r3, [sp, #8]
 444:Core/Src/main.c ****   {
 2338              		.loc 1 444 3 is_stmt 1 view .LVU616
 444:Core/Src/main.c ****   {
 2339              		.loc 1 444 7 is_stmt 0 view .LVU617
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 103


 2340 0036 02A9     		add	r1, sp, #8
 2341 0038 0A48     		ldr	r0, .L161
 2342 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2343              	.LVL178:
 444:Core/Src/main.c ****   {
 2344              		.loc 1 444 6 discriminator 1 view .LVU618
 2345 003e 60B9     		cbnz	r0, .L159
 448:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2346              		.loc 1 448 3 is_stmt 1 view .LVU619
 448:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2347              		.loc 1 448 37 is_stmt 0 view .LVU620
 2348 0040 0023     		movs	r3, #0
 2349 0042 0093     		str	r3, [sp]
 449:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2350              		.loc 1 449 3 is_stmt 1 view .LVU621
 449:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2351              		.loc 1 449 33 is_stmt 0 view .LVU622
 2352 0044 0193     		str	r3, [sp, #4]
 450:Core/Src/main.c ****   {
 2353              		.loc 1 450 3 is_stmt 1 view .LVU623
 450:Core/Src/main.c ****   {
 2354              		.loc 1 450 7 is_stmt 0 view .LVU624
 2355 0046 6946     		mov	r1, sp
 2356 0048 0648     		ldr	r0, .L161
 2357 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2358              	.LVL179:
 450:Core/Src/main.c ****   {
 2359              		.loc 1 450 6 discriminator 1 view .LVU625
 2360 004e 30B9     		cbnz	r0, .L160
 457:Core/Src/main.c **** 
 2361              		.loc 1 457 1 view .LVU626
 2362 0050 07B0     		add	sp, sp, #28
 2363              	.LCFI39:
 2364              		.cfi_remember_state
 2365              		.cfi_def_cfa_offset 4
 2366              		@ sp needed
 2367 0052 5DF804FB 		ldr	pc, [sp], #4
 2368              	.L158:
 2369              	.LCFI40:
 2370              		.cfi_restore_state
 441:Core/Src/main.c ****   }
 2371              		.loc 1 441 5 is_stmt 1 view .LVU627
 2372 0056 FFF7FEFF 		bl	Error_Handler
 2373              	.LVL180:
 2374              	.L159:
 446:Core/Src/main.c ****   }
 2375              		.loc 1 446 5 view .LVU628
 2376 005a FFF7FEFF 		bl	Error_Handler
 2377              	.LVL181:
 2378              	.L160:
 452:Core/Src/main.c ****   }
 2379              		.loc 1 452 5 view .LVU629
 2380 005e FFF7FEFF 		bl	Error_Handler
 2381              	.LVL182:
 2382              	.L162:
 2383 0062 00BF     		.align	2
 2384              	.L161:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 104


 2385 0064 00000000 		.word	htim2
 2386              		.cfi_endproc
 2387              	.LFE79:
 2389              		.section	.text.MX_TIM9_Init,"ax",%progbits
 2390              		.align	1
 2391              		.syntax unified
 2392              		.thumb
 2393              		.thumb_func
 2395              	MX_TIM9_Init:
 2396              	.LFB81:
 509:Core/Src/main.c **** 
 2397              		.loc 1 509 1 view -0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 24
 2400              		@ frame_needed = 0, uses_anonymous_args = 0
 2401 0000 00B5     		push	{lr}
 2402              	.LCFI41:
 2403              		.cfi_def_cfa_offset 4
 2404              		.cfi_offset 14, -4
 2405 0002 87B0     		sub	sp, sp, #28
 2406              	.LCFI42:
 2407              		.cfi_def_cfa_offset 32
 515:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2408              		.loc 1 515 3 view .LVU631
 515:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2409              		.loc 1 515 27 is_stmt 0 view .LVU632
 2410 0004 0023     		movs	r3, #0
 2411 0006 0493     		str	r3, [sp, #16]
 2412 0008 0593     		str	r3, [sp, #20]
 516:Core/Src/main.c **** 
 2413              		.loc 1 516 3 is_stmt 1 view .LVU633
 516:Core/Src/main.c **** 
 2414              		.loc 1 516 22 is_stmt 0 view .LVU634
 2415 000a 0093     		str	r3, [sp]
 2416 000c 0193     		str	r3, [sp, #4]
 2417 000e 0293     		str	r3, [sp, #8]
 2418 0010 0393     		str	r3, [sp, #12]
 521:Core/Src/main.c ****   htim9.Init.Prescaler = 0;
 2419              		.loc 1 521 3 is_stmt 1 view .LVU635
 521:Core/Src/main.c ****   htim9.Init.Prescaler = 0;
 2420              		.loc 1 521 18 is_stmt 0 view .LVU636
 2421 0012 1648     		ldr	r0, .L171
 2422 0014 164A     		ldr	r2, .L171+4
 2423 0016 0260     		str	r2, [r0]
 522:Core/Src/main.c ****   htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 2424              		.loc 1 522 3 is_stmt 1 view .LVU637
 522:Core/Src/main.c ****   htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 2425              		.loc 1 522 24 is_stmt 0 view .LVU638
 2426 0018 4360     		str	r3, [r0, #4]
 523:Core/Src/main.c ****   htim9.Init.Period = 65535;
 2427              		.loc 1 523 3 is_stmt 1 view .LVU639
 523:Core/Src/main.c ****   htim9.Init.Period = 65535;
 2428              		.loc 1 523 26 is_stmt 0 view .LVU640
 2429 001a 8360     		str	r3, [r0, #8]
 524:Core/Src/main.c ****   htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2430              		.loc 1 524 3 is_stmt 1 view .LVU641
 524:Core/Src/main.c ****   htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 105


 2431              		.loc 1 524 21 is_stmt 0 view .LVU642
 2432 001c 4FF6FF72 		movw	r2, #65535
 2433 0020 C260     		str	r2, [r0, #12]
 525:Core/Src/main.c ****   htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2434              		.loc 1 525 3 is_stmt 1 view .LVU643
 525:Core/Src/main.c ****   htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2435              		.loc 1 525 28 is_stmt 0 view .LVU644
 2436 0022 0361     		str	r3, [r0, #16]
 526:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 2437              		.loc 1 526 3 is_stmt 1 view .LVU645
 526:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 2438              		.loc 1 526 32 is_stmt 0 view .LVU646
 2439 0024 4361     		str	r3, [r0, #20]
 527:Core/Src/main.c ****   {
 2440              		.loc 1 527 3 is_stmt 1 view .LVU647
 527:Core/Src/main.c ****   {
 2441              		.loc 1 527 7 is_stmt 0 view .LVU648
 2442 0026 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2443              	.LVL183:
 527:Core/Src/main.c ****   {
 2444              		.loc 1 527 6 discriminator 1 view .LVU649
 2445 002a C8B9     		cbnz	r0, .L168
 531:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2446              		.loc 1 531 3 is_stmt 1 view .LVU650
 531:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2447              		.loc 1 531 37 is_stmt 0 view .LVU651
 2448 002c 0023     		movs	r3, #0
 2449 002e 0493     		str	r3, [sp, #16]
 532:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim9, &sMasterConfig) != HAL_OK)
 2450              		.loc 1 532 3 is_stmt 1 view .LVU652
 532:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim9, &sMasterConfig) != HAL_OK)
 2451              		.loc 1 532 33 is_stmt 0 view .LVU653
 2452 0030 0593     		str	r3, [sp, #20]
 533:Core/Src/main.c ****   {
 2453              		.loc 1 533 3 is_stmt 1 view .LVU654
 533:Core/Src/main.c ****   {
 2454              		.loc 1 533 7 is_stmt 0 view .LVU655
 2455 0032 04A9     		add	r1, sp, #16
 2456 0034 0D48     		ldr	r0, .L171
 2457 0036 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2458              	.LVL184:
 533:Core/Src/main.c ****   {
 2459              		.loc 1 533 6 discriminator 1 view .LVU656
 2460 003a 98B9     		cbnz	r0, .L169
 537:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2461              		.loc 1 537 3 is_stmt 1 view .LVU657
 537:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2462              		.loc 1 537 20 is_stmt 0 view .LVU658
 2463 003c 6023     		movs	r3, #96
 2464 003e 0093     		str	r3, [sp]
 538:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2465              		.loc 1 538 3 is_stmt 1 view .LVU659
 538:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2466              		.loc 1 538 19 is_stmt 0 view .LVU660
 2467 0040 0023     		movs	r3, #0
 2468 0042 0193     		str	r3, [sp, #4]
 539:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 106


 2469              		.loc 1 539 3 is_stmt 1 view .LVU661
 539:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2470              		.loc 1 539 24 is_stmt 0 view .LVU662
 2471 0044 0293     		str	r3, [sp, #8]
 540:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 2472              		.loc 1 540 3 is_stmt 1 view .LVU663
 540:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 2473              		.loc 1 540 24 is_stmt 0 view .LVU664
 2474 0046 0393     		str	r3, [sp, #12]
 541:Core/Src/main.c ****   {
 2475              		.loc 1 541 3 is_stmt 1 view .LVU665
 541:Core/Src/main.c ****   {
 2476              		.loc 1 541 7 is_stmt 0 view .LVU666
 2477 0048 0422     		movs	r2, #4
 2478 004a 6946     		mov	r1, sp
 2479 004c 0748     		ldr	r0, .L171
 2480 004e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2481              	.LVL185:
 541:Core/Src/main.c ****   {
 2482              		.loc 1 541 6 discriminator 1 view .LVU667
 2483 0052 48B9     		cbnz	r0, .L170
 548:Core/Src/main.c **** }
 2484              		.loc 1 548 3 is_stmt 1 view .LVU668
 2485 0054 0548     		ldr	r0, .L171
 2486 0056 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2487              	.LVL186:
 549:Core/Src/main.c **** 
 2488              		.loc 1 549 1 is_stmt 0 view .LVU669
 2489 005a 07B0     		add	sp, sp, #28
 2490              	.LCFI43:
 2491              		.cfi_remember_state
 2492              		.cfi_def_cfa_offset 4
 2493              		@ sp needed
 2494 005c 5DF804FB 		ldr	pc, [sp], #4
 2495              	.L168:
 2496              	.LCFI44:
 2497              		.cfi_restore_state
 529:Core/Src/main.c ****   }
 2498              		.loc 1 529 5 is_stmt 1 view .LVU670
 2499 0060 FFF7FEFF 		bl	Error_Handler
 2500              	.LVL187:
 2501              	.L169:
 535:Core/Src/main.c ****   }
 2502              		.loc 1 535 5 view .LVU671
 2503 0064 FFF7FEFF 		bl	Error_Handler
 2504              	.LVL188:
 2505              	.L170:
 543:Core/Src/main.c ****   }
 2506              		.loc 1 543 5 view .LVU672
 2507 0068 FFF7FEFF 		bl	Error_Handler
 2508              	.LVL189:
 2509              	.L172:
 2510              		.align	2
 2511              	.L171:
 2512 006c 00000000 		.word	htim9
 2513 0070 00080140 		.word	1073809408
 2514              		.cfi_endproc
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 107


 2515              	.LFE81:
 2517              		.section	.text.MX_TIM11_Init,"ax",%progbits
 2518              		.align	1
 2519              		.syntax unified
 2520              		.thumb
 2521              		.thumb_func
 2523              	MX_TIM11_Init:
 2524              	.LFB83:
 594:Core/Src/main.c **** 
 2525              		.loc 1 594 1 view -0
 2526              		.cfi_startproc
 2527              		@ args = 0, pretend = 0, frame = 16
 2528              		@ frame_needed = 0, uses_anonymous_args = 0
 2529 0000 00B5     		push	{lr}
 2530              	.LCFI45:
 2531              		.cfi_def_cfa_offset 4
 2532              		.cfi_offset 14, -4
 2533 0002 85B0     		sub	sp, sp, #20
 2534              	.LCFI46:
 2535              		.cfi_def_cfa_offset 24
 600:Core/Src/main.c **** 
 2536              		.loc 1 600 3 view .LVU674
 600:Core/Src/main.c **** 
 2537              		.loc 1 600 22 is_stmt 0 view .LVU675
 2538 0004 0023     		movs	r3, #0
 2539 0006 0093     		str	r3, [sp]
 2540 0008 0193     		str	r3, [sp, #4]
 2541 000a 0293     		str	r3, [sp, #8]
 2542 000c 0393     		str	r3, [sp, #12]
 605:Core/Src/main.c ****   htim11.Init.Prescaler = 0;
 2543              		.loc 1 605 3 is_stmt 1 view .LVU676
 605:Core/Src/main.c ****   htim11.Init.Prescaler = 0;
 2544              		.loc 1 605 19 is_stmt 0 view .LVU677
 2545 000e 1148     		ldr	r0, .L179
 2546 0010 114A     		ldr	r2, .L179+4
 2547 0012 0260     		str	r2, [r0]
 606:Core/Src/main.c ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 2548              		.loc 1 606 3 is_stmt 1 view .LVU678
 606:Core/Src/main.c ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 2549              		.loc 1 606 25 is_stmt 0 view .LVU679
 2550 0014 4360     		str	r3, [r0, #4]
 607:Core/Src/main.c ****   htim11.Init.Period = 65535;
 2551              		.loc 1 607 3 is_stmt 1 view .LVU680
 607:Core/Src/main.c ****   htim11.Init.Period = 65535;
 2552              		.loc 1 607 27 is_stmt 0 view .LVU681
 2553 0016 8360     		str	r3, [r0, #8]
 608:Core/Src/main.c ****   htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2554              		.loc 1 608 3 is_stmt 1 view .LVU682
 608:Core/Src/main.c ****   htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2555              		.loc 1 608 22 is_stmt 0 view .LVU683
 2556 0018 4FF6FF72 		movw	r2, #65535
 2557 001c C260     		str	r2, [r0, #12]
 609:Core/Src/main.c ****   htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2558              		.loc 1 609 3 is_stmt 1 view .LVU684
 609:Core/Src/main.c ****   htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2559              		.loc 1 609 29 is_stmt 0 view .LVU685
 2560 001e 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 108


 610:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim11) != HAL_OK)
 2561              		.loc 1 610 3 is_stmt 1 view .LVU686
 610:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim11) != HAL_OK)
 2562              		.loc 1 610 33 is_stmt 0 view .LVU687
 2563 0020 4361     		str	r3, [r0, #20]
 611:Core/Src/main.c ****   {
 2564              		.loc 1 611 3 is_stmt 1 view .LVU688
 611:Core/Src/main.c ****   {
 2565              		.loc 1 611 7 is_stmt 0 view .LVU689
 2566 0022 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2567              	.LVL190:
 611:Core/Src/main.c ****   {
 2568              		.loc 1 611 6 discriminator 1 view .LVU690
 2569 0026 80B9     		cbnz	r0, .L177
 615:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2570              		.loc 1 615 3 is_stmt 1 view .LVU691
 615:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2571              		.loc 1 615 20 is_stmt 0 view .LVU692
 2572 0028 6023     		movs	r3, #96
 2573 002a 0093     		str	r3, [sp]
 616:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2574              		.loc 1 616 3 is_stmt 1 view .LVU693
 616:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2575              		.loc 1 616 19 is_stmt 0 view .LVU694
 2576 002c 0022     		movs	r2, #0
 2577 002e 0192     		str	r2, [sp, #4]
 617:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2578              		.loc 1 617 3 is_stmt 1 view .LVU695
 617:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2579              		.loc 1 617 24 is_stmt 0 view .LVU696
 2580 0030 0292     		str	r2, [sp, #8]
 618:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2581              		.loc 1 618 3 is_stmt 1 view .LVU697
 618:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2582              		.loc 1 618 24 is_stmt 0 view .LVU698
 2583 0032 0392     		str	r2, [sp, #12]
 619:Core/Src/main.c ****   {
 2584              		.loc 1 619 3 is_stmt 1 view .LVU699
 619:Core/Src/main.c ****   {
 2585              		.loc 1 619 7 is_stmt 0 view .LVU700
 2586 0034 6946     		mov	r1, sp
 2587 0036 0748     		ldr	r0, .L179
 2588 0038 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2589              	.LVL191:
 619:Core/Src/main.c ****   {
 2590              		.loc 1 619 6 discriminator 1 view .LVU701
 2591 003c 38B9     		cbnz	r0, .L178
 626:Core/Src/main.c **** }
 2592              		.loc 1 626 3 is_stmt 1 view .LVU702
 2593 003e 0548     		ldr	r0, .L179
 2594 0040 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2595              	.LVL192:
 627:Core/Src/main.c **** 
 2596              		.loc 1 627 1 is_stmt 0 view .LVU703
 2597 0044 05B0     		add	sp, sp, #20
 2598              	.LCFI47:
 2599              		.cfi_remember_state
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 109


 2600              		.cfi_def_cfa_offset 4
 2601              		@ sp needed
 2602 0046 5DF804FB 		ldr	pc, [sp], #4
 2603              	.L177:
 2604              	.LCFI48:
 2605              		.cfi_restore_state
 613:Core/Src/main.c ****   }
 2606              		.loc 1 613 5 is_stmt 1 view .LVU704
 2607 004a FFF7FEFF 		bl	Error_Handler
 2608              	.LVL193:
 2609              	.L178:
 621:Core/Src/main.c ****   }
 2610              		.loc 1 621 5 view .LVU705
 2611 004e FFF7FEFF 		bl	Error_Handler
 2612              	.LVL194:
 2613              	.L180:
 2614 0052 00BF     		.align	2
 2615              	.L179:
 2616 0054 00000000 		.word	htim11
 2617 0058 00100140 		.word	1073811456
 2618              		.cfi_endproc
 2619              	.LFE83:
 2621              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2622              		.align	1
 2623              		.syntax unified
 2624              		.thumb
 2625              		.thumb_func
 2627              	MX_TIM3_Init:
 2628              	.LFB80:
 465:Core/Src/main.c **** 
 2629              		.loc 1 465 1 view -0
 2630              		.cfi_startproc
 2631              		@ args = 0, pretend = 0, frame = 24
 2632              		@ frame_needed = 0, uses_anonymous_args = 0
 2633 0000 00B5     		push	{lr}
 2634              	.LCFI49:
 2635              		.cfi_def_cfa_offset 4
 2636              		.cfi_offset 14, -4
 2637 0002 87B0     		sub	sp, sp, #28
 2638              	.LCFI50:
 2639              		.cfi_def_cfa_offset 32
 471:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2640              		.loc 1 471 3 view .LVU707
 471:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2641              		.loc 1 471 26 is_stmt 0 view .LVU708
 2642 0004 0023     		movs	r3, #0
 2643 0006 0293     		str	r3, [sp, #8]
 2644 0008 0393     		str	r3, [sp, #12]
 2645 000a 0493     		str	r3, [sp, #16]
 2646 000c 0593     		str	r3, [sp, #20]
 472:Core/Src/main.c **** 
 2647              		.loc 1 472 3 is_stmt 1 view .LVU709
 472:Core/Src/main.c **** 
 2648              		.loc 1 472 27 is_stmt 0 view .LVU710
 2649 000e 0093     		str	r3, [sp]
 2650 0010 0193     		str	r3, [sp, #4]
 477:Core/Src/main.c ****   htim3.Init.Prescaler = 499;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 110


 2651              		.loc 1 477 3 is_stmt 1 view .LVU711
 477:Core/Src/main.c ****   htim3.Init.Prescaler = 499;
 2652              		.loc 1 477 18 is_stmt 0 view .LVU712
 2653 0012 1448     		ldr	r0, .L189
 2654 0014 144A     		ldr	r2, .L189+4
 2655 0016 0260     		str	r2, [r0]
 478:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2656              		.loc 1 478 3 is_stmt 1 view .LVU713
 478:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2657              		.loc 1 478 24 is_stmt 0 view .LVU714
 2658 0018 40F2F312 		movw	r2, #499
 2659 001c 4260     		str	r2, [r0, #4]
 479:Core/Src/main.c ****   htim3.Init.Period = 15999;
 2660              		.loc 1 479 3 is_stmt 1 view .LVU715
 479:Core/Src/main.c ****   htim3.Init.Period = 15999;
 2661              		.loc 1 479 26 is_stmt 0 view .LVU716
 2662 001e 8360     		str	r3, [r0, #8]
 480:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2663              		.loc 1 480 3 is_stmt 1 view .LVU717
 480:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2664              		.loc 1 480 21 is_stmt 0 view .LVU718
 2665 0020 43F67F62 		movw	r2, #15999
 2666 0024 C260     		str	r2, [r0, #12]
 481:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2667              		.loc 1 481 3 is_stmt 1 view .LVU719
 481:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2668              		.loc 1 481 28 is_stmt 0 view .LVU720
 2669 0026 0361     		str	r3, [r0, #16]
 482:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2670              		.loc 1 482 3 is_stmt 1 view .LVU721
 482:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2671              		.loc 1 482 32 is_stmt 0 view .LVU722
 2672 0028 4361     		str	r3, [r0, #20]
 483:Core/Src/main.c ****   {
 2673              		.loc 1 483 3 is_stmt 1 view .LVU723
 483:Core/Src/main.c ****   {
 2674              		.loc 1 483 7 is_stmt 0 view .LVU724
 2675 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2676              	.LVL195:
 483:Core/Src/main.c ****   {
 2677              		.loc 1 483 6 discriminator 1 view .LVU725
 2678 002e 90B9     		cbnz	r0, .L186
 487:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2679              		.loc 1 487 3 is_stmt 1 view .LVU726
 487:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2680              		.loc 1 487 34 is_stmt 0 view .LVU727
 2681 0030 4FF48053 		mov	r3, #4096
 2682 0034 0293     		str	r3, [sp, #8]
 488:Core/Src/main.c ****   {
 2683              		.loc 1 488 3 is_stmt 1 view .LVU728
 488:Core/Src/main.c ****   {
 2684              		.loc 1 488 7 is_stmt 0 view .LVU729
 2685 0036 02A9     		add	r1, sp, #8
 2686 0038 0A48     		ldr	r0, .L189
 2687 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2688              	.LVL196:
 488:Core/Src/main.c ****   {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 111


 2689              		.loc 1 488 6 discriminator 1 view .LVU730
 2690 003e 60B9     		cbnz	r0, .L187
 492:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2691              		.loc 1 492 3 is_stmt 1 view .LVU731
 492:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2692              		.loc 1 492 37 is_stmt 0 view .LVU732
 2693 0040 0023     		movs	r3, #0
 2694 0042 0093     		str	r3, [sp]
 493:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2695              		.loc 1 493 3 is_stmt 1 view .LVU733
 493:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2696              		.loc 1 493 33 is_stmt 0 view .LVU734
 2697 0044 0193     		str	r3, [sp, #4]
 494:Core/Src/main.c ****   {
 2698              		.loc 1 494 3 is_stmt 1 view .LVU735
 494:Core/Src/main.c ****   {
 2699              		.loc 1 494 7 is_stmt 0 view .LVU736
 2700 0046 6946     		mov	r1, sp
 2701 0048 0648     		ldr	r0, .L189
 2702 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2703              	.LVL197:
 494:Core/Src/main.c ****   {
 2704              		.loc 1 494 6 discriminator 1 view .LVU737
 2705 004e 30B9     		cbnz	r0, .L188
 501:Core/Src/main.c **** 
 2706              		.loc 1 501 1 view .LVU738
 2707 0050 07B0     		add	sp, sp, #28
 2708              	.LCFI51:
 2709              		.cfi_remember_state
 2710              		.cfi_def_cfa_offset 4
 2711              		@ sp needed
 2712 0052 5DF804FB 		ldr	pc, [sp], #4
 2713              	.L186:
 2714              	.LCFI52:
 2715              		.cfi_restore_state
 485:Core/Src/main.c ****   }
 2716              		.loc 1 485 5 is_stmt 1 view .LVU739
 2717 0056 FFF7FEFF 		bl	Error_Handler
 2718              	.LVL198:
 2719              	.L187:
 490:Core/Src/main.c ****   }
 2720              		.loc 1 490 5 view .LVU740
 2721 005a FFF7FEFF 		bl	Error_Handler
 2722              	.LVL199:
 2723              	.L188:
 496:Core/Src/main.c ****   }
 2724              		.loc 1 496 5 view .LVU741
 2725 005e FFF7FEFF 		bl	Error_Handler
 2726              	.LVL200:
 2727              	.L190:
 2728 0062 00BF     		.align	2
 2729              	.L189:
 2730 0064 00000000 		.word	htim3
 2731 0068 00040040 		.word	1073742848
 2732              		.cfi_endproc
 2733              	.LFE80:
 2735              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 112


 2736              		.align	1
 2737              		.global	SystemClock_Config
 2738              		.syntax unified
 2739              		.thumb
 2740              		.thumb_func
 2742              	SystemClock_Config:
 2743              	.LFB76:
 278:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2744              		.loc 1 278 1 view -0
 2745              		.cfi_startproc
 2746              		@ args = 0, pretend = 0, frame = 72
 2747              		@ frame_needed = 0, uses_anonymous_args = 0
 2748 0000 00B5     		push	{lr}
 2749              	.LCFI53:
 2750              		.cfi_def_cfa_offset 4
 2751              		.cfi_offset 14, -4
 2752 0002 93B0     		sub	sp, sp, #76
 2753              	.LCFI54:
 2754              		.cfi_def_cfa_offset 80
 279:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2755              		.loc 1 279 3 view .LVU743
 279:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2756              		.loc 1 279 22 is_stmt 0 view .LVU744
 2757 0004 3422     		movs	r2, #52
 2758 0006 0021     		movs	r1, #0
 2759 0008 05A8     		add	r0, sp, #20
 2760 000a FFF7FEFF 		bl	memset
 2761              	.LVL201:
 280:Core/Src/main.c **** 
 2762              		.loc 1 280 3 is_stmt 1 view .LVU745
 280:Core/Src/main.c **** 
 2763              		.loc 1 280 22 is_stmt 0 view .LVU746
 2764 000e 0023     		movs	r3, #0
 2765 0010 0093     		str	r3, [sp]
 2766 0012 0193     		str	r3, [sp, #4]
 2767 0014 0293     		str	r3, [sp, #8]
 2768 0016 0393     		str	r3, [sp, #12]
 2769 0018 0493     		str	r3, [sp, #16]
 284:Core/Src/main.c **** 
 2770              		.loc 1 284 3 is_stmt 1 view .LVU747
 2771 001a 1649     		ldr	r1, .L197
 2772 001c 0A68     		ldr	r2, [r1]
 2773 001e 22F4C052 		bic	r2, r2, #6144
 2774 0022 42F40062 		orr	r2, r2, #2048
 2775 0026 0A60     		str	r2, [r1]
 289:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2776              		.loc 1 289 3 view .LVU748
 289:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2777              		.loc 1 289 36 is_stmt 0 view .LVU749
 2778 0028 0222     		movs	r2, #2
 2779 002a 0592     		str	r2, [sp, #20]
 290:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2780              		.loc 1 290 3 is_stmt 1 view .LVU750
 290:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2781              		.loc 1 290 30 is_stmt 0 view .LVU751
 2782 002c 0121     		movs	r1, #1
 2783 002e 0891     		str	r1, [sp, #32]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 113


 291:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2784              		.loc 1 291 3 is_stmt 1 view .LVU752
 291:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2785              		.loc 1 291 41 is_stmt 0 view .LVU753
 2786 0030 1021     		movs	r1, #16
 2787 0032 0991     		str	r1, [sp, #36]
 292:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2788              		.loc 1 292 3 is_stmt 1 view .LVU754
 292:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2789              		.loc 1 292 34 is_stmt 0 view .LVU755
 2790 0034 0E92     		str	r2, [sp, #56]
 293:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2791              		.loc 1 293 3 is_stmt 1 view .LVU756
 293:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2792              		.loc 1 293 35 is_stmt 0 view .LVU757
 2793 0036 0F93     		str	r3, [sp, #60]
 294:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 2794              		.loc 1 294 3 is_stmt 1 view .LVU758
 294:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 2795              		.loc 1 294 32 is_stmt 0 view .LVU759
 2796 0038 4FF40023 		mov	r3, #524288
 2797 003c 1093     		str	r3, [sp, #64]
 295:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2798              		.loc 1 295 3 is_stmt 1 view .LVU760
 295:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2799              		.loc 1 295 32 is_stmt 0 view .LVU761
 2800 003e 4FF40003 		mov	r3, #8388608
 2801 0042 1193     		str	r3, [sp, #68]
 296:Core/Src/main.c ****   {
 2802              		.loc 1 296 3 is_stmt 1 view .LVU762
 296:Core/Src/main.c ****   {
 2803              		.loc 1 296 7 is_stmt 0 view .LVU763
 2804 0044 05A8     		add	r0, sp, #20
 2805 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2806              	.LVL202:
 296:Core/Src/main.c ****   {
 2807              		.loc 1 296 6 discriminator 1 view .LVU764
 2808 004a 78B9     		cbnz	r0, .L195
 303:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 2809              		.loc 1 303 3 is_stmt 1 view .LVU765
 303:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 2810              		.loc 1 303 31 is_stmt 0 view .LVU766
 2811 004c 0F23     		movs	r3, #15
 2812 004e 0093     		str	r3, [sp]
 304:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2813              		.loc 1 304 3 is_stmt 1 view .LVU767
 304:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2814              		.loc 1 304 34 is_stmt 0 view .LVU768
 2815 0050 0323     		movs	r3, #3
 2816 0052 0193     		str	r3, [sp, #4]
 305:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2817              		.loc 1 305 3 is_stmt 1 view .LVU769
 305:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2818              		.loc 1 305 35 is_stmt 0 view .LVU770
 2819 0054 0023     		movs	r3, #0
 2820 0056 0293     		str	r3, [sp, #8]
 306:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 114


 2821              		.loc 1 306 3 is_stmt 1 view .LVU771
 306:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2822              		.loc 1 306 36 is_stmt 0 view .LVU772
 2823 0058 0393     		str	r3, [sp, #12]
 307:Core/Src/main.c **** 
 2824              		.loc 1 307 3 is_stmt 1 view .LVU773
 307:Core/Src/main.c **** 
 2825              		.loc 1 307 36 is_stmt 0 view .LVU774
 2826 005a 0493     		str	r3, [sp, #16]
 309:Core/Src/main.c ****   {
 2827              		.loc 1 309 3 is_stmt 1 view .LVU775
 309:Core/Src/main.c ****   {
 2828              		.loc 1 309 7 is_stmt 0 view .LVU776
 2829 005c 0121     		movs	r1, #1
 2830 005e 6846     		mov	r0, sp
 2831 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2832              	.LVL203:
 309:Core/Src/main.c ****   {
 2833              		.loc 1 309 6 discriminator 1 view .LVU777
 2834 0064 20B9     		cbnz	r0, .L196
 313:Core/Src/main.c **** 
 2835              		.loc 1 313 1 view .LVU778
 2836 0066 13B0     		add	sp, sp, #76
 2837              	.LCFI55:
 2838              		.cfi_remember_state
 2839              		.cfi_def_cfa_offset 4
 2840              		@ sp needed
 2841 0068 5DF804FB 		ldr	pc, [sp], #4
 2842              	.L195:
 2843              	.LCFI56:
 2844              		.cfi_restore_state
 298:Core/Src/main.c ****   }
 2845              		.loc 1 298 5 is_stmt 1 view .LVU779
 2846 006c FFF7FEFF 		bl	Error_Handler
 2847              	.LVL204:
 2848              	.L196:
 311:Core/Src/main.c ****   }
 2849              		.loc 1 311 5 view .LVU780
 2850 0070 FFF7FEFF 		bl	Error_Handler
 2851              	.LVL205:
 2852              	.L198:
 2853              		.align	2
 2854              	.L197:
 2855 0074 00700040 		.word	1073770496
 2856              		.cfi_endproc
 2857              	.LFE76:
 2859              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2860              		.align	2
 2861              	.LC5:
 2862 0000 53746172 		.ascii	"Starting\015\000"
 2862      74696E67 
 2862      0D00
 2863 000a 0000     		.align	2
 2864              	.LC6:
 2865 000c 45544154 		.ascii	"ETAT_INITIALISATION\015\000"
 2865      5F494E49 
 2865      5449414C 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 115


 2865      49534154 
 2865      494F4E0D 
 2866 0021 000000   		.align	2
 2867              	.LC7:
 2868 0024 45544154 		.ascii	"ETAT_JEU\015\000"
 2868      5F4A4555 
 2868      0D00
 2869 002e 0000     		.align	2
 2870              	.LC8:
 2871 0030 45544154 		.ascii	"ETAT_VICTOIRE\015\000"
 2871      5F564943 
 2871      544F4952 
 2871      450D00
 2872 003f 00       		.align	2
 2873              	.LC9:
 2874 0040 45544154 		.ascii	"ETAT_DEFAITE\015\000"
 2874      5F444546 
 2874      41495445 
 2874      0D00
 2875              		.section	.text.main,"ax",%progbits
 2876              		.align	1
 2877              		.global	main
 2878              		.syntax unified
 2879              		.thumb
 2880              		.thumb_func
 2882              	main:
 2883              	.LFB75:
 139:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 2884              		.loc 1 139 1 view -0
 2885              		.cfi_startproc
 2886              		@ Volatile: function does not return.
 2887              		@ args = 0, pretend = 0, frame = 0
 2888              		@ frame_needed = 0, uses_anonymous_args = 0
 2889 0000 08B5     		push	{r3, lr}
 2890              	.LCFI57:
 2891              		.cfi_def_cfa_offset 8
 2892              		.cfi_offset 3, -8
 2893              		.cfi_offset 14, -4
 147:Core/Src/main.c **** 
 2894              		.loc 1 147 3 view .LVU782
 2895 0002 FFF7FEFF 		bl	HAL_Init
 2896              	.LVL206:
 154:Core/Src/main.c **** 
 2897              		.loc 1 154 3 view .LVU783
 2898 0006 FFF7FEFF 		bl	SystemClock_Config
 2899              	.LVL207:
 161:Core/Src/main.c ****   MX_DMA_Init();
 2900              		.loc 1 161 3 view .LVU784
 2901 000a FFF7FEFF 		bl	MX_GPIO_Init
 2902              	.LVL208:
 162:Core/Src/main.c ****   MX_USART2_UART_Init();
 2903              		.loc 1 162 3 view .LVU785
 2904 000e FFF7FEFF 		bl	MX_DMA_Init
 2905              	.LVL209:
 163:Core/Src/main.c ****   MX_ADC_Init();
 2906              		.loc 1 163 3 view .LVU786
 2907 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 116


 2908              	.LVL210:
 164:Core/Src/main.c ****   MX_SPI1_Init();
 2909              		.loc 1 164 3 view .LVU787
 2910 0016 FFF7FEFF 		bl	MX_ADC_Init
 2911              	.LVL211:
 165:Core/Src/main.c ****   MX_TIM10_Init();
 2912              		.loc 1 165 3 view .LVU788
 2913 001a FFF7FEFF 		bl	MX_SPI1_Init
 2914              	.LVL212:
 166:Core/Src/main.c ****   MX_UART4_Init();
 2915              		.loc 1 166 3 view .LVU789
 2916 001e FFF7FEFF 		bl	MX_TIM10_Init
 2917              	.LVL213:
 167:Core/Src/main.c ****   MX_TIM2_Init();
 2918              		.loc 1 167 3 view .LVU790
 2919 0022 FFF7FEFF 		bl	MX_UART4_Init
 2920              	.LVL214:
 168:Core/Src/main.c ****   MX_TIM9_Init();
 2921              		.loc 1 168 3 view .LVU791
 2922 0026 FFF7FEFF 		bl	MX_TIM2_Init
 2923              	.LVL215:
 169:Core/Src/main.c ****   MX_TIM11_Init();
 2924              		.loc 1 169 3 view .LVU792
 2925 002a FFF7FEFF 		bl	MX_TIM9_Init
 2926              	.LVL216:
 170:Core/Src/main.c ****   MX_TIM3_Init();
 2927              		.loc 1 170 3 view .LVU793
 2928 002e FFF7FEFF 		bl	MX_TIM11_Init
 2929              	.LVL217:
 171:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2930              		.loc 1 171 3 view .LVU794
 2931 0032 FFF7FEFF 		bl	MX_TIM3_Init
 2932              	.LVL218:
 173:Core/Src/main.c **** 
 2933              		.loc 1 173 3 view .LVU795
 2934 0036 5348     		ldr	r0, .L218
 2935 0038 FFF7FEFF 		bl	puts
 2936              	.LVL219:
 175:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim11, TIM_CHANNEL_1);
 2937              		.loc 1 175 3 view .LVU796
 2938 003c 5248     		ldr	r0, .L218+4
 2939 003e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2940              	.LVL220:
 176:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_2);
 2941              		.loc 1 176 3 view .LVU797
 2942 0042 0021     		movs	r1, #0
 2943 0044 5148     		ldr	r0, .L218+8
 2944 0046 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2945              	.LVL221:
 177:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim3); // Timer bipbip
 2946              		.loc 1 177 3 view .LVU798
 2947 004a 0421     		movs	r1, #4
 2948 004c 5048     		ldr	r0, .L218+12
 2949 004e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2950              	.LVL222:
 178:Core/Src/main.c **** 
 2951              		.loc 1 178 3 view .LVU799
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 117


 2952 0052 5048     		ldr	r0, .L218+16
 2953 0054 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2954              	.LVL223:
 180:Core/Src/main.c ****   play_track(SOUND_START_BOMB);
 2955              		.loc 1 180 3 view .LVU800
 2956 0058 0020     		movs	r0, #0
 2957 005a FFF7FEFF 		bl	BCD_Init
 2958              	.LVL224:
 181:Core/Src/main.c ****   /* USER CODE END 2 */
 2959              		.loc 1 181 3 view .LVU801
 2960 005e 0220     		movs	r0, #2
 2961 0060 FFF7FEFF 		bl	play_track
 2962              	.LVL225:
 2963 0064 20E0     		b	.L201
 2964              	.L206:
 194:Core/Src/main.c ****       if (bombPlanted == true)
 2965              		.loc 1 194 7 view .LVU802
 2966 0066 4C48     		ldr	r0, .L218+20
 2967 0068 FFF7FEFF 		bl	puts
 2968              	.LVL226:
 195:Core/Src/main.c ****       {
 2969              		.loc 1 195 7 view .LVU803
 195:Core/Src/main.c ****       {
 2970              		.loc 1 195 23 is_stmt 0 view .LVU804
 2971 006c 4B4B     		ldr	r3, .L218+24
 2972 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 195:Core/Src/main.c ****       {
 2973              		.loc 1 195 10 view .LVU805
 2974 0070 D3B1     		cbz	r3, .L201
 197:Core/Src/main.c ****         HAL_Delay(1500);          // Délai pour jouer le son de la bombe plantée
 2975              		.loc 1 197 9 is_stmt 1 view .LVU806
 2976 0072 0620     		movs	r0, #6
 2977 0074 FFF7FEFF 		bl	play_track
 2978              	.LVL227:
 198:Core/Src/main.c ****         BCD_Init(time_in_second); // Clignotement de l'afficheur et préparation à l'affichage
 2979              		.loc 1 198 9 view .LVU807
 2980 0078 40F2DC50 		movw	r0, #1500
 2981 007c FFF7FEFF 		bl	HAL_Delay
 2982              	.LVL228:
 199:Core/Src/main.c ****         randomButtonSequence();   // Générer une nouvelle séquence si nécessaire
 2983              		.loc 1 199 9 view .LVU808
 2984 0080 474B     		ldr	r3, .L218+28
 2985 0082 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2986 0084 FFF7FEFF 		bl	BCD_Init
 2987              	.LVL229:
 200:Core/Src/main.c ****         bombPlanted = false;
 2988              		.loc 1 200 9 view .LVU809
 2989 0088 FFF7FEFF 		bl	randomButtonSequence
 2990              	.LVL230:
 201:Core/Src/main.c ****         etat = ETAT_JEU;
 2991              		.loc 1 201 9 view .LVU810
 201:Core/Src/main.c ****         etat = ETAT_JEU;
 2992              		.loc 1 201 21 is_stmt 0 view .LVU811
 2993 008c 434B     		ldr	r3, .L218+24
 2994 008e 0022     		movs	r2, #0
 2995 0090 1A70     		strb	r2, [r3]
 202:Core/Src/main.c ****       }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 118


 2996              		.loc 1 202 9 is_stmt 1 view .LVU812
 202:Core/Src/main.c ****       }
 2997              		.loc 1 202 14 is_stmt 0 view .LVU813
 2998 0092 444B     		ldr	r3, .L218+32
 2999 0094 0122     		movs	r2, #1
 3000 0096 1A70     		strb	r2, [r3]
 3001 0098 06E0     		b	.L201
 3002              	.L205:
 209:Core/Src/main.c ****       if (etat == ETAT_JEU)
 3003              		.loc 1 209 7 is_stmt 1 view .LVU814
 3004 009a 4348     		ldr	r0, .L218+36
 3005 009c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 3006              	.LVL231:
 210:Core/Src/main.c ****       {
 3007              		.loc 1 210 7 view .LVU815
 210:Core/Src/main.c ****       {
 3008              		.loc 1 210 16 is_stmt 0 view .LVU816
 3009 00a0 404B     		ldr	r3, .L218+32
 3010 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 210:Core/Src/main.c ****       {
 3011              		.loc 1 210 10 view .LVU817
 3012 00a4 012B     		cmp	r3, #1
 3013 00a6 0FD0     		beq	.L216
 3014              	.L201:
 187:Core/Src/main.c ****   {
 3015              		.loc 1 187 3 is_stmt 1 view .LVU818
 189:Core/Src/main.c ****     {
 3016              		.loc 1 189 5 view .LVU819
 3017 00a8 3E4B     		ldr	r3, .L218+32
 3018 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3019 00ac 032B     		cmp	r3, #3
 3020 00ae FBD8     		bhi	.L201
 3021 00b0 01A2     		adr	r2, .L203
 3022 00b2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3023 00b6 00BF     		.p2align 2
 3024              	.L203:
 3025 00b8 67000000 		.word	.L206+1
 3026 00bc 9B000000 		.word	.L205+1
 3027 00c0 47010000 		.word	.L204+1
 3028 00c4 65010000 		.word	.L202+1
 3029              		.p2align 1
 3030              	.L216:
 212:Core/Src/main.c ****         if (time_in_second == 0)
 3031              		.loc 1 212 9 view .LVU820
 3032 00c8 3848     		ldr	r0, .L218+40
 3033 00ca FFF7FEFF 		bl	puts
 3034              	.LVL232:
 213:Core/Src/main.c ****         {
 3035              		.loc 1 213 9 view .LVU821
 213:Core/Src/main.c ****         {
 3036              		.loc 1 213 28 is_stmt 0 view .LVU822
 3037 00ce 344B     		ldr	r3, .L218+28
 3038 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 213:Core/Src/main.c ****         {
 3039              		.loc 1 213 12 view .LVU823
 3040 00d2 13B9     		cbnz	r3, .L208
 215:Core/Src/main.c ****         }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 119


 3041              		.loc 1 215 11 is_stmt 1 view .LVU824
 215:Core/Src/main.c ****         }
 3042              		.loc 1 215 16 is_stmt 0 view .LVU825
 3043 00d4 334B     		ldr	r3, .L218+32
 3044 00d6 0322     		movs	r2, #3
 3045 00d8 1A70     		strb	r2, [r3]
 3046              	.L208:
 217:Core/Src/main.c ****         {
 3047              		.loc 1 217 9 is_stmt 1 view .LVU826
 217:Core/Src/main.c ****         {
 3048              		.loc 1 217 13 is_stmt 0 view .LVU827
 3049 00da 354B     		ldr	r3, .L218+44
 3050 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 217:Core/Src/main.c ****         {
 3051              		.loc 1 217 12 view .LVU828
 3052 00de 13BB     		cbnz	r3, .L217
 3053              	.L209:
 227:Core/Src/main.c ****         if (time_in_second <= 15) {freqence_bipbip = 100;}
 3054              		.loc 1 227 9 is_stmt 1 view .LVU829
 227:Core/Src/main.c ****         if (time_in_second <= 15) {freqence_bipbip = 100;}
 3055              		.loc 1 227 28 is_stmt 0 view .LVU830
 3056 00e0 2F4B     		ldr	r3, .L218+28
 3057 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 227:Core/Src/main.c ****         if (time_in_second <= 15) {freqence_bipbip = 100;}
 3058              		.loc 1 227 12 view .LVU831
 3059 00e4 0F2B     		cmp	r3, #15
 3060 00e6 02D9     		bls	.L210
 227:Core/Src/main.c ****         if (time_in_second <= 15) {freqence_bipbip = 100;}
 3061              		.loc 1 227 36 is_stmt 1 discriminator 1 view .LVU832
 227:Core/Src/main.c ****         if (time_in_second <= 15) {freqence_bipbip = 100;}
 3062              		.loc 1 227 52 is_stmt 0 discriminator 1 view .LVU833
 3063 00e8 324A     		ldr	r2, .L218+48
 3064 00ea C821     		movs	r1, #200
 3065 00ec 1170     		strb	r1, [r2]
 3066              	.L210:
 228:Core/Src/main.c ****         if (time_in_second <= 10) {freqence_bipbip = 50;}
 3067              		.loc 1 228 9 is_stmt 1 view .LVU834
 228:Core/Src/main.c ****         if (time_in_second <= 10) {freqence_bipbip = 50;}
 3068              		.loc 1 228 12 is_stmt 0 view .LVU835
 3069 00ee 0F2B     		cmp	r3, #15
 3070 00f0 02D8     		bhi	.L211
 228:Core/Src/main.c ****         if (time_in_second <= 10) {freqence_bipbip = 50;}
 3071              		.loc 1 228 36 is_stmt 1 discriminator 1 view .LVU836
 228:Core/Src/main.c ****         if (time_in_second <= 10) {freqence_bipbip = 50;}
 3072              		.loc 1 228 52 is_stmt 0 discriminator 1 view .LVU837
 3073 00f2 304A     		ldr	r2, .L218+48
 3074 00f4 6421     		movs	r1, #100
 3075 00f6 1170     		strb	r1, [r2]
 3076              	.L211:
 229:Core/Src/main.c ****         if (time_in_second <= 5)   {freqence_bipbip = 30;}
 3077              		.loc 1 229 9 is_stmt 1 view .LVU838
 229:Core/Src/main.c ****         if (time_in_second <= 5)   {freqence_bipbip = 30;}
 3078              		.loc 1 229 12 is_stmt 0 view .LVU839
 3079 00f8 0A2B     		cmp	r3, #10
 3080 00fa 02D8     		bhi	.L212
 229:Core/Src/main.c ****         if (time_in_second <= 5)   {freqence_bipbip = 30;}
 3081              		.loc 1 229 36 is_stmt 1 discriminator 1 view .LVU840
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 120


 229:Core/Src/main.c ****         if (time_in_second <= 5)   {freqence_bipbip = 30;}
 3082              		.loc 1 229 52 is_stmt 0 discriminator 1 view .LVU841
 3083 00fc 2D4A     		ldr	r2, .L218+48
 3084 00fe 3221     		movs	r1, #50
 3085 0100 1170     		strb	r1, [r2]
 3086              	.L212:
 230:Core/Src/main.c ****         if (flag_bipbip > freqence_bipbip)
 3087              		.loc 1 230 9 is_stmt 1 view .LVU842
 230:Core/Src/main.c ****         if (flag_bipbip > freqence_bipbip)
 3088              		.loc 1 230 12 is_stmt 0 view .LVU843
 3089 0102 052B     		cmp	r3, #5
 3090 0104 02D8     		bhi	.L213
 230:Core/Src/main.c ****         if (flag_bipbip > freqence_bipbip)
 3091              		.loc 1 230 37 is_stmt 1 discriminator 1 view .LVU844
 230:Core/Src/main.c ****         if (flag_bipbip > freqence_bipbip)
 3092              		.loc 1 230 53 is_stmt 0 discriminator 1 view .LVU845
 3093 0106 2B4B     		ldr	r3, .L218+48
 3094 0108 1E22     		movs	r2, #30
 3095 010a 1A70     		strb	r2, [r3]
 3096              	.L213:
 231:Core/Src/main.c ****         {
 3097              		.loc 1 231 9 is_stmt 1 view .LVU846
 231:Core/Src/main.c ****         {
 3098              		.loc 1 231 25 is_stmt 0 view .LVU847
 3099 010c 2A4B     		ldr	r3, .L218+52
 3100 010e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3101 0110 284B     		ldr	r3, .L218+48
 3102 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 231:Core/Src/main.c ****         {
 3103              		.loc 1 231 12 view .LVU848
 3104 0114 9A42     		cmp	r2, r3
 3105 0116 C7D9     		bls	.L201
 233:Core/Src/main.c ****           flag_bipbip = 0;
 3106              		.loc 1 233 11 is_stmt 1 view .LVU849
 3107 0118 0120     		movs	r0, #1
 3108 011a FFF7FEFF 		bl	play_track
 3109              	.LVL233:
 234:Core/Src/main.c ****         }
 3110              		.loc 1 234 11 view .LVU850
 234:Core/Src/main.c ****         }
 3111              		.loc 1 234 23 is_stmt 0 view .LVU851
 3112 011e 264B     		ldr	r3, .L218+52
 3113 0120 0022     		movs	r2, #0
 3114 0122 1A70     		strb	r2, [r3]
 3115 0124 C0E7     		b	.L201
 3116              	.L217:
 219:Core/Src/main.c ****           HAL_Delay(200);
 3117              		.loc 1 219 11 is_stmt 1 view .LVU852
 3118 0126 4FF40051 		mov	r1, #8192
 3119 012a 2448     		ldr	r0, .L218+56
 3120 012c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 3121              	.LVL234:
 220:Core/Src/main.c ****           if (adcOk)
 3122              		.loc 1 220 11 view .LVU853
 3123 0130 C820     		movs	r0, #200
 3124 0132 FFF7FEFF 		bl	HAL_Delay
 3125              	.LVL235:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 121


 221:Core/Src/main.c ****           {
 3126              		.loc 1 221 11 view .LVU854
 221:Core/Src/main.c ****           {
 3127              		.loc 1 221 15 is_stmt 0 view .LVU855
 3128 0136 224B     		ldr	r3, .L218+60
 3129 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 221:Core/Src/main.c ****           {
 3130              		.loc 1 221 14 view .LVU856
 3131 013a 002B     		cmp	r3, #0
 3132 013c D0D0     		beq	.L209
 223:Core/Src/main.c ****           }
 3133              		.loc 1 223 13 is_stmt 1 view .LVU857
 223:Core/Src/main.c ****           }
 3134              		.loc 1 223 18 is_stmt 0 view .LVU858
 3135 013e 194B     		ldr	r3, .L218+32
 3136 0140 0222     		movs	r2, #2
 3137 0142 1A70     		strb	r2, [r3]
 3138 0144 CCE7     		b	.L209
 3139              	.L204:
 242:Core/Src/main.c ****       {
 3140              		.loc 1 242 7 is_stmt 1 view .LVU859
 242:Core/Src/main.c ****       {
 3141              		.loc 1 242 10 is_stmt 0 view .LVU860
 3142 0146 022B     		cmp	r3, #2
 3143 0148 AED1     		bne	.L201
 244:Core/Src/main.c ****         HAL_TIM_Base_Stop_IT(&htim10);
 3144              		.loc 1 244 9 is_stmt 1 view .LVU861
 3145 014a 1E48     		ldr	r0, .L218+64
 3146 014c FFF7FEFF 		bl	puts
 3147              	.LVL236:
 245:Core/Src/main.c ****         play_track(BOMB_DEFUSED);
 3148              		.loc 1 245 9 view .LVU862
 3149 0150 1548     		ldr	r0, .L218+36
 3150 0152 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 3151              	.LVL237:
 246:Core/Src/main.c ****         etat = ETAT_INITIALISATION;
 3152              		.loc 1 246 9 view .LVU863
 3153 0156 0320     		movs	r0, #3
 3154 0158 FFF7FEFF 		bl	play_track
 3155              	.LVL238:
 247:Core/Src/main.c ****       }
 3156              		.loc 1 247 9 view .LVU864
 247:Core/Src/main.c ****       }
 3157              		.loc 1 247 14 is_stmt 0 view .LVU865
 3158 015c 114B     		ldr	r3, .L218+32
 3159 015e 0022     		movs	r2, #0
 3160 0160 1A70     		strb	r2, [r3]
 3161 0162 A1E7     		b	.L201
 3162              	.L202:
 254:Core/Src/main.c ****       {
 3163              		.loc 1 254 7 is_stmt 1 view .LVU866
 254:Core/Src/main.c ****       {
 3164              		.loc 1 254 10 is_stmt 0 view .LVU867
 3165 0164 032B     		cmp	r3, #3
 3166 0166 9FD1     		bne	.L201
 256:Core/Src/main.c ****         HAL_TIM_Base_Stop_IT(&htim10);
 3167              		.loc 1 256 9 is_stmt 1 view .LVU868
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 122


 3168 0168 1748     		ldr	r0, .L218+68
 3169 016a FFF7FEFF 		bl	puts
 3170              	.LVL239:
 257:Core/Src/main.c ****         play_track(BOMB_EXPLODED);
 3171              		.loc 1 257 9 view .LVU869
 3172 016e 0E48     		ldr	r0, .L218+36
 3173 0170 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 3174              	.LVL240:
 258:Core/Src/main.c ****         etat = ETAT_INITIALISATION;
 3175              		.loc 1 258 9 view .LVU870
 3176 0174 0420     		movs	r0, #4
 3177 0176 FFF7FEFF 		bl	play_track
 3178              	.LVL241:
 259:Core/Src/main.c ****       }
 3179              		.loc 1 259 9 view .LVU871
 259:Core/Src/main.c ****       }
 3180              		.loc 1 259 14 is_stmt 0 view .LVU872
 3181 017a 0A4B     		ldr	r3, .L218+32
 3182 017c 0022     		movs	r2, #0
 3183 017e 1A70     		strb	r2, [r3]
 3184 0180 92E7     		b	.L201
 3185              	.L219:
 3186 0182 00BF     		.align	2
 3187              	.L218:
 3188 0184 00000000 		.word	.LC5
 3189 0188 00000000 		.word	htim2
 3190 018c 00000000 		.word	htim11
 3191 0190 00000000 		.word	htim9
 3192 0194 00000000 		.word	htim3
 3193 0198 0C000000 		.word	.LC6
 3194 019c 00000000 		.word	bombPlanted
 3195 01a0 00000000 		.word	time_in_second
 3196 01a4 00000000 		.word	etat
 3197 01a8 00000000 		.word	htim10
 3198 01ac 24000000 		.word	.LC7
 3199 01b0 00000000 		.word	buttonOk
 3200 01b4 00000000 		.word	freqence_bipbip
 3201 01b8 00000000 		.word	flag_bipbip
 3202 01bc 00040240 		.word	1073873920
 3203 01c0 00000000 		.word	adcOk
 3204 01c4 30000000 		.word	.LC8
 3205 01c8 40000000 		.word	.LC9
 3206              		.cfi_endproc
 3207              	.LFE75:
 3209              		.global	etat
 3210              		.section	.bss.etat,"aw",%nobits
 3213              	etat:
 3214 0000 00       		.space	1
 3215              		.global	buttonElapsed
 3216              		.section	.bss.buttonElapsed,"aw",%nobits
 3217              		.align	2
 3220              	buttonElapsed:
 3221 0000 00000000 		.space	16
 3221      00000000 
 3221      00000000 
 3221      00000000 
 3222              		.global	buttonOrderDefuse
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 123


 3223              		.section	.bss.buttonOrderDefuse,"aw",%nobits
 3224              		.align	2
 3227              	buttonOrderDefuse:
 3228 0000 00000000 		.space	4
 3229              		.global	buttonCurrentIndex
 3230              		.section	.bss.buttonCurrentIndex,"aw",%nobits
 3233              	buttonCurrentIndex:
 3234 0000 00       		.space	1
 3235              		.global	buttonOk
 3236              		.section	.bss.buttonOk,"aw",%nobits
 3239              	buttonOk:
 3240 0000 00       		.space	1
 3241              		.global	buttonOrderPlant
 3242              		.section	.data.buttonOrderPlant,"aw"
 3243              		.align	2
 3246              	buttonOrderPlant:
 3247 0000 01020304 		.ascii	"\001\002\003\004"
 3248              		.global	buttonPlantCurrentIndex
 3249              		.section	.bss.buttonPlantCurrentIndex,"aw",%nobits
 3252              	buttonPlantCurrentIndex:
 3253 0000 00       		.space	1
 3254              		.global	bombPlanted
 3255              		.section	.bss.bombPlanted,"aw",%nobits
 3258              	bombPlanted:
 3259 0000 00       		.space	1
 3260              		.global	freqence_bipbip
 3261              		.section	.bss.freqence_bipbip,"aw",%nobits
 3264              	freqence_bipbip:
 3265 0000 00       		.space	1
 3266              		.global	flag_bipbip
 3267              		.section	.bss.flag_bipbip,"aw",%nobits
 3270              	flag_bipbip:
 3271 0000 00       		.space	1
 3272              		.global	time_in_second
 3273              		.section	.data.time_in_second,"aw"
 3276              	time_in_second:
 3277 0000 3C       		.byte	60
 3278              		.global	adcOk
 3279              		.section	.bss.adcOk,"aw",%nobits
 3282              	adcOk:
 3283 0000 00       		.space	1
 3284              		.global	adcData
 3285              		.section	.bss.adcData,"aw",%nobits
 3286              		.align	2
 3289              	adcData:
 3290 0000 00000000 		.space	4
 3291              		.global	seed
 3292              		.section	.bss.seed,"aw",%nobits
 3293              		.align	2
 3296              	seed:
 3297 0000 00000000 		.space	4
 3298              		.global	huart2
 3299              		.section	.bss.huart2,"aw",%nobits
 3300              		.align	2
 3303              	huart2:
 3304 0000 00000000 		.space	72
 3304      00000000 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 124


 3304      00000000 
 3304      00000000 
 3304      00000000 
 3305              		.global	huart4
 3306              		.section	.bss.huart4,"aw",%nobits
 3307              		.align	2
 3310              	huart4:
 3311 0000 00000000 		.space	72
 3311      00000000 
 3311      00000000 
 3311      00000000 
 3311      00000000 
 3312              		.global	htim11
 3313              		.section	.bss.htim11,"aw",%nobits
 3314              		.align	2
 3317              	htim11:
 3318 0000 00000000 		.space	64
 3318      00000000 
 3318      00000000 
 3318      00000000 
 3318      00000000 
 3319              		.global	htim10
 3320              		.section	.bss.htim10,"aw",%nobits
 3321              		.align	2
 3324              	htim10:
 3325 0000 00000000 		.space	64
 3325      00000000 
 3325      00000000 
 3325      00000000 
 3325      00000000 
 3326              		.global	htim9
 3327              		.section	.bss.htim9,"aw",%nobits
 3328              		.align	2
 3331              	htim9:
 3332 0000 00000000 		.space	64
 3332      00000000 
 3332      00000000 
 3332      00000000 
 3332      00000000 
 3333              		.global	htim3
 3334              		.section	.bss.htim3,"aw",%nobits
 3335              		.align	2
 3338              	htim3:
 3339 0000 00000000 		.space	64
 3339      00000000 
 3339      00000000 
 3339      00000000 
 3339      00000000 
 3340              		.global	htim2
 3341              		.section	.bss.htim2,"aw",%nobits
 3342              		.align	2
 3345              	htim2:
 3346 0000 00000000 		.space	64
 3346      00000000 
 3346      00000000 
 3346      00000000 
 3346      00000000 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 125


 3347              		.global	hspi1
 3348              		.section	.bss.hspi1,"aw",%nobits
 3349              		.align	2
 3352              	hspi1:
 3353 0000 00000000 		.space	88
 3353      00000000 
 3353      00000000 
 3353      00000000 
 3353      00000000 
 3354              		.global	hdma_adc
 3355              		.section	.bss.hdma_adc,"aw",%nobits
 3356              		.align	2
 3359              	hdma_adc:
 3360 0000 00000000 		.space	68
 3360      00000000 
 3360      00000000 
 3360      00000000 
 3360      00000000 
 3361              		.global	hadc
 3362              		.section	.bss.hadc,"aw",%nobits
 3363              		.align	2
 3366              	hadc:
 3367 0000 00000000 		.space	84
 3367      00000000 
 3367      00000000 
 3367      00000000 
 3367      00000000 
 3368              		.text
 3369              	.Letext0:
 3370              		.file 4 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l152xe.h"
 3371              		.file 5 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/arm-none-eabi/include/ma
 3372              		.file 6 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/arm-none-eabi/include/sy
 3373              		.file 7 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 3374              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 3375              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_rcc.h"
 3376              		.file 10 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_gpio.h"
 3377              		.file 11 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 3378              		.file 12 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_adc.h"
 3379              		.file 13 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_spi.h"
 3380              		.file 14 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_tim.h"
 3381              		.file 15 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_uart.h"
 3382              		.file 16 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_tim_ex.h"
 3383              		.file 17 "Core/Inc/main.h"
 3384              		.file 18 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_cortex.h"
 3385              		.file 19 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
 3386              		.file 20 "<built-in>"
 3387              		.file 21 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/arm-none-eabi/include/m
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 126


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:19     .text.ITM_SendChar:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:24     .text.ITM_SendChar:00000000 ITM_SendChar
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:77     .text.MX_GPIO_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:82     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:280    .text.MX_GPIO_Init:000000f0 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:288    .text.MX_DMA_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:293    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:341    .text.MX_DMA_Init:00000030 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:346    .text.__io_putchar:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:352    .text.__io_putchar:00000000 __io_putchar
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:378    .text.randomGLC:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:384    .text.randomGLC:00000000 randomGLC
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:416    .text.randomGLC:00000020 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3296   .bss.seed:00000000 seed
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:424    .text.randomButtonSequence:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:430    .text.randomButtonSequence:00000000 randomButtonSequence
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:531    .text.randomButtonSequence:00000054 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3227   .bss.buttonOrderDefuse:00000000 buttonOrderDefuse
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:542    .text.ledUpdate:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:548    .text.ledUpdate:00000000 ledUpdate
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:634    .text.ledUpdate:00000060 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:644    .text.checkUserInput:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:650    .text.checkUserInput:00000000 checkUserInput
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:717    .text.checkUserInput:00000040 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3233   .bss.buttonCurrentIndex:00000000 buttonCurrentIndex
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3239   .bss.buttonOk:00000000 buttonOk
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:725    .text.BCD_SendCommand:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:731    .text.BCD_SendCommand:00000000 BCD_SendCommand
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:784    .text.BCD_SendCommand:00000038 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3352   .bss.hspi1:00000000 hspi1
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:790    .text.checkButtonOrderPlant:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:796    .text.checkButtonOrderPlant:00000000 checkButtonOrderPlant
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:954    .text.checkButtonOrderPlant:000000c0 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3252   .bss.buttonPlantCurrentIndex:00000000 buttonPlantCurrentIndex
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3246   .data.buttonOrderPlant:00000000 buttonOrderPlant
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3258   .bss.bombPlanted:00000000 bombPlanted
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:962    .text.BCD_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:968    .text.BCD_Init:00000000 BCD_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1137   .text.BCD_Init:000000b8 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1143   .text.BCD_updateClock:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1149   .text.BCD_updateClock:00000000 BCD_updateClock
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1288   .text.BCD_updateClock:00000080 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1294   .text.play:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1300   .text.play:00000000 play
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1333   .text.play:00000020 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3310   .bss.huart4:00000000 huart4
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1339   .text.play_track:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1345   .text.play_track:00000000 play_track
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1392   .text.play_track:0000003c $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1397   .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1410   .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1416   .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1631   .text.HAL_GPIO_EXTI_Callback:00000104 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3220   .bss.buttonElapsed:00000000 buttonElapsed
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3213   .bss.etat:00000000 etat
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 127


C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1641   .text.secondToClockDisplay:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1647   .text.secondToClockDisplay:00000000 secondToClockDisplay
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1661   .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1665   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1671   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1777   .text.HAL_TIM_PeriodElapsedCallback:0000006c $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3289   .bss.adcData:00000000 adcData
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3366   .bss.hadc:00000000 hadc
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3331   .bss.htim9:00000000 htim9
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3317   .bss.htim11:00000000 htim11
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3270   .bss.flag_bipbip:00000000 flag_bipbip
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3282   .bss.adcOk:00000000 adcOk
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3276   .data.time_in_second:00000000 time_in_second
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1790   .text.Error_Handler:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1796   .text.Error_Handler:00000000 Error_Handler
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1828   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1833   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1888   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3303   .bss.huart2:00000000 huart2
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1894   .text.MX_ADC_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:1899   .text.MX_ADC_Init:00000000 MX_ADC_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2034   .text.MX_ADC_Init:0000007c $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2040   .text.MX_SPI1_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2045   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2114   .text.MX_SPI1_Init:0000003c $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2120   .text.MX_TIM10_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2125   .text.MX_TIM10_Init:00000000 MX_TIM10_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2205   .text.MX_TIM10_Init:0000004c $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3324   .bss.htim10:00000000 htim10
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2211   .text.MX_UART4_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2216   .text.MX_UART4_Init:00000000 MX_UART4_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2271   .text.MX_UART4_Init:0000002c $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2277   .text.MX_TIM2_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2282   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2385   .text.MX_TIM2_Init:00000064 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3345   .bss.htim2:00000000 htim2
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2390   .text.MX_TIM9_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2395   .text.MX_TIM9_Init:00000000 MX_TIM9_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2512   .text.MX_TIM9_Init:0000006c $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2518   .text.MX_TIM11_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2523   .text.MX_TIM11_Init:00000000 MX_TIM11_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2616   .text.MX_TIM11_Init:00000054 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2622   .text.MX_TIM3_Init:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2627   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2730   .text.MX_TIM3_Init:00000064 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3338   .bss.htim3:00000000 htim3
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2736   .text.SystemClock_Config:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2742   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2855   .text.SystemClock_Config:00000074 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2860   .rodata.main.str1.4:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2876   .text.main:00000000 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:2882   .text.main:00000000 main
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3025   .text.main:000000b8 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3029   .text.main:000000c8 $t
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3188   .text.main:00000184 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3264   .bss.freqence_bipbip:00000000 freqence_bipbip
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3214   .bss.etat:00000000 $d
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 128


C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3217   .bss.buttonElapsed:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3224   .bss.buttonOrderDefuse:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3234   .bss.buttonCurrentIndex:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3240   .bss.buttonOk:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3243   .data.buttonOrderPlant:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3253   .bss.buttonPlantCurrentIndex:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3259   .bss.bombPlanted:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3265   .bss.freqence_bipbip:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3271   .bss.flag_bipbip:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3283   .bss.adcOk:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3286   .bss.adcData:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3293   .bss.seed:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3300   .bss.huart2:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3307   .bss.huart4:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3314   .bss.htim11:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3321   .bss.htim10:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3328   .bss.htim9:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3335   .bss.htim3:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3342   .bss.htim2:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3349   .bss.hspi1:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3359   .bss.hdma_adc:00000000 hdma_adc
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3356   .bss.hdma_adc:00000000 $d
C:\Users\cedri\AppData\Local\Temp\cctLRUte.s:3363   .bss.hadc:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_ui2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2uiz
sin
HAL_SPI_Transmit
HAL_Delay
HAL_UART_Transmit
HAL_GetTick
puts
HAL_ADC_Start_DMA
HAL_UART_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_TIM_PWM_Start
HAL_GPIO_TogglePin
ARM GAS  C:\Users\cedri\AppData\Local\Temp\cctLRUte.s 			page 129


HAL_TIM_Base_Stop_IT
