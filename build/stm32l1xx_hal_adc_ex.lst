ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l1xx_hal_adc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c"
  18              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_ADCEx_InjectedStart
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_ADCEx_InjectedStart:
  26              	.LVL0:
  27              	.LFB72:
   1:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @file    stm32l1xx_hal_adc_ex.c
   4:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *           + Peripheral Control functions
   9:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file 
  10:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *          "stm32l1xx_hal_adc.c".
  11:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *
  12:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   @verbatim
  13:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   [..] 
  14:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  15:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       available in file of generic functions "stm32l1xx_hal_adc.c".
  16:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   [..]
  17:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   @endverbatim
  18:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   ******************************************************************************
  19:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @attention
  20:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *
  21:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  22:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * All rights reserved.
  23:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *
  24:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  25:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * in the root directory of this software component.
  26:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  27:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *
  28:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   ******************************************************************************
  29:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
  30:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  31:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 2


  32:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** #include "stm32l1xx_hal.h"
  33:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  34:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /** @addtogroup STM32L1xx_HAL_Driver
  35:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @{
  36:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
  37:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  38:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  39:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief ADC Extension HAL module driver
  40:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @{
  41:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
  42:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  43:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  44:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  45:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  46:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  47:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADCEx Private Constants
  48:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @{
  49:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
  50:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  51:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* ADC conversion cycles (unit: ADC clock cycles)                           */
  52:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* (selected sampling time + conversion time of 12 ADC clock cycles, with   */
  53:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* resolution 12 bits)                                                      */
  54:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_4CYCLE5   ( 16U)
  55:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_9CYCLES   ( 21U)
  56:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_16CYCLES  ( 28U)
  57:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_24CYCLES  ( 36U)
  58:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_48CYCLES  ( 60U)
  59:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_96CYCLES  (108U)
  60:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_192CYCLES (204U)
  61:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_384CYCLES (396U)
  62:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  63:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Delay for temperature sensor stabilization time.                         */
  64:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
  65:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
  66:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   #define ADC_TEMPSENSOR_DELAY_US         (10U)
  67:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  68:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
  69:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @}
  70:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
  71:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  72:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  73:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  74:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  75:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /* Private functions ---------------------------------------------------------*/
  76:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  77:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADCEx Exported Functions
  78:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @{
  79:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
  80:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
  81:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 ADC Extended IO operation functions
  82:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****  *  @brief    ADC Extended Input and Output operation functions
  83:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****  *
  84:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** @verbatim
  85:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****  ===============================================================================
  86:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  87:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****  ===============================================================================
  88:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 3


  89:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (+) Start conversion of injected group.
  90:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (+) Stop conversion of injected group.
  91:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (+) Poll for conversion complete on injected group.
  92:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (+) Get result of injected channel conversion.
  93:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (+) Start conversion of injected group and enable interruptions.
  94:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (+) Stop conversion of injected group and disable interruptions.
  95:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       
  96:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** @endverbatim
  97:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @{
  98:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
  99:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
 101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group.
 102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
 103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @retval HAL status
 105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
 107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** {
  28              		.loc 1 107 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  32              		.loc 1 108 3 view .LVU1
 109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Check the parameters */
 111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  33              		.loc 1 111 3 view .LVU2
 112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Process locked */
 114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  34              		.loc 1 114 3 view .LVU3
  35              		.loc 1 114 3 view .LVU4
  36 0000 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
  37 0004 012B     		cmp	r3, #1
  38 0006 2AD0     		beq	.L4
 107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  39              		.loc 1 107 1 is_stmt 0 view .LVU5
  40 0008 10B5     		push	{r4, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
  45 000a 0446     		mov	r4, r0
  46              		.loc 1 114 3 is_stmt 1 discriminator 2 view .LVU6
  47 000c 0123     		movs	r3, #1
  48 000e 80F84830 		strb	r3, [r0, #72]
  49              		.loc 1 114 3 discriminator 2 view .LVU7
 115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
  50              		.loc 1 117 3 view .LVU8
  51              		.loc 1 117 20 is_stmt 0 view .LVU9
  52 0012 FFF7FEFF 		bl	ADC_Enable
  53              	.LVL1:
 118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 4


 119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
  54              		.loc 1 120 3 is_stmt 1 view .LVU10
  55              		.loc 1 120 6 is_stmt 0 view .LVU11
  56 0016 08BB     		cbnz	r0, .L2
 121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
 124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
 125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
  57              		.loc 1 125 5 is_stmt 1 view .LVU12
  58 0018 E36C     		ldr	r3, [r4, #76]
  59 001a 23F44053 		bic	r3, r3, #12288
  60 001e 23F00103 		bic	r3, r3, #1
  61 0022 43F48053 		orr	r3, r3, #4096
  62 0026 E364     		str	r3, [r4, #76]
 126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
 128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
 130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
 131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
 132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
 133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
  63              		.loc 1 133 5 view .LVU13
  64              		.loc 1 133 9 is_stmt 0 view .LVU14
  65 0028 E36C     		ldr	r3, [r4, #76]
  66              		.loc 1 133 8 view .LVU15
  67 002a 13F4807F 		tst	r3, #256
  68 002e 01D1     		bne	.L3
 134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
  69              		.loc 1 136 7 is_stmt 1 view .LVU16
  70 0030 0023     		movs	r3, #0
  71 0032 2365     		str	r3, [r4, #80]
  72              	.L3:
 137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Process unlocked */
 140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
  73              		.loc 1 142 5 view .LVU17
  74              		.loc 1 142 5 view .LVU18
  75 0034 0023     		movs	r3, #0
  76 0036 84F84830 		strb	r3, [r4, #72]
  77              		.loc 1 142 5 view .LVU19
 143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
  78              		.loc 1 146 5 view .LVU20
  79 003a 2368     		ldr	r3, [r4]
  80 003c 6FF00402 		mvn	r2, #4
  81 0040 1A60     		str	r2, [r3]
 147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 5


 148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
 149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
 150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
 153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
 154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_INJECTED(hadc)              && 
  82              		.loc 1 154 5 view .LVU21
  83              		.loc 1 154 9 is_stmt 0 view .LVU22
  84 0042 2368     		ldr	r3, [r4]
  85 0044 9A68     		ldr	r2, [r3, #8]
  86              		.loc 1 154 8 view .LVU23
  87 0046 12F4401F 		tst	r2, #3145728
  88 004a 07D1     		bne	.L2
 155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)  )
  89              		.loc 1 155 9 view .LVU24
  90 004c 5A68     		ldr	r2, [r3, #4]
 154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)  )
  91              		.loc 1 154 59 discriminator 1 view .LVU25
  92 004e 12F4806F 		tst	r2, #1024
  93 0052 03D1     		bne	.L2
 156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Enable ADC software conversion for injected channels */
 158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_JSWSTART);
  94              		.loc 1 158 7 is_stmt 1 view .LVU26
  95 0054 9A68     		ldr	r2, [r3, #8]
  96 0056 42F48002 		orr	r2, r2, #4194304
  97 005a 9A60     		str	r2, [r3, #8]
  98              	.L2:
 159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Return function status */
 163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   return tmp_hal_status;
 164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** }
  99              		.loc 1 164 1 is_stmt 0 view .LVU27
 100 005c 10BD     		pop	{r4, pc}
 101              	.LVL2:
 102              	.L4:
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 0
 105              		.cfi_restore 4
 106              		.cfi_restore 14
 114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 107              		.loc 1 114 3 discriminator 1 view .LVU28
 108 005e 0220     		movs	r0, #2
 109              	.LVL3:
 110              		.loc 1 164 1 view .LVU29
 111 0060 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE72:
 115              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 116              		.align	1
 117              		.global	HAL_ADCEx_InjectedStop
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 6


 122              	HAL_ADCEx_InjectedStop:
 123              	.LVL4:
 124              	.LFB73:
 165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
 167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
 170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
 175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @retval None
 177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** {
 125              		.loc 1 179 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 129              		.loc 1 180 3 view .LVU31
 181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Check the parameters */
 183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 130              		.loc 1 183 3 view .LVU32
 184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Process locked */
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 131              		.loc 1 186 3 view .LVU33
 132              		.loc 1 186 3 view .LVU34
 133 0000 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 134 0004 012B     		cmp	r3, #1
 135 0006 23D0     		beq	.L13
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 136              		.loc 1 179 1 is_stmt 0 view .LVU35
 137 0008 10B5     		push	{r4, lr}
 138              	.LCFI2:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 4, -8
 141              		.cfi_offset 14, -4
 142 000a 0446     		mov	r4, r0
 143              		.loc 1 186 3 is_stmt 1 discriminator 2 view .LVU36
 144 000c 0123     		movs	r3, #1
 145 000e 80F84830 		strb	r3, [r0, #72]
 146              		.loc 1 186 3 discriminator 2 view .LVU37
 187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
 189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
 191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
 192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*   are common)                                                            */
 193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
 147              		.loc 1 194 3 view .LVU38
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 7


 148              		.loc 1 194 12 is_stmt 0 view .LVU39
 149 0012 C36C     		ldr	r3, [r0, #76]
 150              		.loc 1 194 5 view .LVU40
 151 0014 13F4807F 		tst	r3, #256
 152 0018 04D1     		bne	.L11
 195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 153              		.loc 1 195 6 view .LVU41
 154 001a 0368     		ldr	r3, [r0]
 155 001c 5B68     		ldr	r3, [r3, #4]
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 156              		.loc 1 194 57 discriminator 1 view .LVU42
 157 001e 13F4806F 		tst	r3, #1024
 158 0022 08D0     		beq	.L18
 159              	.L11:
 196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Set ADC state */
 205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   else
 211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 160              		.loc 1 213 5 is_stmt 1 view .LVU43
 161 0024 E36C     		ldr	r3, [r4, #76]
 162 0026 43F02003 		orr	r3, r3, #32
 163 002a E364     		str	r3, [r4, #76]
 214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       
 215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 164              		.loc 1 215 5 view .LVU44
 165              	.LVL5:
 166              		.loc 1 215 20 is_stmt 0 view .LVU45
 167 002c 0120     		movs	r0, #1
 168              	.LVL6:
 169              	.L12:
 216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Process unlocked */
 219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 170              		.loc 1 219 3 is_stmt 1 view .LVU46
 171              		.loc 1 219 3 view .LVU47
 172 002e 0023     		movs	r3, #0
 173 0030 84F84830 		strb	r3, [r4, #72]
 174              		.loc 1 219 3 view .LVU48
 220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Return function status */
 222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   return tmp_hal_status;
 175              		.loc 1 222 3 view .LVU49
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 8


 223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** }
 176              		.loc 1 223 1 is_stmt 0 view .LVU50
 177 0034 10BD     		pop	{r4, pc}
 178              	.LVL7:
 179              	.L18:
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 180              		.loc 1 199 5 is_stmt 1 view .LVU51
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 181              		.loc 1 199 22 is_stmt 0 view .LVU52
 182 0036 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 183              	.LVL8:
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 184              		.loc 1 202 5 is_stmt 1 view .LVU53
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 185              		.loc 1 202 8 is_stmt 0 view .LVU54
 186 003a 0028     		cmp	r0, #0
 187 003c F7D1     		bne	.L12
 205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 188              		.loc 1 205 7 is_stmt 1 view .LVU55
 189 003e E36C     		ldr	r3, [r4, #76]
 190 0040 23F48853 		bic	r3, r3, #4352
 191 0044 23F00103 		bic	r3, r3, #1
 192 0048 43F00103 		orr	r3, r3, #1
 193 004c E364     		str	r3, [r4, #76]
 194 004e EEE7     		b	.L12
 195              	.LVL9:
 196              	.L13:
 197              	.LCFI3:
 198              		.cfi_def_cfa_offset 0
 199              		.cfi_restore 4
 200              		.cfi_restore 14
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 201              		.loc 1 186 3 is_stmt 0 discriminator 1 view .LVU56
 202 0050 0220     		movs	r0, #2
 203              	.LVL10:
 204              		.loc 1 223 1 view .LVU57
 205 0052 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE73:
 209              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 210              		.align	1
 211              		.global	HAL_ADCEx_InjectedPollForConversion
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 216              	HAL_ADCEx_InjectedPollForConversion:
 217              	.LVL11:
 218              	.LFB74:
 224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
 226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  Timeout Timeout value in millisecond.
 229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @retval HAL status
 230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 9


 219              		.loc 1 232 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		.loc 1 232 1 is_stmt 0 view .LVU59
 224 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 225              	.LCFI4:
 226              		.cfi_def_cfa_offset 24
 227              		.cfi_offset 4, -24
 228              		.cfi_offset 5, -20
 229              		.cfi_offset 6, -16
 230              		.cfi_offset 7, -12
 231              		.cfi_offset 8, -8
 232              		.cfi_offset 14, -4
 233 0004 0446     		mov	r4, r0
 234 0006 0D46     		mov	r5, r1
 233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   uint32_t tickstart;
 235              		.loc 1 233 3 is_stmt 1 view .LVU60
 234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Variables for polling in case of scan mode enabled and polling for each  */
 236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* conversion.                                                              */
 237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Note: Variable "conversion_timeout_cpu_cycles" set to offset 28 CPU      */
 238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* cycles to compensate number of CPU cycles for processing of variable     */
 239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* "conversion_timeout_cpu_cycles_max"                                      */
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   uint32_t conversion_timeout_cpu_cycles = 28;
 236              		.loc 1 240 3 view .LVU61
 237              	.LVL12:
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   uint32_t conversion_timeout_cpu_cycles_max = 0;
 238              		.loc 1 241 3 view .LVU62
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Check the parameters */
 244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 239              		.loc 1 244 3 view .LVU63
 245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Get timeout */
 247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
 240              		.loc 1 247 3 view .LVU64
 241              		.loc 1 247 15 is_stmt 0 view .LVU65
 242 0008 FFF7FEFF 		bl	HAL_GetTick
 243              	.LVL13:
 244              		.loc 1 247 15 view .LVU66
 245 000c 0746     		mov	r7, r0
 246              	.LVL14:
 248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****      
 249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
 250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* conversion.                                                              */
 251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* For injected group, flag JEOC is set only at the end of the sequence,    */
 252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* not for each conversion within the sequence.                             */
 253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* If setting "EOCSelection" is set to poll for each single conversion,     */
 254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* management of polling depends on setting of injected group sequencer:    */ 
 255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*  - If single conversion for injected group (scan mode disabled or        */
 256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion ==1), flag JEOC is used to determine the      */
 257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*    conversion completion.                                                */
 258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*  - If sequence conversion for injected group (scan mode enabled and      */
 259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion >=2), flag JEOC is set only at the end of the */
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*    sequence.                                                             */
 261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 10


 262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
 263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*    12 ADC clock cycles) and APB2/ADC clock prescalers (depending on      */
 264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*    settings, conversion time range can vary from 8 to several thousands  */
 265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*    of CPU cycles).                                                       */
 266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Note: On STM32L1, setting "EOCSelection" is related to regular group     */
 268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*       only, by hardware. For compatibility with other STM32 devices,     */
 269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*       this setting is related also to injected group by software.        */
 270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if (((hadc->Instance->JSQR & ADC_JSQR_JL) == RESET)  ||
 247              		.loc 1 270 3 is_stmt 1 view .LVU67
 248              		.loc 1 270 13 is_stmt 0 view .LVU68
 249 000e 2368     		ldr	r3, [r4]
 250              		.loc 1 270 23 view .LVU69
 251 0010 5A6C     		ldr	r2, [r3, #68]
 252              		.loc 1 270 6 view .LVU70
 253 0012 12F4401F 		tst	r2, #3145728
 254 0016 24D0     		beq	.L22
 271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (hadc->Init.EOCSelection != ADC_EOC_SINGLE_CONV)   )
 255              		.loc 1 271 18 view .LVU71
 256 0018 6269     		ldr	r2, [r4, #20]
 270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (hadc->Init.EOCSelection != ADC_EOC_SINGLE_CONV)   )
 257              		.loc 1 270 56 discriminator 1 view .LVU72
 258 001a B2F5806F 		cmp	r2, #1024
 259 001e 20D1     		bne	.L22
 272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Wait until End of Conversion flag is raised */
 274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_JEOC))
 275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
 278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         if((Timeout == 0) || ((HAL_GetTick() - tickstart ) > Timeout))
 280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           /* New check to avoid false timeout detection in case of preemption */
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           if(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_JEOC))
 283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           {
 284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             /* Update ADC state machine to timeout */
 285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             /* Process unlocked */
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             __HAL_UNLOCK(hadc);
 289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             return HAL_TIMEOUT;
 291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           }
 292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         }
 293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   else
 297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Computation of CPU cycles corresponding to ADC conversion cycles.      */
 299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Retrieve ADC clock prescaler and ADC maximum conversion cycles on all  */
 300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* channels.                                                              */
 301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     conversion_timeout_cpu_cycles_max = ADC_GET_CLOCK_PRESCALER_DECIMAL(hadc);
 260              		.loc 1 301 5 is_stmt 1 view .LVU73
 261              		.loc 1 301 41 is_stmt 0 view .LVU74
 262 0020 4B4A     		ldr	r2, .L48
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 11


 263 0022 5268     		ldr	r2, [r2, #4]
 264 0024 02F44032 		and	r2, r2, #196608
 265              	.LVL15:
 266              	.LBB4:
 267              	.LBI4:
 268              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 12


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 13


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 14


 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 15


 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 16


 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 17


 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 18


 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 19


 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 20


 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 21


 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 22


 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 23


 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 24


 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 25


 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 26


 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 27


 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 28


 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 269              		.loc 2 981 31 is_stmt 1 view .LVU75
 270              	.LBB5:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 271              		.loc 2 983 3 view .LVU76
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 272              		.loc 2 988 4 view .LVU77
 273 0028 4FF44031 		mov	r1, #196608
 274              		.syntax unified
 275              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 276 002c 91FAA1F1 		rbit r1, r1
 277              	@ 0 "" 2
 278              	.LVL16:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 279              		.loc 2 1001 3 view .LVU78
 280              		.loc 2 1001 3 is_stmt 0 view .LVU79
 281              		.thumb
 282              		.syntax unified
 283              	.LBE5:
 284              	.LBE4:
 285              		.loc 1 301 41 discriminator 2 view .LVU80
 286 0030 B1FA81F1 		clz	r1, r1
 287 0034 CA40     		lsrs	r2, r2, r1
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 29


 288              	.LVL17:
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     conversion_timeout_cpu_cycles_max *= ADC_CONVCYCLES_MAX_RANGE(hadc);
 289              		.loc 1 302 5 is_stmt 1 view .LVU81
 290              		.loc 1 302 42 is_stmt 0 view .LVU82
 291 0036 5869     		ldr	r0, [r3, #20]
 292              	.LVL18:
 293              		.loc 1 302 42 view .LVU83
 294 0038 4649     		ldr	r1, .L48+4
 295 003a 0842     		tst	r0, r1
 296 003c 2AD1     		bne	.L36
 297              		.loc 1 302 42 discriminator 1 view .LVU84
 298 003e 1869     		ldr	r0, [r3, #16]
 299 0040 0842     		tst	r0, r1
 300 0042 2DD1     		bne	.L37
 301              		.loc 1 302 42 discriminator 3 view .LVU85
 302 0044 D868     		ldr	r0, [r3, #12]
 303 0046 0842     		tst	r0, r1
 304 0048 2DD1     		bne	.L38
 305              		.loc 1 302 42 discriminator 5 view .LVU86
 306 004a DB6D     		ldr	r3, [r3, #92]
 307 004c 13F0240F 		tst	r3, #36
 308 0050 2CD0     		beq	.L39
 309              		.loc 1 302 42 discriminator 8 view .LVU87
 310 0052 4FF4C678 		mov	r8, #396
 311 0056 1FE0     		b	.L29
 312              	.LVL19:
 313              	.L23:
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           {
 314              		.loc 1 282 11 is_stmt 1 view .LVU88
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           {
 315              		.loc 1 282 14 is_stmt 0 view .LVU89
 316 0058 2368     		ldr	r3, [r4]
 317 005a 1B68     		ldr	r3, [r3]
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           {
 318              		.loc 1 282 13 view .LVU90
 319 005c 13F0040F 		tst	r3, #4
 320 0060 0FD0     		beq	.L47
 321              	.L22:
 274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 322              		.loc 1 274 11 is_stmt 1 view .LVU91
 323 0062 2368     		ldr	r3, [r4]
 324 0064 1B68     		ldr	r3, [r3]
 325 0066 13F0040F 		tst	r3, #4
 326 006a 37D1     		bne	.L28
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 327              		.loc 1 277 7 view .LVU92
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 328              		.loc 1 277 9 is_stmt 0 view .LVU93
 329 006c B5F1FF3F 		cmp	r5, #-1
 330 0070 F7D0     		beq	.L22
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 331              		.loc 1 279 9 is_stmt 1 view .LVU94
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 332              		.loc 1 279 11 is_stmt 0 view .LVU95
 333 0072 002D     		cmp	r5, #0
 334 0074 F0D0     		beq	.L23
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 30


 335              		.loc 1 279 32 discriminator 1 view .LVU96
 336 0076 FFF7FEFF 		bl	HAL_GetTick
 337              	.LVL20:
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 338              		.loc 1 279 46 discriminator 1 view .LVU97
 339 007a C01B     		subs	r0, r0, r7
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 340              		.loc 1 279 27 discriminator 1 view .LVU98
 341 007c A842     		cmp	r0, r5
 342 007e F0D9     		bls	.L22
 343 0080 EAE7     		b	.L23
 344              	.L47:
 285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 345              		.loc 1 285 13 is_stmt 1 view .LVU99
 346 0082 E36C     		ldr	r3, [r4, #76]
 347 0084 43F00403 		orr	r3, r3, #4
 348 0088 E364     		str	r3, [r4, #76]
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 349              		.loc 1 288 13 view .LVU100
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 350              		.loc 1 288 13 view .LVU101
 351 008a 0023     		movs	r3, #0
 352 008c 84F84830 		strb	r3, [r4, #72]
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 353              		.loc 1 288 13 view .LVU102
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           }
 354              		.loc 1 290 13 view .LVU103
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           }
 355              		.loc 1 290 20 is_stmt 0 view .LVU104
 356 0090 0320     		movs	r0, #3
 357 0092 53E0     		b	.L25
 358              	.LVL21:
 359              	.L36:
 360              		.loc 1 302 42 discriminator 8 view .LVU105
 361 0094 4FF4C678 		mov	r8, #396
 362              	.L29:
 363              		.loc 1 302 39 discriminator 10 view .LVU106
 364 0098 08FA02F8 		lsl	r8, r8, r2
 365              	.LVL22:
 303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Poll with maximum conversion time */
 305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     while(conversion_timeout_cpu_cycles < conversion_timeout_cpu_cycles_max)
 366              		.loc 1 305 5 is_stmt 1 view .LVU107
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   uint32_t conversion_timeout_cpu_cycles_max = 0;
 367              		.loc 1 240 12 is_stmt 0 view .LVU108
 368 009c 1C26     		movs	r6, #28
 369              		.loc 1 305 10 view .LVU109
 370 009e 09E0     		b	.L30
 371              	.LVL23:
 372              	.L37:
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 373              		.loc 1 302 42 discriminator 8 view .LVU110
 374 00a0 4FF4C678 		mov	r8, #396
 375 00a4 F8E7     		b	.L29
 376              	.L38:
 377 00a6 4FF4C678 		mov	r8, #396
 378 00aa F5E7     		b	.L29
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 31


 379              	.L39:
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 380              		.loc 1 302 42 discriminator 7 view .LVU111
 381 00ac 4FF02408 		mov	r8, #36
 382 00b0 F2E7     		b	.L29
 383              	.LVL24:
 384              	.L31:
 306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
 309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         if((Timeout == 0) || ((HAL_GetTick() - tickstart ) > Timeout))
 311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           /* New check to avoid false timeout detection in case of preemption */
 313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           if(conversion_timeout_cpu_cycles < conversion_timeout_cpu_cycles_max)
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           {
 315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             /* Update ADC state machine to timeout */
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             /* Process unlocked */
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             __HAL_UNLOCK(hadc);
 320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             return HAL_TIMEOUT;
 322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           }
 323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         }
 324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       conversion_timeout_cpu_cycles ++;
 385              		.loc 1 325 7 is_stmt 1 view .LVU112
 386              		.loc 1 325 37 is_stmt 0 view .LVU113
 387 00b2 0136     		adds	r6, r6, #1
 388              	.LVL25:
 389              	.L30:
 305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 390              		.loc 1 305 41 is_stmt 1 view .LVU114
 391 00b4 4645     		cmp	r6, r8
 392 00b6 11D2     		bcs	.L28
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 393              		.loc 1 308 7 view .LVU115
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 394              		.loc 1 308 9 is_stmt 0 view .LVU116
 395 00b8 B5F1FF3F 		cmp	r5, #-1
 396 00bc F9D0     		beq	.L31
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 397              		.loc 1 310 9 is_stmt 1 view .LVU117
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 398              		.loc 1 310 11 is_stmt 0 view .LVU118
 399 00be 25B1     		cbz	r5, .L32
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 400              		.loc 1 310 32 discriminator 1 view .LVU119
 401 00c0 FFF7FEFF 		bl	HAL_GetTick
 402              	.LVL26:
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 403              		.loc 1 310 46 discriminator 1 view .LVU120
 404 00c4 C31B     		subs	r3, r0, r7
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         {
 405              		.loc 1 310 27 discriminator 1 view .LVU121
 406 00c6 AB42     		cmp	r3, r5
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 32


 407 00c8 F3D9     		bls	.L31
 408              	.L32:
 313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           {
 409              		.loc 1 313 11 is_stmt 1 view .LVU122
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 410              		.loc 1 316 13 view .LVU123
 411 00ca E36C     		ldr	r3, [r4, #76]
 412 00cc 43F00403 		orr	r3, r3, #4
 413 00d0 E364     		str	r3, [r4, #76]
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 414              		.loc 1 319 13 view .LVU124
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 415              		.loc 1 319 13 view .LVU125
 416 00d2 0023     		movs	r3, #0
 417 00d4 84F84830 		strb	r3, [r4, #72]
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 418              		.loc 1 319 13 view .LVU126
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           }
 419              		.loc 1 321 13 view .LVU127
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****           }
 420              		.loc 1 321 20 is_stmt 0 view .LVU128
 421 00d8 0320     		movs	r0, #3
 422 00da 2FE0     		b	.L25
 423              	.LVL27:
 424              	.L28:
 326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Clear end of conversion flag of injected group if low power feature      */
 330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* "Auto Wait" is disabled, to not interfere with this feature until data   */
 331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* register is read using function HAL_ADCEx_InjectedGetValue().            */
 332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if (hadc->Init.LowPowerAutoWait == DISABLE)
 425              		.loc 1 332 3 is_stmt 1 view .LVU129
 426              		.loc 1 332 17 is_stmt 0 view .LVU130
 427 00dc A369     		ldr	r3, [r4, #24]
 428              		.loc 1 332 6 view .LVU131
 429 00de 1BB9     		cbnz	r3, .L34
 333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JSTRT | ADC_FLAG_JEOC);
 430              		.loc 1 335 5 is_stmt 1 view .LVU132
 431 00e0 2368     		ldr	r3, [r4]
 432 00e2 6FF00C02 		mvn	r2, #12
 433 00e6 1A60     		str	r2, [r3]
 434              	.L34:
 336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Update ADC state machine */
 339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 435              		.loc 1 339 3 view .LVU133
 436 00e8 E36C     		ldr	r3, [r4, #76]
 437 00ea 43F40053 		orr	r3, r3, #8192
 438 00ee E364     		str	r3, [r4, #76]
 340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Note: On STM32L1, there is no independent flag of end of sequence.       */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 33


 344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*       The test of scan sequence on going is done either with scan        */
 345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*       sequence disabled or with end of conversion flag set to            */
 346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*       of end of sequence.                                                */
 347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 439              		.loc 1 347 3 view .LVU134
 440              		.loc 1 347 6 is_stmt 0 view .LVU135
 441 00f0 2368     		ldr	r3, [r4]
 442 00f2 9A68     		ldr	r2, [r3, #8]
 443              		.loc 1 347 5 view .LVU136
 444 00f4 12F4401F 		tst	r2, #3145728
 445 00f8 1FD1     		bne	.L40
 348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 446              		.loc 1 348 7 view .LVU137
 447 00fa 5A6C     		ldr	r2, [r3, #68]
 347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 448              		.loc 1 347 62 discriminator 1 view .LVU138
 449 00fc 12F4401F 		tst	r2, #3145728
 450 0100 03D0     		beq	.L35
 349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 451              		.loc 1 349 7 view .LVU139
 452 0102 9A68     		ldr	r2, [r3, #8]
 348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 453              		.loc 1 348 58 view .LVU140
 454 0104 12F4806F 		tst	r2, #1024
 455 0108 1AD1     		bne	.L41
 456              	.L35:
 350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 457              		.loc 1 350 7 view .LVU141
 458 010a 5A68     		ldr	r2, [r3, #4]
 349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 459              		.loc 1 349 62 view .LVU142
 460 010c 12F4806F 		tst	r2, #1024
 461 0110 18D1     		bne	.L42
 351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 462              		.loc 1 351 8 view .LVU143
 463 0112 9B68     		ldr	r3, [r3, #8]
 350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 464              		.loc 1 350 58 view .LVU144
 465 0114 13F0405F 		tst	r3, #805306368
 466 0118 16D1     		bne	.L43
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 467              		.loc 1 352 18 view .LVU145
 468 011a 94F82400 		ldrb	r0, [r4, #36]	@ zero_extendqisi2
 351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 469              		.loc 1 351 50 view .LVU146
 470 011e A8B9     		cbnz	r0, .L44
 353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Set ADC state */
 355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 471              		.loc 1 355 5 is_stmt 1 view .LVU147
 472 0120 E36C     		ldr	r3, [r4, #76]
 473 0122 23F48053 		bic	r3, r3, #4096
 474 0126 E364     		str	r3, [r4, #76]
 356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 475              		.loc 1 357 5 view .LVU148
 476              		.loc 1 357 9 is_stmt 0 view .LVU149
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 34


 477 0128 E36C     		ldr	r3, [r4, #76]
 478              		.loc 1 357 8 view .LVU150
 479 012a 13F4807F 		tst	r3, #256
 480 012e 05D1     		bne	.L25
 358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     { 
 359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 481              		.loc 1 359 7 is_stmt 1 view .LVU151
 482 0130 E36C     		ldr	r3, [r4, #76]
 483 0132 43F00103 		orr	r3, r3, #1
 484 0136 E364     		str	r3, [r4, #76]
 485 0138 00E0     		b	.L25
 486              	.L40:
 360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Return ADC state */
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   return HAL_OK;
 487              		.loc 1 364 10 is_stmt 0 view .LVU152
 488 013a 0020     		movs	r0, #0
 489              	.L25:
 365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** }
 490              		.loc 1 365 1 view .LVU153
 491 013c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 492              	.LVL28:
 493              	.L41:
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** }
 494              		.loc 1 364 10 view .LVU154
 495 0140 0020     		movs	r0, #0
 496 0142 FBE7     		b	.L25
 497              	.L42:
 498 0144 0020     		movs	r0, #0
 499 0146 F9E7     		b	.L25
 500              	.L43:
 501 0148 0020     		movs	r0, #0
 502 014a F7E7     		b	.L25
 503              	.L44:
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** }
 504              		.loc 1 364 10 view .LVU155
 505 014c 0020     		movs	r0, #0
 506 014e F5E7     		b	.L25
 507              	.L49:
 508              		.align	2
 509              	.L48:
 510 0150 00270140 		.word	1073817344
 511 0154 24499224 		.word	613566756
 512              		.cfi_endproc
 513              	.LFE74:
 515              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 516              		.align	1
 517              		.global	HAL_ADCEx_InjectedStart_IT
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 522              	HAL_ADCEx_InjectedStart_IT:
 523              	.LVL29:
 524              	.LFB75:
 366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 35


 367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group with interruption.
 369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group)
 370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @retval HAL status.
 373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** {
 525              		.loc 1 375 1 is_stmt 1 view -0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 529              		.loc 1 376 3 view .LVU157
 377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Check the parameters */
 379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 530              		.loc 1 379 3 view .LVU158
 380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Process locked */
 382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 531              		.loc 1 382 3 view .LVU159
 532              		.loc 1 382 3 view .LVU160
 533 0000 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 534 0004 012B     		cmp	r3, #1
 535 0006 2FD0     		beq	.L53
 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 536              		.loc 1 375 1 is_stmt 0 view .LVU161
 537 0008 10B5     		push	{r4, lr}
 538              	.LCFI5:
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 4, -8
 541              		.cfi_offset 14, -4
 542 000a 0446     		mov	r4, r0
 543              		.loc 1 382 3 is_stmt 1 discriminator 2 view .LVU162
 544 000c 0123     		movs	r3, #1
 545 000e 80F84830 		strb	r3, [r0, #72]
 546              		.loc 1 382 3 discriminator 2 view .LVU163
 383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
 547              		.loc 1 385 3 view .LVU164
 548              		.loc 1 385 20 is_stmt 0 view .LVU165
 549 0012 FFF7FEFF 		bl	ADC_Enable
 550              	.LVL30:
 386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 551              		.loc 1 388 3 is_stmt 1 view .LVU166
 552              		.loc 1 388 6 is_stmt 0 view .LVU167
 553 0016 30BB     		cbnz	r0, .L51
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
 392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
 393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 36


 554              		.loc 1 393 5 is_stmt 1 view .LVU168
 555 0018 E36C     		ldr	r3, [r4, #76]
 556 001a 23F44053 		bic	r3, r3, #12288
 557 001e 23F00103 		bic	r3, r3, #1
 558 0022 43F48053 		orr	r3, r3, #4096
 559 0026 E364     		str	r3, [r4, #76]
 394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
 396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
 398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
 399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
 400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
 401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 560              		.loc 1 401 5 view .LVU169
 561              		.loc 1 401 9 is_stmt 0 view .LVU170
 562 0028 E36C     		ldr	r3, [r4, #76]
 563              		.loc 1 401 8 view .LVU171
 564 002a 13F4807F 		tst	r3, #256
 565 002e 01D1     		bne	.L52
 402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 566              		.loc 1 404 7 is_stmt 1 view .LVU172
 567 0030 0023     		movs	r3, #0
 568 0032 2365     		str	r3, [r4, #80]
 569              	.L52:
 405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Process unlocked */
 408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 570              		.loc 1 410 5 view .LVU173
 571              		.loc 1 410 5 view .LVU174
 572 0034 0023     		movs	r3, #0
 573 0036 84F84830 		strb	r3, [r4, #72]
 574              		.loc 1 410 5 view .LVU175
 411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 575              		.loc 1 414 5 view .LVU176
 576 003a 2368     		ldr	r3, [r4]
 577 003c 6FF00402 		mvn	r2, #4
 578 0040 1A60     		str	r2, [r3]
 415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for injected channels */
 417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 579              		.loc 1 417 5 view .LVU177
 580 0042 2268     		ldr	r2, [r4]
 581 0044 5368     		ldr	r3, [r2, #4]
 582 0046 43F08003 		orr	r3, r3, #128
 583 004a 5360     		str	r3, [r2, #4]
 418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
 420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 37


 421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
 424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_INJECTED(hadc)              && 
 584              		.loc 1 425 5 view .LVU178
 585              		.loc 1 425 9 is_stmt 0 view .LVU179
 586 004c 2368     		ldr	r3, [r4]
 587 004e 9A68     		ldr	r2, [r3, #8]
 588              		.loc 1 425 8 view .LVU180
 589 0050 12F4401F 		tst	r2, #3145728
 590 0054 07D1     		bne	.L51
 426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)  )
 591              		.loc 1 426 9 view .LVU181
 592 0056 5A68     		ldr	r2, [r3, #4]
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)  )
 593              		.loc 1 425 59 discriminator 1 view .LVU182
 594 0058 12F4806F 		tst	r2, #1024
 595 005c 03D1     		bne	.L51
 427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Enable ADC software conversion for injected channels */
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_JSWSTART);
 596              		.loc 1 429 7 is_stmt 1 view .LVU183
 597 005e 9A68     		ldr	r2, [r3, #8]
 598 0060 42F48002 		orr	r2, r2, #4194304
 599 0064 9A60     		str	r2, [r3, #8]
 600              	.L51:
 430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Return function status */
 434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   return tmp_hal_status;
 435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** }
 601              		.loc 1 435 1 is_stmt 0 view .LVU184
 602 0066 10BD     		pop	{r4, pc}
 603              	.LVL31:
 604              	.L53:
 605              	.LCFI6:
 606              		.cfi_def_cfa_offset 0
 607              		.cfi_restore 4
 608              		.cfi_restore 14
 382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 609              		.loc 1 382 3 discriminator 1 view .LVU185
 610 0068 0220     		movs	r0, #2
 611              	.LVL32:
 612              		.loc 1 435 1 view .LVU186
 613 006a 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE75:
 617              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 618              		.align	1
 619              		.global	HAL_ADCEx_InjectedStop_IT
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 624              	HAL_ADCEx_InjectedStop_IT:
 625              	.LVL33:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 38


 626              	.LFB76:
 436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
 438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of 
 439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         is on going.
 441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
 442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @retval None
 448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
 450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** {
 627              		.loc 1 450 1 is_stmt 1 view -0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 631              		.loc 1 451 3 view .LVU188
 452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Check the parameters */
 454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 632              		.loc 1 454 3 view .LVU189
 455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Process locked */
 457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 633              		.loc 1 457 3 view .LVU190
 634              		.loc 1 457 3 view .LVU191
 635 0000 90F84830 		ldrb	r3, [r0, #72]	@ zero_extendqisi2
 636 0004 012B     		cmp	r3, #1
 637 0006 28D0     		beq	.L62
 450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 638              		.loc 1 450 1 is_stmt 0 view .LVU192
 639 0008 10B5     		push	{r4, lr}
 640              	.LCFI7:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 4, -8
 643              		.cfi_offset 14, -4
 644 000a 0446     		mov	r4, r0
 645              		.loc 1 457 3 is_stmt 1 discriminator 2 view .LVU193
 646 000c 0123     		movs	r3, #1
 647 000e 80F84830 		strb	r3, [r0, #72]
 648              		.loc 1 457 3 discriminator 2 view .LVU194
 458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
 460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
 461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
 462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
 463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*   are common)                                                            */
 464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */ 
 465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
 649              		.loc 1 465 3 view .LVU195
 650              		.loc 1 465 12 is_stmt 0 view .LVU196
 651 0012 C36C     		ldr	r3, [r0, #76]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 39


 652              		.loc 1 465 5 view .LVU197
 653 0014 13F4807F 		tst	r3, #256
 654 0018 04D1     		bne	.L60
 466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 655              		.loc 1 466 6 view .LVU198
 656 001a 0368     		ldr	r3, [r0]
 657 001c 5B68     		ldr	r3, [r3, #4]
 465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 658              		.loc 1 465 57 discriminator 1 view .LVU199
 659 001e 13F4806F 		tst	r3, #1024
 660 0022 08D0     		beq	.L67
 661              	.L60:
 467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
 469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
 470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
 476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       
 478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Set ADC state */
 479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   else
 485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 662              		.loc 1 487 5 is_stmt 1 view .LVU200
 663 0024 E36C     		ldr	r3, [r4, #76]
 664 0026 43F02003 		orr	r3, r3, #32
 665 002a E364     		str	r3, [r4, #76]
 488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       
 489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 666              		.loc 1 489 5 view .LVU201
 667              	.LVL34:
 668              		.loc 1 489 20 is_stmt 0 view .LVU202
 669 002c 0120     		movs	r0, #1
 670              	.LVL35:
 671              	.L61:
 490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Process unlocked */
 493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 672              		.loc 1 493 3 is_stmt 1 view .LVU203
 673              		.loc 1 493 3 view .LVU204
 674 002e 0023     		movs	r3, #0
 675 0030 84F84830 		strb	r3, [r4, #72]
 676              		.loc 1 493 3 view .LVU205
 494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Return function status */
 496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   return tmp_hal_status;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 40


 677              		.loc 1 496 3 view .LVU206
 497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** }
 678              		.loc 1 497 1 is_stmt 0 view .LVU207
 679 0034 10BD     		pop	{r4, pc}
 680              	.LVL36:
 681              	.L67:
 470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 682              		.loc 1 470 5 is_stmt 1 view .LVU208
 470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 683              		.loc 1 470 22 is_stmt 0 view .LVU209
 684 0036 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 685              	.LVL37:
 473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 686              		.loc 1 473 5 is_stmt 1 view .LVU210
 473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 687              		.loc 1 473 8 is_stmt 0 view .LVU211
 688 003a 0028     		cmp	r0, #0
 689 003c F7D1     		bne	.L61
 476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       
 690              		.loc 1 476 7 is_stmt 1 view .LVU212
 691 003e 2268     		ldr	r2, [r4]
 692 0040 5368     		ldr	r3, [r2, #4]
 693 0042 23F08003 		bic	r3, r3, #128
 694 0046 5360     		str	r3, [r2, #4]
 479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 695              		.loc 1 479 7 view .LVU213
 696 0048 E36C     		ldr	r3, [r4, #76]
 697 004a 23F48853 		bic	r3, r3, #4352
 698 004e 23F00103 		bic	r3, r3, #1
 699 0052 43F00103 		orr	r3, r3, #1
 700 0056 E364     		str	r3, [r4, #76]
 701 0058 E9E7     		b	.L61
 702              	.LVL38:
 703              	.L62:
 704              	.LCFI8:
 705              		.cfi_def_cfa_offset 0
 706              		.cfi_restore 4
 707              		.cfi_restore 14
 457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 708              		.loc 1 457 3 is_stmt 0 discriminator 1 view .LVU214
 709 005a 0220     		movs	r0, #2
 710              	.LVL39:
 711              		.loc 1 497 1 view .LVU215
 712 005c 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE76:
 716              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 717              		.align	1
 718              		.global	HAL_ADCEx_InjectedGetValue
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 723              	HAL_ADCEx_InjectedGetValue:
 724              	.LVL40:
 725              	.LFB77:
 498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 41


 500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
 501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
 502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
 503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS 
 504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
 505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
 506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
 507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *            to flag JEOC.
 508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
 509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
 510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
 511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
 512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
 513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
 514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
 515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
 516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion() 
 517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
 518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  InjectedRank the converted ADC injected rank.
 520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
 521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
 522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
 523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
 524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
 525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
 526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
 528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** {
 726              		.loc 1 528 1 is_stmt 1 view -0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0;
 731              		.loc 1 529 3 view .LVU217
 530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Check the parameters */
 532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 732              		.loc 1 532 3 view .LVU218
 533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 733              		.loc 1 533 3 view .LVU219
 534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Get ADC converted value */
 536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   switch(InjectedRank)
 734              		.loc 1 536 3 view .LVU220
 735 0000 0329     		cmp	r1, #3
 736 0002 09D0     		beq	.L69
 737 0004 0429     		cmp	r1, #4
 738 0006 04D0     		beq	.L70
 739 0008 0229     		cmp	r1, #2
 740 000a 08D0     		beq	.L71
 537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {  
 538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
 540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 42


 542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
 543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
 546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     default:
 549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 741              		.loc 1 549 7 view .LVU221
 742              		.loc 1 549 21 is_stmt 0 view .LVU222
 743 000c 0368     		ldr	r3, [r0]
 744              		.loc 1 549 15 view .LVU223
 745 000e 986C     		ldr	r0, [r3, #72]
 746              	.LVL41:
 550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 747              		.loc 1 550 7 is_stmt 1 view .LVU224
 551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
 554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   return tmp_jdr;
 748              		.loc 1 554 3 view .LVU225
 555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** }
 749              		.loc 1 555 1 is_stmt 0 view .LVU226
 750 0010 7047     		bx	lr
 751              	.LVL42:
 752              	.L70:
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 753              		.loc 1 539 7 is_stmt 1 view .LVU227
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 754              		.loc 1 539 21 is_stmt 0 view .LVU228
 755 0012 0368     		ldr	r3, [r0]
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 756              		.loc 1 539 15 view .LVU229
 757 0014 586D     		ldr	r0, [r3, #84]
 758              	.LVL43:
 540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
 759              		.loc 1 540 7 is_stmt 1 view .LVU230
 760 0016 7047     		bx	lr
 761              	.LVL44:
 762              	.L69:
 542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 763              		.loc 1 542 7 view .LVU231
 542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 764              		.loc 1 542 21 is_stmt 0 view .LVU232
 765 0018 0368     		ldr	r3, [r0]
 542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 766              		.loc 1 542 15 view .LVU233
 767 001a 186D     		ldr	r0, [r3, #80]
 768              	.LVL45:
 543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
 769              		.loc 1 543 7 is_stmt 1 view .LVU234
 770 001c 7047     		bx	lr
 771              	.LVL46:
 772              	.L71:
 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 773              		.loc 1 545 7 view .LVU235
 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 43


 774              		.loc 1 545 21 is_stmt 0 view .LVU236
 775 001e 0368     		ldr	r3, [r0]
 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 776              		.loc 1 545 15 view .LVU237
 777 0020 D86C     		ldr	r0, [r3, #76]
 778              	.LVL47:
 546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 779              		.loc 1 546 7 is_stmt 1 view .LVU238
 780 0022 7047     		bx	lr
 781              		.cfi_endproc
 782              	.LFE77:
 784              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 785              		.align	1
 786              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 791              	HAL_ADCEx_InjectedConvCpltCallback:
 792              	.LVL48:
 793              	.LFB78:
 556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
 558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non blocking mode 
 559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @retval None
 561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* hadc)
 563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** {
 794              		.loc 1 563 1 view -0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   UNUSED(hadc);
 799              		.loc 1 565 3 view .LVU240
 566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****             the HAL_ADCEx_InjectedConvCpltCallback could be implemented in the user file
 569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** }
 800              		.loc 1 570 1 is_stmt 0 view .LVU241
 801 0000 7047     		bx	lr
 802              		.cfi_endproc
 803              	.LFE78:
 805              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 806              		.align	1
 807              		.global	HAL_ADCEx_InjectedConfigChannel
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 812              	HAL_ADCEx_InjectedConfigChannel:
 813              	.LVL49:
 814              	.LFB79:
 571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
 573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @}
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 44


 574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADC Extended Peripheral Control functions
 577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
 578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *
 579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** @verbatim   
 580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****  ===============================================================================
 581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
 582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****  ===============================================================================  
 583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (+) Configure channels on injected group
 585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       
 586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** @endverbatim
 587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @{
 588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** /**
 591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @brief  Configures the ADC injected group and the selected channel to be
 592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         linked to the injected group.
 593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
 594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this 
 595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
 596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
 597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state: 
 598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         this function must be called when ADC is not under conversion.
 599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @param  sConfigInjected Structure of ADC injected group and ADC channel for
 601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   *         injected group.
 602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   * @retval None
 603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   */
 604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
 605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** {   
 815              		.loc 1 605 1 is_stmt 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 8
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819              		@ link register save eliminated.
 820              		.loc 1 605 1 is_stmt 0 view .LVU243
 821 0000 70B4     		push	{r4, r5, r6}
 822              	.LCFI9:
 823              		.cfi_def_cfa_offset 12
 824              		.cfi_offset 4, -12
 825              		.cfi_offset 5, -8
 826              		.cfi_offset 6, -4
 827 0002 83B0     		sub	sp, sp, #12
 828              	.LCFI10:
 829              		.cfi_def_cfa_offset 24
 606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 830              		.loc 1 606 3 is_stmt 1 view .LVU244
 831              	.LVL50:
 607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 832              		.loc 1 607 3 view .LVU245
 833              		.loc 1 607 17 is_stmt 0 view .LVU246
 834 0004 0022     		movs	r2, #0
 835 0006 0192     		str	r2, [sp, #4]
 608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Check the parameters */
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 45


 610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 836              		.loc 1 610 3 is_stmt 1 view .LVU247
 611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
 837              		.loc 1 611 3 view .LVU248
 612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
 838              		.loc 1 612 3 view .LVU249
 613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
 839              		.loc 1 613 3 view .LVU250
 614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
 840              		.loc 1 614 3 view .LVU251
 615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, sConfigInjected->InjectedOffset));
 841              		.loc 1 615 3 view .LVU252
 616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 842              		.loc 1 617 3 view .LVU253
 618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
 843              		.loc 1 619 5 view .LVU254
 620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
 844              		.loc 1 620 5 view .LVU255
 621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
 845              		.loc 1 621 5 view .LVU256
 622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if(sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 846              		.loc 1 624 3 view .LVU257
 625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
 847              		.loc 1 626 5 view .LVU258
 627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Process locked */
 630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 848              		.loc 1 630 3 view .LVU259
 849              		.loc 1 630 3 view .LVU260
 850 0008 90F84820 		ldrb	r2, [r0, #72]	@ zero_extendqisi2
 851 000c 012A     		cmp	r2, #1
 852 000e 00F01081 		beq	.L99
 853 0012 0346     		mov	r3, r0
 854              		.loc 1 630 3 discriminator 2 view .LVU261
 855 0014 0122     		movs	r2, #1
 856 0016 80F84820 		strb	r2, [r0, #72]
 857              		.loc 1 630 3 discriminator 2 view .LVU262
 631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
 633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* - if scan mode is disabled, injected channels sequence length is set to  */
 634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*   0x00: 1 channel converted (channel on regular rank 1)                  */
 635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*   Parameter "InjectedNbrOfConversion" is discarded.                      */
 636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*   Note: Scan mode is present by hardware on this device and, if          */
 637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*   disabled, discards automatically nb of conversions. Anyway, nb of      */
 638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*   conversions is forced to 0x00 for alignment over all STM32 devices.    */
 639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* - if scan mode is enabled, injected channels sequence length is set to   */
 640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*   parameter ""InjectedNbrOfConversion".                                  */
 641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 858              		.loc 1 641 3 view .LVU263
 859              		.loc 1 641 17 is_stmt 0 view .LVU264
 860 001a 0269     		ldr	r2, [r0, #16]
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 46


 861              		.loc 1 641 6 view .LVU265
 862 001c 002A     		cmp	r2, #0
 863 001e 5BD1     		bne	.L78
 642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
 864              		.loc 1 643 5 is_stmt 1 view .LVU266
 865              		.loc 1 643 24 is_stmt 0 view .LVU267
 866 0020 4A68     		ldr	r2, [r1, #4]
 867              		.loc 1 643 8 view .LVU268
 868 0022 012A     		cmp	r2, #1
 869 0024 4ED0     		beq	.L101
 644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for all injected ranks */
 646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->JSQR                              ,
 647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                    ADC_JSQR_JL   |
 648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ4 |
 649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ3 |
 650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ2 |
 651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ1                                     ,
 652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                    ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,
 653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                                     ADC_INJECTED_RANK_1,
 654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                                     0x01)                             );
 655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* If another injected rank than rank1 was intended to be set, and could  */
 657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* not due to ScanConvMode disabled, error is reported.                   */
 658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     else
 659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
 661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 870              		.loc 1 661 7 is_stmt 1 view .LVU269
 871 0026 C26C     		ldr	r2, [r0, #76]
 872 0028 42F02002 		orr	r2, r2, #32
 873 002c C264     		str	r2, [r0, #76]
 662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         
 663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 874              		.loc 1 663 7 view .LVU270
 875              	.LVL51:
 876              		.loc 1 663 22 is_stmt 0 view .LVU271
 877 002e 0120     		movs	r0, #1
 878              	.LVL52:
 879              	.L80:
 664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   else
 667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {   
 668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Since injected channels rank conv. order depends on total number of   */
 669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* injected conversions, selected rank must be below or equal to total   */
 670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* number of injected conversions to be updated.                         */
 671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank <= sConfigInjected->InjectedNbrOfConversion)
 672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
 674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Set the SQx bits for the selected rank */
 675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                                     ,
 676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  
 677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                               |
 678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
 679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 47


 680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion)               ,
 681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  
 682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JSQR_JL_SHIFT(sConfigInjected->InjectedNbrOfConversion)             |
 683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,      
 684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                                                 sConfigInjected->InjectedRank,         
 685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                                                 sConfigInjected->InjectedNbrOfConversion)  );
 686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     else
 688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
 690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                       ,
 691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  
 692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                               |
 693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
 694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
 695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion) ,
 696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  
 697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  0x00000000                                                  );
 698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   } 
 700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Enable external trigger if trigger selection is different of software    */
 702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* start.                                                                   */
 703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Note: This configuration keeps the hardware feature of parameter         */
 704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to             */
 705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*       software start.                                                    */
 706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 880              		.loc 1 707 3 is_stmt 1 view .LVU272
 881              		.loc 1 707 22 is_stmt 0 view .LVU273
 882 0030 8A69     		ldr	r2, [r1, #24]
 883              		.loc 1 707 6 view .LVU274
 884 0032 102A     		cmp	r2, #16
 885 0034 79D0     		beq	.L82
 708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {    
 709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR2                        ,
 886              		.loc 1 709 5 is_stmt 1 view .LVU275
 887 0036 1D68     		ldr	r5, [r3]
 888 0038 AC68     		ldr	r4, [r5, #8]
 889 003a 24F47C1C 		bic	ip, r4, #4128768
 890 003e CC69     		ldr	r4, [r1, #28]
 891 0040 2243     		orrs	r2, r2, r4
 892 0042 4CEA0202 		orr	r2, ip, r2
 893 0046 AA60     		str	r2, [r5, #8]
 894              	.L83:
 710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_CR2_JEXTEN  |
 711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_CR2_JEXTSEL                            ,
 712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                sConfigInjected->ExternalTrigInjecConv    |
 713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                sConfigInjected->ExternalTrigInjecConvEdge  );
 714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   else
 716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR2,
 718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_CR2_JEXTEN  |
 719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_CR2_JEXTSEL    ,
 720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                0x00000000          );
 721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 48


 722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
 724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
 725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
 726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
 727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
 728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if ((ADC_IS_ENABLE(hadc) == RESET))
 895              		.loc 1 728 3 view .LVU276
 896              		.loc 1 728 8 is_stmt 0 view .LVU277
 897 0048 1A68     		ldr	r2, [r3]
 898 004a 1468     		ldr	r4, [r2]
 899              		.loc 1 728 6 view .LVU278
 900 004c 14F0400F 		tst	r4, #64
 901 0050 09D1     		bne	.L84
 729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_JAUTO   |
 902              		.loc 1 730 5 is_stmt 1 view .LVU279
 903              		.loc 1 730 19 is_stmt 0 view .LVU280
 904 0052 5468     		ldr	r4, [r2, #4]
 905              		.loc 1 730 25 view .LVU281
 906 0054 24F4A054 		bic	r4, r4, #5120
 907 0058 5460     		str	r4, [r2, #4]
 731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                              ADC_CR1_JDISCEN  );
 732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Automatic injected conversion can be enabled if injected group         */
 734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* external triggers are disabled.                                        */
 735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == ENABLE)
 908              		.loc 1 735 5 is_stmt 1 view .LVU282
 909              		.loc 1 735 24 is_stmt 0 view .LVU283
 910 005a 4A7D     		ldrb	r2, [r1, #21]	@ zero_extendqisi2
 911              		.loc 1 735 8 view .LVU284
 912 005c 012A     		cmp	r2, #1
 913 005e 6AD0     		beq	.L102
 914              	.LVL53:
 915              	.L85:
 736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO);
 740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       else
 742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         
 746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* Injected discontinuous can be enabled only if auto-injected mode is    */
 751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     /* disabled.                                                              */  
 752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
 916              		.loc 1 752 5 is_stmt 1 view .LVU285
 917              		.loc 1 752 24 is_stmt 0 view .LVU286
 918 0060 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 919              		.loc 1 752 8 view .LVU287
 920 0062 012A     		cmp	r2, #1
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 49


 921 0064 76D0     		beq	.L103
 922              	.LVL54:
 923              	.L84:
 753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == DISABLE)
 755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JDISCEN);
 757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       } 
 758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       else
 759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         
 763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** 
 768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Channel sampling time configuration */
 769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* For InjectedChannels 0 to 9 */
 770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedChannel < ADC_CHANNEL_10)
 924              		.loc 1 770 3 is_stmt 1 view .LVU288
 925              		.loc 1 770 22 is_stmt 0 view .LVU289
 926 0066 0A68     		ldr	r2, [r1]
 927              		.loc 1 770 6 view .LVU290
 928 0068 092A     		cmp	r2, #9
 929 006a 00F28180 		bhi	.L88
 771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR3,
 930              		.loc 1 772 5 is_stmt 1 view .LVU291
 931 006e 1D68     		ldr	r5, [r3]
 932 0070 6C69     		ldr	r4, [r5, #20]
 933 0072 02EB4202 		add	r2, r2, r2, lsl #1
 934 0076 4FF0070C 		mov	ip, #7
 935 007a 0CFA02FC 		lsl	ip, ip, r2
 936 007e 24EA0C04 		bic	r4, r4, ip
 937 0082 8E68     		ldr	r6, [r1, #8]
 938 0084 06FA02F2 		lsl	r2, r6, r2
 939 0088 2243     		orrs	r2, r2, r4
 940 008a 6A61     		str	r2, [r5, #20]
 941              	.L89:
 773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_SMPR3(ADC_SMPR3_SMP0, sConfigInjected->InjectedChannel),
 774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_SMPR3(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
 775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* For InjectedChannels 10 to 19 */
 777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   else if (sConfigInjected->InjectedChannel < ADC_CHANNEL_20)
 778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR2,
 780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel),
 781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
 782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* For InjectedChannels 20 to 26 for devices Cat.1, Cat.2, Cat.3 */
 784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* For InjectedChannels 20 to 29 for devices Cat4, Cat.5 */
 785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   else if (sConfigInjected->InjectedChannel <= ADC_SMPR1_CHANNEL_MAX)
 786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {   
 787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR1,
 788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP20, sConfigInjected->InjectedChannel),
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 50


 789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
 790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* For InjectedChannels 30 to 31 for devices Cat4, Cat.5 */
 792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   else
 793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     ADC_SMPR0_CHANNEL_SET(hadc, sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedCha
 795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Configure the offset: offset enable/disable, InjectedChannel, offset value */
 799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   switch(sConfigInjected->InjectedRank)
 942              		.loc 1 799 3 view .LVU292
 943              		.loc 1 799 25 is_stmt 0 view .LVU293
 944 008c 4A68     		ldr	r2, [r1, #4]
 945              		.loc 1 799 3 view .LVU294
 946 008e 022A     		cmp	r2, #2
 947 0090 00F09C80 		beq	.L92
 948 0094 032A     		cmp	r2, #3
 949 0096 00F0A180 		beq	.L93
 950 009a 012A     		cmp	r2, #1
 951 009c 40F0A680 		bne	.L94
 800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case 1:
 802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Set injected channel 1 offset */
 803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR1,
 952              		.loc 1 803 7 is_stmt 1 view .LVU295
 953 00a0 1C68     		ldr	r4, [r3]
 954 00a2 A269     		ldr	r2, [r4, #24]
 955 00a4 6FF30B02 		bfc	r2, #0, #12
 956 00a8 CD68     		ldr	r5, [r1, #12]
 957 00aa 2A43     		orrs	r2, r2, r5
 958 00ac A261     		str	r2, [r4, #24]
 804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JOFR1_JOFFSET1,
 805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
 806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 959              		.loc 1 806 7 view .LVU296
 960              	.L95:
 807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case 2:
 808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Set injected channel 2 offset */
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR2,
 810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JOFR2_JOFFSET2,
 811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
 812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case 3:
 814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Set injected channel 3 offset */
 815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR3,
 816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JOFR3_JOFFSET3,
 817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
 818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case 4:
 820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     default:
 821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR4,
 822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JOFR4_JOFFSET4,
 823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
 824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       break;
 825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 51


 827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
 828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
 829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) ||
 961              		.loc 1 829 3 view .LVU297
 962              		.loc 1 829 23 is_stmt 0 view .LVU298
 963 00ae 0A68     		ldr	r2, [r1]
 964              		.loc 1 829 68 view .LVU299
 965 00b0 103A     		subs	r2, r2, #16
 966              		.loc 1 829 6 view .LVU300
 967 00b2 012A     		cmp	r2, #1
 968 00b4 40F2A280 		bls	.L104
 969              	.LVL55:
 970              	.L96:
 830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
 831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     SET_BIT(ADC->CCR, ADC_CCR_TSVREFE);
 833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR))
 835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Delay for temperature sensor stabilization time */
 837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       /* Compute number of CPU cycles to wait for */
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000));
 839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       while(wait_loop_index != 0)
 840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         wait_loop_index--;
 842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     }
 844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Process unlocked */
 847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 971              		.loc 1 847 3 is_stmt 1 view .LVU301
 972              		.loc 1 847 3 view .LVU302
 973 00b8 0022     		movs	r2, #0
 974 00ba 83F84820 		strb	r2, [r3, #72]
 975              		.loc 1 847 3 view .LVU303
 848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   /* Return function status */
 850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   return tmp_hal_status;
 976              		.loc 1 850 3 view .LVU304
 977              	.LVL56:
 978              	.L77:
 851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c **** }
 979              		.loc 1 851 1 is_stmt 0 view .LVU305
 980 00be 03B0     		add	sp, sp, #12
 981              	.LCFI11:
 982              		.cfi_remember_state
 983              		.cfi_def_cfa_offset 12
 984              		@ sp needed
 985 00c0 70BC     		pop	{r4, r5, r6}
 986              	.LCFI12:
 987              		.cfi_restore 6
 988              		.cfi_restore 5
 989              		.cfi_restore 4
 990              		.cfi_def_cfa_offset 0
 991 00c2 7047     		bx	lr
 992              	.LVL57:
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 52


 993              	.L101:
 994              	.LCFI13:
 995              		.cfi_restore_state
 646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                    ADC_JSQR_JL   |
 996              		.loc 1 646 9 is_stmt 1 view .LVU306
 997 00c4 0068     		ldr	r0, [r0]
 998              	.LVL58:
 646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                    ADC_JSQR_JL   |
 999              		.loc 1 646 9 is_stmt 0 view .LVU307
 1000 00c6 426C     		ldr	r2, [r0, #68]
 1001 00c8 6FF31502 		bfc	r2, #0, #22
 1002 00cc 0C68     		ldr	r4, [r1]
 1003 00ce 42EAC432 		orr	r2, r2, r4, lsl #15
 1004 00d2 4264     		str	r2, [r0, #68]
 606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 1005              		.loc 1 606 21 view .LVU308
 1006 00d4 0020     		movs	r0, #0
 1007 00d6 ABE7     		b	.L80
 1008              	.LVL59:
 1009              	.L78:
 671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 1010              		.loc 1 671 5 is_stmt 1 view .LVU309
 671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 1011              		.loc 1 671 24 is_stmt 0 view .LVU310
 1012 00d8 4A68     		ldr	r2, [r1, #4]
 671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 1013              		.loc 1 671 57 view .LVU311
 1014 00da 0869     		ldr	r0, [r1, #16]
 1015              	.LVL60:
 671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 1016              		.loc 1 671 8 view .LVU312
 1017 00dc 8242     		cmp	r2, r0
 1018 00de 14D8     		bhi	.L81
 675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  
 1019              		.loc 1 675 7 is_stmt 1 view .LVU313
 1020 00e0 1E68     		ldr	r6, [r3]
 1021 00e2 746C     		ldr	r4, [r6, #68]
 1022 00e4 121A     		subs	r2, r2, r0
 1023 00e6 02EB8202 		add	r2, r2, r2, lsl #2
 1024 00ea 0F32     		adds	r2, r2, #15
 1025 00ec 1F25     		movs	r5, #31
 1026 00ee 9540     		lsls	r5, r5, r2
 1027 00f0 45F44015 		orr	r5, r5, #3145728
 1028 00f4 24EA0504 		bic	r4, r4, r5
 1029 00f8 0138     		subs	r0, r0, #1
 1030 00fa 0D68     		ldr	r5, [r1]
 1031 00fc 9540     		lsls	r5, r5, r2
 1032 00fe 45EA0055 		orr	r5, r5, r0, lsl #20
 1033 0102 2C43     		orrs	r4, r4, r5
 1034 0104 7464     		str	r4, [r6, #68]
 606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 1035              		.loc 1 606 21 is_stmt 0 view .LVU314
 1036 0106 0020     		movs	r0, #0
 1037 0108 92E7     		b	.L80
 1038              	.L81:
 690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  
 1039              		.loc 1 690 7 is_stmt 1 view .LVU315
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 53


 1040 010a 1D68     		ldr	r5, [r3]
 1041 010c 6C6C     		ldr	r4, [r5, #68]
 1042 010e 121A     		subs	r2, r2, r0
 1043 0110 02EB8202 		add	r2, r2, r2, lsl #2
 1044 0114 0F32     		adds	r2, r2, #15
 1045 0116 1F20     		movs	r0, #31
 1046 0118 00FA02F2 		lsl	r2, r0, r2
 1047 011c 42F44012 		orr	r2, r2, #3145728
 1048 0120 24EA0202 		bic	r2, r4, r2
 1049 0124 6A64     		str	r2, [r5, #68]
 606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 1050              		.loc 1 606 21 is_stmt 0 view .LVU316
 1051 0126 0020     		movs	r0, #0
 1052 0128 82E7     		b	.L80
 1053              	.LVL61:
 1054              	.L82:
 717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_CR2_JEXTEN  |
 1055              		.loc 1 717 5 is_stmt 1 view .LVU317
 1056 012a 1C68     		ldr	r4, [r3]
 1057 012c A268     		ldr	r2, [r4, #8]
 1058 012e 22F47C12 		bic	r2, r2, #4128768
 1059 0132 A260     		str	r2, [r4, #8]
 1060 0134 88E7     		b	.L83
 1061              	.L102:
 737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 1062              		.loc 1 737 7 view .LVU318
 737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 1063              		.loc 1 737 26 is_stmt 0 view .LVU319
 1064 0136 8C69     		ldr	r4, [r1, #24]
 737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 1065              		.loc 1 737 10 view .LVU320
 1066 0138 102C     		cmp	r4, #16
 1067 013a 05D0     		beq	.L105
 744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         
 1068              		.loc 1 744 9 is_stmt 1 view .LVU321
 1069 013c D86C     		ldr	r0, [r3, #76]
 1070              	.LVL62:
 744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         
 1071              		.loc 1 744 9 is_stmt 0 view .LVU322
 1072 013e 40F02000 		orr	r0, r0, #32
 1073 0142 D864     		str	r0, [r3, #76]
 746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 1074              		.loc 1 746 9 is_stmt 1 view .LVU323
 1075              	.LVL63:
 746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 1076              		.loc 1 746 24 is_stmt 0 view .LVU324
 1077 0144 1046     		mov	r0, r2
 1078 0146 8BE7     		b	.L85
 1079              	.LVL64:
 1080              	.L105:
 739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 1081              		.loc 1 739 9 is_stmt 1 view .LVU325
 1082 0148 1C68     		ldr	r4, [r3]
 1083 014a 6268     		ldr	r2, [r4, #4]
 1084 014c 42F48062 		orr	r2, r2, #1024
 1085 0150 6260     		str	r2, [r4, #4]
 1086 0152 85E7     		b	.L85
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 54


 1087              	.L103:
 754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 1088              		.loc 1 754 7 view .LVU326
 754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 1089              		.loc 1 754 26 is_stmt 0 view .LVU327
 1090 0154 4C7D     		ldrb	r4, [r1, #21]	@ zero_extendqisi2
 754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 1091              		.loc 1 754 10 view .LVU328
 1092 0156 2CB9     		cbnz	r4, .L87
 756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       } 
 1093              		.loc 1 756 9 is_stmt 1 view .LVU329
 1094 0158 1C68     		ldr	r4, [r3]
 1095 015a 6268     		ldr	r2, [r4, #4]
 1096 015c 42F48052 		orr	r2, r2, #4096
 1097 0160 6260     		str	r2, [r4, #4]
 1098 0162 80E7     		b	.L84
 1099              	.L87:
 761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         
 1100              		.loc 1 761 9 view .LVU330
 1101 0164 D86C     		ldr	r0, [r3, #76]
 1102              	.LVL65:
 761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****         
 1103              		.loc 1 761 9 is_stmt 0 view .LVU331
 1104 0166 40F02000 		orr	r0, r0, #32
 1105 016a D864     		str	r0, [r3, #76]
 763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 1106              		.loc 1 763 9 is_stmt 1 view .LVU332
 1107              	.LVL66:
 763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 1108              		.loc 1 763 24 is_stmt 0 view .LVU333
 1109 016c 1046     		mov	r0, r2
 1110 016e 7AE7     		b	.L84
 1111              	.LVL67:
 1112              	.L88:
 777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 1113              		.loc 1 777 8 is_stmt 1 view .LVU334
 777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {
 1114              		.loc 1 777 11 is_stmt 0 view .LVU335
 1115 0170 132A     		cmp	r2, #19
 1116 0172 0DD8     		bhi	.L90
 779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel),
 1117              		.loc 1 779 5 is_stmt 1 view .LVU336
 1118 0174 1E68     		ldr	r6, [r3]
 1119 0176 3469     		ldr	r4, [r6, #16]
 1120 0178 02EB4202 		add	r2, r2, r2, lsl #1
 1121 017c 1E3A     		subs	r2, r2, #30
 1122 017e 0725     		movs	r5, #7
 1123 0180 9540     		lsls	r5, r5, r2
 1124 0182 24EA0504 		bic	r4, r4, r5
 1125 0186 8D68     		ldr	r5, [r1, #8]
 1126 0188 9540     		lsls	r5, r5, r2
 1127 018a 2C43     		orrs	r4, r4, r5
 1128 018c 3461     		str	r4, [r6, #16]
 1129 018e 7DE7     		b	.L89
 1130              	.L90:
 785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {   
 1131              		.loc 1 785 8 view .LVU337
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 55


 785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   {   
 1132              		.loc 1 785 11 is_stmt 0 view .LVU338
 1133 0190 1D2A     		cmp	r2, #29
 1134 0192 0DD8     		bhi	.L91
 787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP20, sConfigInjected->InjectedChannel),
 1135              		.loc 1 787 5 is_stmt 1 view .LVU339
 1136 0194 1E68     		ldr	r6, [r3]
 1137 0196 F468     		ldr	r4, [r6, #12]
 1138 0198 02EB4202 		add	r2, r2, r2, lsl #1
 1139 019c 3C3A     		subs	r2, r2, #60
 1140 019e 0725     		movs	r5, #7
 1141 01a0 9540     		lsls	r5, r5, r2
 1142 01a2 24EA0504 		bic	r4, r4, r5
 1143 01a6 8D68     		ldr	r5, [r1, #8]
 1144 01a8 9540     		lsls	r5, r5, r2
 1145 01aa 2C43     		orrs	r4, r4, r5
 1146 01ac F460     		str	r4, [r6, #12]
 1147 01ae 6DE7     		b	.L89
 1148              	.L91:
 794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 1149              		.loc 1 794 5 view .LVU340
 1150 01b0 1E68     		ldr	r6, [r3]
 1151 01b2 F46D     		ldr	r4, [r6, #92]
 1152 01b4 02EB4202 		add	r2, r2, r2, lsl #1
 1153 01b8 5A3A     		subs	r2, r2, #90
 1154 01ba 0725     		movs	r5, #7
 1155 01bc 9540     		lsls	r5, r5, r2
 1156 01be 24EA0504 		bic	r4, r4, r5
 1157 01c2 8D68     		ldr	r5, [r1, #8]
 1158 01c4 9540     		lsls	r5, r5, r2
 1159 01c6 2C43     		orrs	r4, r4, r5
 1160 01c8 F465     		str	r4, [r6, #92]
 1161 01ca 5FE7     		b	.L89
 1162              	.L92:
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JOFR2_JOFFSET2,
 1163              		.loc 1 809 7 view .LVU341
 1164 01cc 1C68     		ldr	r4, [r3]
 1165 01ce E269     		ldr	r2, [r4, #28]
 1166 01d0 6FF30B02 		bfc	r2, #0, #12
 1167 01d4 CD68     		ldr	r5, [r1, #12]
 1168 01d6 2A43     		orrs	r2, r2, r5
 1169 01d8 E261     		str	r2, [r4, #28]
 812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case 3:
 1170              		.loc 1 812 7 view .LVU342
 1171 01da 68E7     		b	.L95
 1172              	.L93:
 815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JOFR3_JOFFSET3,
 1173              		.loc 1 815 7 view .LVU343
 1174 01dc 1C68     		ldr	r4, [r3]
 1175 01de 226A     		ldr	r2, [r4, #32]
 1176 01e0 6FF30B02 		bfc	r2, #0, #12
 1177 01e4 CD68     		ldr	r5, [r1, #12]
 1178 01e6 2A43     		orrs	r2, r2, r5
 1179 01e8 2262     		str	r2, [r4, #32]
 818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     case 4:
 1180              		.loc 1 818 7 view .LVU344
 1181 01ea 60E7     		b	.L95
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 56


 1182              	.L94:
 821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****                  ADC_JOFR4_JOFFSET4,
 1183              		.loc 1 821 7 view .LVU345
 1184 01ec 1C68     		ldr	r4, [r3]
 1185 01ee 626A     		ldr	r2, [r4, #36]
 1186 01f0 6FF30B02 		bfc	r2, #0, #12
 1187 01f4 CD68     		ldr	r5, [r1, #12]
 1188 01f6 2A43     		orrs	r2, r2, r5
 1189 01f8 6262     		str	r2, [r4, #36]
 824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   }
 1190              		.loc 1 824 7 view .LVU346
 1191 01fa 58E7     		b	.L95
 1192              	.L104:
 832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     
 1193              		.loc 1 832 5 view .LVU347
 1194 01fc 0E4C     		ldr	r4, .L106
 1195 01fe 6268     		ldr	r2, [r4, #4]
 1196 0200 42F40002 		orr	r2, r2, #8388608
 1197 0204 6260     		str	r2, [r4, #4]
 834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 1198              		.loc 1 834 5 view .LVU348
 834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 1199              		.loc 1 834 25 is_stmt 0 view .LVU349
 1200 0206 0A68     		ldr	r2, [r1]
 834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****     {
 1201              		.loc 1 834 8 view .LVU350
 1202 0208 102A     		cmp	r2, #16
 1203 020a 7FF455AF 		bne	.L96
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       while(wait_loop_index != 0)
 1204              		.loc 1 838 7 is_stmt 1 view .LVU351
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       while(wait_loop_index != 0)
 1205              		.loc 1 838 69 is_stmt 0 view .LVU352
 1206 020e 0B4A     		ldr	r2, .L106+4
 1207 0210 1268     		ldr	r2, [r2]
 1208 0212 0B49     		ldr	r1, .L106+8
 1209              	.LVL68:
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       while(wait_loop_index != 0)
 1210              		.loc 1 838 69 view .LVU353
 1211 0214 A1FB0212 		umull	r1, r2, r1, r2
 1212 0218 920C     		lsrs	r2, r2, #18
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       while(wait_loop_index != 0)
 1213              		.loc 1 838 50 view .LVU354
 1214 021a 02EB8202 		add	r2, r2, r2, lsl #2
 1215 021e 5200     		lsls	r2, r2, #1
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       while(wait_loop_index != 0)
 1216              		.loc 1 838 23 view .LVU355
 1217 0220 0192     		str	r2, [sp, #4]
 839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 1218              		.loc 1 839 7 is_stmt 1 view .LVU356
 839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 1219              		.loc 1 839 12 is_stmt 0 view .LVU357
 1220 0222 02E0     		b	.L97
 1221              	.L98:
 841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 1222              		.loc 1 841 9 is_stmt 1 view .LVU358
 841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       }
 1223              		.loc 1 841 24 is_stmt 0 view .LVU359
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 57


 1224 0224 019A     		ldr	r2, [sp, #4]
 1225 0226 013A     		subs	r2, r2, #1
 1226 0228 0192     		str	r2, [sp, #4]
 1227              	.L97:
 839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****       {
 1228              		.loc 1 839 29 is_stmt 1 view .LVU360
 1229 022a 019A     		ldr	r2, [sp, #4]
 1230 022c 002A     		cmp	r2, #0
 1231 022e F9D1     		bne	.L98
 1232 0230 42E7     		b	.L96
 1233              	.LVL69:
 1234              	.L99:
 630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 1235              		.loc 1 630 3 is_stmt 0 discriminator 1 view .LVU361
 1236 0232 0220     		movs	r0, #2
 1237              	.LVL70:
 630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_adc_ex.c ****   
 1238              		.loc 1 630 3 discriminator 1 view .LVU362
 1239 0234 43E7     		b	.L77
 1240              	.L107:
 1241 0236 00BF     		.align	2
 1242              	.L106:
 1243 0238 00270140 		.word	1073817344
 1244 023c 00000000 		.word	SystemCoreClock
 1245 0240 83DE1B43 		.word	1125899907
 1246              		.cfi_endproc
 1247              	.LFE79:
 1249              		.text
 1250              	.Letext0:
 1251              		.file 3 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/arm-none-eabi/include/ma
 1252              		.file 4 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.2 Rel1/arm-none-eabi/include/sy
 1253              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l152xe.h"
 1254              		.file 6 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 1255              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 1256              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 1257              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_adc.h"
 1258              		.file 10 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_adc_ex.h"
 1259              		.file 11 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 1260              		.file 12 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
ARM GAS  C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s 			page 58


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l1xx_hal_adc_ex.c
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:19     .text.HAL_ADCEx_InjectedStart:00000000 $t
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:25     .text.HAL_ADCEx_InjectedStart:00000000 HAL_ADCEx_InjectedStart
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:116    .text.HAL_ADCEx_InjectedStop:00000000 $t
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:122    .text.HAL_ADCEx_InjectedStop:00000000 HAL_ADCEx_InjectedStop
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:210    .text.HAL_ADCEx_InjectedPollForConversion:00000000 $t
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:216    .text.HAL_ADCEx_InjectedPollForConversion:00000000 HAL_ADCEx_InjectedPollForConversion
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:510    .text.HAL_ADCEx_InjectedPollForConversion:00000150 $d
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:516    .text.HAL_ADCEx_InjectedStart_IT:00000000 $t
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:522    .text.HAL_ADCEx_InjectedStart_IT:00000000 HAL_ADCEx_InjectedStart_IT
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:618    .text.HAL_ADCEx_InjectedStop_IT:00000000 $t
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:624    .text.HAL_ADCEx_InjectedStop_IT:00000000 HAL_ADCEx_InjectedStop_IT
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:717    .text.HAL_ADCEx_InjectedGetValue:00000000 $t
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:723    .text.HAL_ADCEx_InjectedGetValue:00000000 HAL_ADCEx_InjectedGetValue
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:785    .text.HAL_ADCEx_InjectedConvCpltCallback:00000000 $t
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:791    .text.HAL_ADCEx_InjectedConvCpltCallback:00000000 HAL_ADCEx_InjectedConvCpltCallback
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:806    .text.HAL_ADCEx_InjectedConfigChannel:00000000 $t
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:812    .text.HAL_ADCEx_InjectedConfigChannel:00000000 HAL_ADCEx_InjectedConfigChannel
C:\Users\cedri\AppData\Local\Temp\ccyxtoRW.s:1243   .text.HAL_ADCEx_InjectedConfigChannel:00000238 $d

UNDEFINED SYMBOLS
ADC_Enable
ADC_ConversionStop_Disable
HAL_GetTick
SystemCoreClock
